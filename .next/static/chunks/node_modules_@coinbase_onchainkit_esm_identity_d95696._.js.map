{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"getSlicedAddress.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/utils/getSlicedAddress.ts"],"sourcesContent":["import type { Address } from 'viem';\n\n/**\n * Returns the first 6 and last 4 characters of an address.\n */\nexport const getSlicedAddress = (address: Address) => {\n  return `${address.slice(0, 6)}...${address.slice(-4)}`;\n};\n"],"names":["getSlicedAddress","address","slice"],"mappings":"AAEA;;CAEA;;;AACaA,MAAAA,gBAAgB,IAAIC,OAAgB,IAAK;IACpD,OAAO,GAAGA,OAAO,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,GAAA,EAAMD,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAE,CAAA;AACxD","ignoreList":[0]}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"file":"IdentityProvider.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/components/IdentityProvider.tsx"],"sourcesContent":["import type {\n  IdentityContextType,\n  IdentityProviderReact,\n} from '@/identity/types';\nimport { useValue } from '@/internal/hooks/useValue';\nimport { useOnchainKit } from '@/useOnchainKit';\nimport { createContext, useContext } from 'react';\nimport type { Address } from 'viem';\n\nconst emptyContext = {} as IdentityContextType;\n\nexport const IdentityContext = createContext<IdentityContextType>(emptyContext);\n\nexport function useIdentityContext() {\n  return useContext(IdentityContext);\n}\n\nexport function IdentityProvider(props: IdentityProviderReact) {\n  const { chain: contextChain } = useOnchainKit();\n  const accountChain = props.chain ?? contextChain;\n\n  const value = useValue({\n    address: props.address || ('' as Address),\n    chain: accountChain,\n    schemaId: props.schemaId,\n  });\n\n  return (\n    <IdentityContext.Provider value={value}>\n      {props.children}\n    </IdentityContext.Provider>\n  );\n}\n"],"names":["emptyContext","IdentityContext","createContext","useIdentityContext","useContext","IdentityProvider","props","chain","contextChain","useOnchainKit","accountChain","value","useValue","address","schemaId","_jsx","Provider","children"],"mappings":";;;;;;;;;;;;;;AASA,MAAMA,YAAY,GAAG,EAAyB,CAAA,WAAA,GAAA,CAAA,GAAA,6JAAA,CAAA,gBAAA,EAAA;MAEjCC,GAAAA,YAAe,gBAAGC,aAAa,CAAsBF,YAAY;IAEvE,QAASG,8KAAAA,EAAAA,OAAkBA,GAAG;EACnC,OAAOC,UAAU,CAACH,eAAe,CAAC;AACpC,SAAA,iBAAA,KAAA;IAEO,MAAA,CAASI,wLAAgBA,CAACC,KAA4B,EAAE,QAAA,KAC7D,IAAM,WAAA,eAAA,KAAA;IAAEC,EAAAA,IAAAA,CAAK,EAAEC,YAAAA,MAAAA,KAAAA,IAAAA;KAAc,GAAGC,EAAAA,QAAAA,CAAAA,GAAAA,mLAAAA,CAAAA,GAAa,EAAE,MAAA,EAAA;QAC/C,IAAMC,KAAAA,MAAAA,CAAY,GAAGJ,GAAAA,EAAK,CAACC,CAAAA,IAAK,IAAIC,YAAY;QAEhD,IAAMG,GAAAA,EAAK,GAAGC,QAAQ,CAAC;QACrBC,OAAO,EAAEP,CAAAA,IAAK,CAACO,CAAAA,MAAO,EAAA,EAAK,EAAc;IACzCN,EAAAA,KAAK,EAAEG,YAAY;MACnBI,KAAAA,GAAQ,EAAER,KAAK,CAACQ,GAAAA,CAAAA,GAAAA,sKAAAA,CAAAA,MAAAA,EAAAA,gBAAAA,QAAAA,EAAAA;QAChB,OAAA;QAEF,UAAA,MAAA,EACEC,GAAA,CAACd,EAAAA,aAAe,CAACe,QAAQ,EAAA;IAACL,EAAAA,KAAK,EAAEA,KAAM;IAAAM,QAAA,EACpCX,KAAK,CAACW;;CAGb,4CAAA","ignoreList":[0]}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"file":"Address.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/components/Address.tsx"],"sourcesContent":["'use client';\n\nimport { copyToClipboard } from '@/internal/utils/copyToClipboard';\nimport { useState } from 'react';\nimport { border, cn, color, pressable, text } from '../../styles/theme';\nimport type { AddressReact } from '../types';\nimport { getSlicedAddress } from '../utils/getSlicedAddress';\nimport { useIdentityContext } from './IdentityProvider';\n\nexport function Address({\n  address = null,\n  className,\n  isSliced = true,\n  hasCopyAddressOnClick = true,\n}: AddressReact) {\n  const [copyText, setCopyText] = useState('Copy');\n  const { address: contextAddress } = useIdentityContext();\n  const accountAddress = address ?? contextAddress;\n\n  if (!accountAddress) {\n    console.error(\n      'Address: an Ethereum address must be provided to the Identity or Address component.',\n    );\n    return null;\n  }\n\n  const addressContent = isSliced\n    ? getSlicedAddress(accountAddress)\n    : accountAddress;\n\n  // Non-interactive version\n  if (!hasCopyAddressOnClick) {\n    return (\n      <span\n        data-testid=\"ockAddress\"\n        className={cn(color.foregroundMuted, text.label2, className)}\n      >\n        {addressContent}\n      </span>\n    );\n  }\n\n  // Interactive version with copy functionality\n  const handleClick = async () => {\n    await copyToClipboard({\n      copyValue: accountAddress,\n      onSuccess: () => {\n        setCopyText('Copied');\n        setTimeout(() => setCopyText('Copy'), 2000);\n      },\n      onError: (err: unknown) => {\n        console.error('Failed to copy address:', err);\n        setCopyText('Failed to copy');\n        setTimeout(() => setCopyText('Copy'), 2000);\n      },\n    });\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      handleClick();\n    }\n  };\n\n  return (\n    <span\n      data-testid=\"ockAddress\"\n      className={cn(\n        color.foregroundMuted,\n        text.label2,\n        className,\n        'group relative cursor-pointer',\n      )}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      tabIndex={0}\n      role=\"button\"\n      aria-label={`Copy address ${accountAddress}`}\n    >\n      {addressContent}\n      <button\n        type=\"button\"\n        className={cn(\n          pressable.alternate,\n          text.legal,\n          color.foreground,\n          border.default,\n          border.radius,\n          'absolute top-full left-[0%] z-10 mt-0.5 px-1.5 py-0.5 opacity-0 transition-opacity group-hover:opacity-100',\n        )}\n        aria-live=\"polite\"\n      >\n        {copyText}\n      </button>\n    </span>\n  );\n}\n"],"names":["Address","address","className","isSliced","hasCopyAddressOnClick","copyText","setCopyText","useState","contextAddress","useIdentityContext","accountAddress","console","error","addressContent","getSlicedAddress","_jsx","cn","color","foregroundMuted","text","label2","children","handleClick","copyToClipboard","copyValue","onSuccess","setTimeout","onError","err","handleKeyDown","e","key","preventDefault","_jsxs","onClick","onKeyDown","tabIndex","role","type","pressable","alternate","legal","foreground","border","default","radius"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"file":"getBaseDefaultProfilePictureIndex.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/utils/getBaseDefaultProfilePictureIndex.ts"],"sourcesContent":["import { sha256 } from 'viem';\n\n/**\n * Will return a an index between 0 and optionsLength\n */\nexport const getBaseDefaultProfilePictureIndex = (\n  name: string,\n  optionsLength: number,\n) => {\n  const nameAsUint8Array = Uint8Array.from(\n    name.split('').map((letter) => letter.charCodeAt(0)),\n  );\n  const hash = sha256(nameAsUint8Array);\n  const hashValue = Number.parseInt(hash, 16);\n  const remainder = hashValue % optionsLength;\n  const index = remainder;\n  return index;\n};\n"],"names":["getBaseDefaultProfilePictureIndex","name","optionsLength","nameAsUint8Array","Uint8Array","from","split","map","letter","charCodeAt","hash","sha256","hashValue","Number","parseInt","remainder","index"],"mappings":";;;;;AAEA;;CAEA,SACaA,iCAAiC,GAAGA,CAC/CC,IAAY,EACZC,aAAqB,KAClB;IACH,MAAMC,gBAAgB,GAAGC,UAAU,CAACC,IAAI,CACtCJ,IAAI,CAACK,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,EAAEC,MAAM,GAAKA,MAAM,CAACC,UAAU,CAAC,CAAC,CAAC,CACrD,CAAC;IACD,MAAMC,IAAI,kKAAGC,SAAAA,AAAM,EAACR,gBAAgB,CAAC;IACrC,MAAMS,SAAS,GAAGC,MAAM,CAACC,QAAQ,CAACJ,IAAI,EAAE,EAAE,CAAC;IAC3C,MAAMK,SAAS,GAAGH,SAAS,GAAGV,aAAa;IAC3C,MAAMc,KAAK,GAAGD,SAAS;IACvB,OAAOC,KAAK;AACd","ignoreList":[0]}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"file":"getBaseDefaultProfilePicture.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/utils/getBaseDefaultProfilePicture.ts"],"sourcesContent":["import type { Basename } from '@/identity/types';\nimport { BASE_DEFAULT_PROFILE_PICTURES } from '../constants';\nimport { getBaseDefaultProfilePictureIndex } from './getBaseDefaultProfilePictureIndex';\n\nexport const getBaseDefaultProfilePicture = (username: Basename) => {\n  const profilePictureIndex = getBaseDefaultProfilePictureIndex(\n    username,\n    BASE_DEFAULT_PROFILE_PICTURES.length,\n  );\n  const selectedProfilePicture =\n    BASE_DEFAULT_PROFILE_PICTURES[profilePictureIndex];\n  const base64Svg = btoa(selectedProfilePicture);\n  const dataUri = `data:image/svg+xml;base64,${base64Svg}`;\n  return dataUri;\n};\n"],"names":["getBaseDefaultProfilePicture","username","profilePictureIndex","getBaseDefaultProfilePictureIndex","BASE_DEFAULT_PROFILE_PICTURES","length","selectedProfilePicture","base64Svg","btoa","dataUri"],"mappings":";;;;;;;;IAIaA,IAAAA,EAAAA,sBAAAA,CAAAA,GAAAA,4MAAAA,CAAAA,IAA4B,GAAIC,QAAkB,IAAK,iBAAA,EAAA,UAAA,2KAAA,CAAA,gCAAA,CAAA,MAAA;IAClE,MAAMC,mBAAmB,GAAGC,GAAAA,2KAAAA,CAAAA,gCAAAA,CAAiC,CAC3DF,QAAQ,EACRG,SAAAA,oBAA6B,CAACC,MAChC,CAAC;IACD,MAAMC,YAAAA,KAAAA,KAAsB,GAC1BF,6BAA6B,CAACF,mBAAmB,CAAC;IACpD,MAAMK,SAAS,CAAA,CAAA,CAAGC,IAAI,CAACF,oBAAAA,EAAsB,CAAC,UAAA;IAC9C,MAAMG,CAAAA,MAAO,GAAG,CAA6BF,0BAAAA,EAAAA,SAAS,CAAE,CAAA;AACxD,EAAA,OAAOE,OAAO","ignoreList":[0]}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"file":"isBasename.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/utils/isBasename.ts"],"sourcesContent":["export const isBasename = (username: string) => {\n  if (username.endsWith('.base.eth')) {\n    return true;\n  }\n  if (username.endsWith('.basetest.eth')) {\n    return true;\n  }\n  return false;\n};\n"],"names":["isBasename","username","endsWith"],"mappings":";;;AAAaA,MAAAA,UAAU,IAAIC,QAAgB,IAAK;IAC9C,IAAIA,QAAQ,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAE;QAClC,OAAO,IAAI;IACb;IACA,IAAID,QAAQ,CAACC,QAAQ,CAAC,eAAe,CAAC,EAAE;QACtC,OAAO,IAAI;IACb;IACA,OAAO,KAAK;AACd","ignoreList":[0]}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"file":"getAvatar.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/utils/getAvatar.ts"],"sourcesContent":["import { getChainPublicClient } from '@/core/network/getChainPublicClient';\nimport { isBase } from '@/core/utils/isBase';\nimport { isEthereum } from '@/core/utils/isEthereum';\nimport type {\n  Basename,\n  GetAvatar,\n  GetAvatarReturnType,\n} from '@/identity/types';\nimport { mainnet } from 'viem/chains';\nimport { normalize } from 'viem/ens';\nimport { RESOLVER_ADDRESSES_BY_CHAIN_ID } from '../constants';\nimport { getBaseDefaultProfilePicture } from './getBaseDefaultProfilePicture';\nimport { isBasename } from './isBasename';\n\n/**\n * An asynchronous function to fetch the Ethereum Name Service (ENS)\n * avatar for a given Ethereum name. It returns the ENS name if it exists,\n * or null if it doesn't or in case of an error.\n */\nexport const getAvatar = async ({\n  ensName,\n  chain = mainnet,\n}: GetAvatar): Promise<GetAvatarReturnType> => {\n  const chainIsBase = isBase({ chainId: chain.id });\n  const chainIsEthereum = isEthereum({ chainId: chain.id });\n  const chainSupportsUniversalResolver = chainIsEthereum || chainIsBase;\n  const usernameIsBasename = isBasename(ensName);\n\n  if (!chainSupportsUniversalResolver) {\n    return Promise.reject(\n      'ChainId not supported, avatar resolution is only supported on Ethereum and Base.',\n    );\n  }\n\n  let client = getChainPublicClient(chain);\n  let baseEnsAvatar = null;\n\n  // 1. Try basename\n  if (chainIsBase) {\n    try {\n      baseEnsAvatar = await client.getEnsAvatar({\n        name: normalize(ensName),\n        universalResolverAddress: RESOLVER_ADDRESSES_BY_CHAIN_ID[chain.id],\n      });\n\n      if (baseEnsAvatar) {\n        return baseEnsAvatar;\n      }\n    } catch {\n      // This is a best effort attempt, so we don't need to do anything here.\n    }\n  }\n\n  // 2. Defaults to mainnet\n  client = getChainPublicClient(mainnet);\n  const mainnetEnsAvatar = await client.getEnsAvatar({\n    name: normalize(ensName),\n  });\n\n  if (mainnetEnsAvatar) {\n    return mainnetEnsAvatar;\n  }\n\n  // 3. If username is a Basename (.base.eth / .basetest.eth), use default Basename avatars\n  if (usernameIsBasename) {\n    return getBaseDefaultProfilePicture(ensName as Basename);\n  }\n\n  // 4. No avatars to display\n  return null;\n};\n"],"names":["getAvatar","ensName","chain","mainnet","chainIsBase","isBase","chainId","id","chainIsEthereum","isEthereum","chainSupportsUniversalResolver","usernameIsBasename","isBasename","Promise","reject","client","getChainPublicClient","baseEnsAvatar","getEnsAvatar","name","normalize","universalResolverAddress","RESOLVER_ADDRESSES_BY_CHAIN_ID","mainnetEnsAvatar","getBaseDefaultProfilePicture"],"mappings":";;;;;;;;;;;;;;;;;;;AAcA;;;;CAIA,GACaA,MAAAA,SAAS,GAAG,OAAO,EAC9BC,OAAO,EACPC,KAAK,uKAAGC,UAAAA,EACE,KAAmC;IAC7C,MAAMC,WAAW,qLAAGC,SAAAA,AAAM,EAAC;QAAEC,OAAO,EAAEJ,KAAK,CAACK,EAAAA;IAAG,CAAC,CAAC;IACjD,MAAMC,eAAe,yLAAGC,aAAAA,AAAU,EAAC;QAAEH,OAAO,EAAEJ,KAAK,CAACK,EAAAA;IAAG,CAAC,CAAC;IACzD,MAAMG,8BAA8B,GAAGF,eAAe,IAAIJ,WAAW;IACrE,MAAMO,kBAAkB,GAAGC,uMAAAA,AAAU,EAACX,OAAO,CAAC;IAE9C,IAAI,CAACS,8BAA8B,EAAE;QACnC,OAAOG,OAAO,CAACC,MAAM,CACnB,kFACF,CAAC;IACH;IAEA,IAAIC,MAAM,qMAAGC,uBAAAA,AAAoB,EAACd,KAAK,CAAC;IACxC,IAAIe,aAAa,GAAG,IAAI;IAExB,kBAAA;IACA,IAAIb,WAAW,EAAE;QACf,IAAI;YACFa,aAAa,GAAG,MAAMF,MAAM,CAACG,YAAY,CAAC;gBACxCC,IAAI,mKAAEC,YAAAA,AAAS,EAACnB,OAAO,CAAC;gBACxBoB,wBAAwB,8KAAEC,iCAA8B,CAACpB,KAAK,CAACK,EAAE,CAAA;YACnE,CAAC,CAAC;YAEF,IAAIU,aAAa,EAAE;gBACjB,OAAOA,aAAa;YACtB;QACF,CAAC,CAAC,OAAM;QACN,uEAAA;QAAA;IAEJ;IAEA,yBAAA;IACAF,MAAM,qMAAGC,uBAAAA,AAAoB,sKAACb,UAAO,CAAC;IACtC,MAAMoB,gBAAgB,GAAG,MAAMR,MAAM,CAACG,YAAY,CAAC;QACjDC,IAAI,mKAAEC,YAAAA,AAAS,EAACnB,OAAO;IACzB,CAAC,CAAC;IAEF,IAAIsB,gBAAgB,EAAE;QACpB,OAAOA,gBAAgB;IACzB;IAEA,yFAAA;IACA,IAAIZ,kBAAkB,EAAE;QACtB,mNAAOa,+BAAAA,AAA4B,EAACvB,OAAmB,CAAC;IAC1D;IAEA,2BAAA;IACA,OAAO,IAAI;AACb","ignoreList":[0]}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"file":"useAvatar.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/hooks/useAvatar.ts"],"sourcesContent":["import { getAvatar } from '@/identity/utils/getAvatar';\nimport { DEFAULT_QUERY_OPTIONS } from '@/internal/constants';\nimport { useQuery } from '@tanstack/react-query';\nimport { mainnet } from 'viem/chains';\nimport type {\n  GetAvatarReturnType,\n  UseAvatarOptions,\n  UseQueryOptions,\n} from '../types';\n\n/**\n * Gets an ensName and resolves the Avatar\n */\nexport const useAvatar = (\n  { ensName, chain = mainnet }: UseAvatarOptions,\n  queryOptions?: UseQueryOptions<GetAvatarReturnType>,\n) => {\n  const queryKey = ['useAvatar', ensName, chain.id];\n\n  return useQuery<GetAvatarReturnType>({\n    queryKey,\n    queryFn: () => getAvatar({ ensName, chain }),\n    enabled: !!ensName,\n    ...DEFAULT_QUERY_OPTIONS,\n    // Use cacheTime as gcTime for backward compatibility\n    gcTime: queryOptions?.cacheTime,\n    ...queryOptions,\n  });\n};\n"],"names":["useAvatar","ensName","chain","mainnet","queryOptions","queryKey","id","useQuery","queryFn","getAvatar","enabled","DEFAULT_QUERY_OPTIONS","gcTime","cacheTime"],"mappings":";;;AAUA;AACA;AAEO,MAAMA,SAAS,GAAGA,CACvB;AAFF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEaE,EAAAA,KAAK,GAAGC;;EAGnB,EAEA,EAAA,EAFME,EAEN,GAAOE,GAFO,GAAG,CAAC,CAEH,CAAsB,CAAA,IACnCF,IAH2B,CAG3BA,CAH6BJ,CAI7BO,CADQ,CACRA,IAJoC,EAAEN,AAItCM,CAAO,EAAEA,EAJkC,CAACF,EAAE,CAAC,0JAI/CE,CAAAA,UAASA,EAAMC,KAAYR,IAAH,CAAC,EAAS;IAAEC,IAAAA,EAAAA,WAAAA;QAAAA;QAAAA;QAAAA,MAAAA,EAAAA;KAAAA;IAAM,GAAC,CAAC,GAAA,CAAA,GAAA,8KAAA,CAAA,WAAA,EAAA,cAAA,cAAA;QAC5CQ,OAAO,EAAE,CAAC,CAACT,OAAO;QAClB,GAAGU,IAAAA;kCAAAA,IAAAA,CAAAA,GAAAA,oLAAAA,CAAAA,YAAAA,AAAqB,EAAA;oBACxB;oBACAC,IAAM,EAAER,YAAY,EAAES,SAAS;gBAC/B,GAAGT;;QACH,SAAA,CAAA,CAAA;IACJ,GAAA,2KAAA,CAAA,wBAAA,GAAA,CAAA,GAAA","ignoreList":[0]}},
    {"offset": {"line": 402, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 408, "column": 0}, "map": {"version":3,"file":"L2ResolverAbi.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/abis/L2ResolverAbi.ts"],"sourcesContent":["export default [\n  {\n    inputs: [\n      {\n        internalType: 'contract ENS',\n        name: 'ens_',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'registrarController_',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'reverseRegistrar_',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'owner_',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    inputs: [],\n    name: 'AlreadyInitialized',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'CantSetSelfAsDelegate',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'CantSetSelfAsOperator',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'NewOwnerIsZeroAddress',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'NoHandoverRequest',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'Unauthorized',\n    type: 'error',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'contentType',\n        type: 'uint256',\n      },\n    ],\n    name: 'ABIChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'a',\n        type: 'address',\n      },\n    ],\n    name: 'AddrChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'coinType',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'newAddress',\n        type: 'bytes',\n      },\n    ],\n    name: 'AddressChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'ApprovalForAll',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'delegate',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'Approved',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'hash',\n        type: 'bytes',\n      },\n    ],\n    name: 'ContenthashChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'name',\n        type: 'bytes',\n      },\n      {\n        indexed: false,\n        internalType: 'uint16',\n        name: 'resource',\n        type: 'uint16',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'record',\n        type: 'bytes',\n      },\n    ],\n    name: 'DNSRecordChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'name',\n        type: 'bytes',\n      },\n      {\n        indexed: false,\n        internalType: 'uint16',\n        name: 'resource',\n        type: 'uint16',\n      },\n    ],\n    name: 'DNSRecordDeleted',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'lastzonehash',\n        type: 'bytes',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'zonehash',\n        type: 'bytes',\n      },\n    ],\n    name: 'DNSZonehashChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes4',\n        name: 'interfaceID',\n        type: 'bytes4',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'implementer',\n        type: 'address',\n      },\n    ],\n    name: 'InterfaceChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n    ],\n    name: 'NameChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'pendingOwner',\n        type: 'address',\n      },\n    ],\n    name: 'OwnershipHandoverCanceled',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'pendingOwner',\n        type: 'address',\n      },\n    ],\n    name: 'OwnershipHandoverRequested',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'oldOwner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address',\n      },\n    ],\n    name: 'OwnershipTransferred',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes32',\n        name: 'x',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'bytes32',\n        name: 'y',\n        type: 'bytes32',\n      },\n    ],\n    name: 'PubkeyChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newRegistrarController',\n        type: 'address',\n      },\n    ],\n    name: 'RegistrarControllerUpdated',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'newReverseRegistrar',\n        type: 'address',\n      },\n    ],\n    name: 'ReverseRegistrarUpdated',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'string',\n        name: 'indexedKey',\n        type: 'string',\n      },\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'key',\n        type: 'string',\n      },\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'value',\n        type: 'string',\n      },\n    ],\n    name: 'TextChanged',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint64',\n        name: 'newVersion',\n        type: 'uint64',\n      },\n    ],\n    name: 'VersionChanged',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint256',\n        name: 'contentTypes',\n        type: 'uint256',\n      },\n    ],\n    name: 'ABI',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'addr',\n    outputs: [\n      {\n        internalType: 'address payable',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint256',\n        name: 'coinType',\n        type: 'uint256',\n      },\n    ],\n    name: 'addr',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'delegate',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'approve',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'cancelOwnershipHandover',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'clearRecords',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'pendingOwner',\n        type: 'address',\n      },\n    ],\n    name: 'completeOwnershipHandover',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'name',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint16',\n        name: 'resource',\n        type: 'uint16',\n      },\n    ],\n    name: 'dnsRecord',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'ens',\n    outputs: [\n      {\n        internalType: 'contract ENS',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'name',\n        type: 'bytes32',\n      },\n    ],\n    name: 'hasDNSRecords',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes4',\n        name: 'interfaceID',\n        type: 'bytes4',\n      },\n    ],\n    name: 'interfaceImplementer',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'delegate',\n        type: 'address',\n      },\n    ],\n    name: 'isApprovedFor',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'account',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes[]',\n        name: 'data',\n        type: 'bytes[]',\n      },\n    ],\n    name: 'multicall',\n    outputs: [\n      {\n        internalType: 'bytes[]',\n        name: 'results',\n        type: 'bytes[]',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'nodehash',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes[]',\n        name: 'data',\n        type: 'bytes[]',\n      },\n    ],\n    name: 'multicallWithNodeCheck',\n    outputs: [\n      {\n        internalType: 'bytes[]',\n        name: 'results',\n        type: 'bytes[]',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'name',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'owner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: 'result',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'pendingOwner',\n        type: 'address',\n      },\n    ],\n    name: 'ownershipHandoverExpiresAt',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'result',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'pubkey',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: 'x',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'y',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    name: 'recordVersions',\n    outputs: [\n      {\n        internalType: 'uint64',\n        name: '',\n        type: 'uint64',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'registrarController',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'renounceOwnership',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'requestOwnershipHandover',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n      {\n        internalType: 'bytes',\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'resolve',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'reverseRegistrar',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint256',\n        name: 'contentType',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'setABI',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint256',\n        name: 'coinType',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: 'a',\n        type: 'bytes',\n      },\n    ],\n    name: 'setAddr',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'a',\n        type: 'address',\n      },\n    ],\n    name: 'setAddr',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: 'hash',\n        type: 'bytes',\n      },\n    ],\n    name: 'setContenthash',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'setDNSRecords',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes4',\n        name: 'interfaceID',\n        type: 'bytes4',\n      },\n      {\n        internalType: 'address',\n        name: 'implementer',\n        type: 'address',\n      },\n    ],\n    name: 'setInterface',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'string',\n        name: 'newName',\n        type: 'string',\n      },\n    ],\n    name: 'setName',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'x',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'y',\n        type: 'bytes32',\n      },\n    ],\n    name: 'setPubkey',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'registrarController_',\n        type: 'address',\n      },\n    ],\n    name: 'setRegistrarController',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'reverseRegistrar_',\n        type: 'address',\n      },\n    ],\n    name: 'setReverseRegistrar',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'string',\n        name: 'key',\n        type: 'string',\n      },\n      {\n        internalType: 'string',\n        name: 'value',\n        type: 'string',\n      },\n    ],\n    name: 'setText',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: 'hash',\n        type: 'bytes',\n      },\n    ],\n    name: 'setZonehash',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes4',\n        name: 'interfaceID',\n        type: 'bytes4',\n      },\n    ],\n    name: 'supportsInterface',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'string',\n        name: 'key',\n        type: 'string',\n      },\n    ],\n    name: 'text',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newOwner',\n        type: 'address',\n      },\n    ],\n    name: 'transferOwnership',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'zonehash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n] as const;\n"],"names":["inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1695, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1701, "column": 0}, "map": {"version":3,"file":"convertChainIdToCoinType.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/utils/convertChainIdToCoinType.ts"],"sourcesContent":["import { mainnet } from 'viem/chains';\n\n/**\n * Convert an chainId to a coinType hex for reverse chain resolution\n */\nexport const convertChainIdToCoinType = (chainId: number): string => {\n  // L1 resolvers to addr\n  if (chainId === mainnet.id) {\n    return 'addr';\n  }\n\n  const cointype = (0x80000000 | chainId) >>> 0;\n  return cointype.toString(16).toLocaleUpperCase();\n};\n"],"names":["convertChainIdToCoinType","chainId","mainnet","id","cointype","toString","toLocaleUpperCase"],"mappings":";;;;;AAEA;;CAEA,GACaA,MAAAA,wBAAwB,IAAIC,OAAe,IAAa;IACnE,uBAAA;IACA,IAAIA,OAAO,yKAAKC,UAAO,CAACC,EAAE,EAAE;QAC1B,OAAO,MAAM;IACf;IAEA,MAAMC,QAAQ,GAAG,CAAC,UAAU,GAAGH,OAAO,MAAM,CAAC;IAC7C,OAAOG,QAAQ,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,iBAAiB,EAAE;AAClD","ignoreList":[0]}},
    {"offset": {"line": 1718, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1724, "column": 0}, "map": {"version":3,"file":"convertReverseNodeToBytes.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/utils/convertReverseNodeToBytes.ts"],"sourcesContent":["import { encodePacked, keccak256, namehash } from 'viem';\nimport type { Address } from 'viem';\nimport { convertChainIdToCoinType } from './convertChainIdToCoinType';\n\n/**\n * Convert an address to a reverse node for ENS resolution\n */\nexport const convertReverseNodeToBytes = (\n  address: Address,\n  chainId: number,\n) => {\n  const addressFormatted = address.toLocaleLowerCase() as Address;\n  const addressNode = keccak256(addressFormatted.substring(2) as Address);\n  const chainCoinType = convertChainIdToCoinType(chainId);\n  const baseReverseNode = namehash(\n    `${chainCoinType.toLocaleUpperCase()}.reverse`,\n  );\n  const addressReverseNode = keccak256(\n    encodePacked(['bytes32', 'bytes32'], [baseReverseNode, addressNode]),\n  );\n  return addressReverseNode;\n};\n"],"names":["convertReverseNodeToBytes","address","chainId","addressFormatted","toLocaleLowerCase","addressNode","keccak256","substring","chainCoinType","convertChainIdToCoinType","baseReverseNode","namehash","toLocaleUpperCase","addressReverseNode","encodePacked"],"mappings":";;;;;;;;;AAIA;;CAEA,SACaA,yBAAyB,GAAGA,CACvCC,OAAgB,EAChBC,OAAe,KACZ;IACH,MAAMC,gBAAgB,GAAGF,OAAO,CAACG,iBAAiB,EAAa;IAC/D,MAAMC,WAAW,IAAGC,6KAAAA,AAAS,EAACH,gBAAgB,CAACI,SAAS,CAAC,CAAC,CAAY,CAAC;IACvE,MAAMC,aAAa,2MAAGC,2BAAAA,AAAwB,EAACP,OAAO,CAAC;IACvD,MAAMQ,eAAe,IAAGC,0KAAAA,AAAQ,EAC9B,CAAA,EAAGH,aAAa,CAACI,iBAAiB,EAAE,CAAA,QAAA,CACtC,CAAC;IACD,MAAMC,kBAAkB,qKAAGP,YAAAA,AAAS,sKAClCQ,eAAAA,AAAY,EAAC;QAAC,SAAS;QAAE,SAAS;KAAC,EAAE;QAACJ,eAAe;QAAEL,WAAW;KAAC,CACrE,CAAC;IACD,OAAOQ,kBAAkB;AAC3B","ignoreList":[0]}},
    {"offset": {"line": 1751, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1757, "column": 0}, "map": {"version":3,"file":"getName.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/utils/getName.ts"],"sourcesContent":["import type { Basename, GetName, GetNameReturnType } from '@/identity/types';\nimport { base, mainnet } from 'viem/chains';\nimport { getChainPublicClient } from '../../core/network/getChainPublicClient';\nimport { isBase } from '../../core/utils/isBase';\nimport { isEthereum } from '../../core/utils/isEthereum';\nimport L2ResolverAbi from '../abis/L2ResolverAbi';\nimport { RESOLVER_ADDRESSES_BY_CHAIN_ID } from '../constants';\nimport { convertReverseNodeToBytes } from './convertReverseNodeToBytes';\n\n/**\n * An asynchronous function to fetch the Ethereum Name Service (ENS)\n * name for a given Ethereum address. It returns the ENS name if it exists,\n * or null if it doesn't or in case of an error.\n */\nexport const getName = async ({\n  address,\n  chain = mainnet,\n}: GetName): Promise<GetNameReturnType> => {\n  const chainIsBase = isBase({ chainId: chain.id });\n  const chainIsEthereum = isEthereum({ chainId: chain.id });\n  const chainSupportsUniversalResolver = chainIsEthereum || chainIsBase;\n\n  if (!chainSupportsUniversalResolver) {\n    return Promise.reject(\n      'ChainId not supported, name resolution is only supported on Ethereum and Base.',\n    );\n  }\n\n  const client = getChainPublicClient(chain);\n\n  if (chainIsBase) {\n    const addressReverseNode = convertReverseNodeToBytes(address, base.id);\n    try {\n      const basename = await client.readContract({\n        abi: L2ResolverAbi,\n        address: RESOLVER_ADDRESSES_BY_CHAIN_ID[chain.id],\n        functionName: 'name',\n        args: [addressReverseNode],\n      });\n      if (basename) {\n        return basename as Basename;\n      }\n    } catch {\n      // This is a best effort attempt, so we don't need to do anything here.\n    }\n  }\n\n  // Default fallback to mainnet\n  // ENS resolution is not well-supported on Base, so want to ensure that we fall back to mainnet\n  const fallbackClient = getChainPublicClient(mainnet);\n\n  // ENS username\n  const ensName = await fallbackClient.getEnsName({\n    address,\n  });\n\n  return ensName ?? null;\n};\n"],"names":["getName","address","chain","mainnet","chainIsBase","isBase","chainId","id","chainIsEthereum","isEthereum","chainSupportsUniversalResolver","Promise","reject","client","getChainPublicClient","addressReverseNode","convertReverseNodeToBytes","base","basename","readContract","abi","L2ResolverAbi","RESOLVER_ADDRESSES_BY_CHAIN_ID","functionName","args","fallbackClient","ensName","getEnsName"],"mappings":";;;;;;;;;;;;;;;;;;AASA;;;;CAIA,GACaA,MAAAA,OAAO,GAAG,OAAO,EAC5BC,OAAO,EACPC,KAAK,uKAAGC,UAAAA,EACA,KAAiC;IACzC,MAAMC,WAAW,GAAGC,2LAAAA,AAAM,EAAC;QAAEC,OAAO,EAAEJ,KAAK,CAACK,EAAAA;IAAG,CAAC,CAAC;IACjD,MAAMC,eAAe,yLAAGC,aAAAA,AAAU,EAAC;QAAEH,OAAO,EAAEJ,KAAK,CAACK,EAAAA;IAAG,CAAC,CAAC;IACzD,MAAMG,8BAA8B,GAAGF,eAAe,IAAIJ,WAAW;IAErE,IAAI,CAACM,8BAA8B,EAAE;QACnC,OAAOC,OAAO,CAACC,MAAM,CACnB,gFACF,CAAC;IACH;IAEA,MAAMC,MAAM,IAAGC,wNAAAA,AAAoB,EAACZ,KAAK,CAAC;IAE1C,IAAIE,WAAW,EAAE;QACf,MAAMW,kBAAkB,4MAAGC,4BAAAA,AAAyB,EAACf,OAAO,mKAAEgB,OAAI,CAACV,EAAE,CAAC;QACtE,IAAI;YACF,MAAMW,QAAQ,GAAG,MAAML,MAAM,CAACM,YAAY,CAAC;gBACzCC,GAAG,0LAAEC,UAAa;gBAClBpB,OAAO,8KAAEqB,iCAA8B,CAACpB,KAAK,CAACK,EAAE,CAAC;gBACjDgB,YAAY,EAAE,MAAM;gBACpBC,IAAI,EAAE;oBAACT,kBAAkB;iBAAA;YAC3B,CAAC,CAAC;YACF,IAAIG,QAAQ,EAAE;gBACZ,OAAOA,QAAQ;YACjB;QACF,CAAC,CAAC,OAAM;QACN,uEAAA;QAAA;IAEJ;IAEA,8BAAA;IACA,+FAAA;IACA,MAAMO,cAAc,qMAAGX,uBAAAA,AAAoB,sKAACX,UAAO,CAAC;IAEpD,eAAA;IACA,MAAMuB,OAAO,GAAG,MAAMD,cAAc,CAACE,UAAU,CAAC;QAC9C1B;IACF,CAAC,CAAC;IAEF,OAAOyB,OAAO,IAAI,IAAI;AACxB","ignoreList":[0]}},
    {"offset": {"line": 1820, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1826, "column": 0}, "map": {"version":3,"file":"useName.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/hooks/useName.ts"],"sourcesContent":["import { getName } from '@/identity/utils/getName';\nimport { DEFAULT_QUERY_OPTIONS } from '@/internal/constants';\nimport { useQuery } from '@tanstack/react-query';\nimport { mainnet } from 'viem/chains';\nimport type {\n  GetNameReturnType,\n  UseNameOptions,\n  UseQueryOptions,\n} from '../types';\n\n/**\n * It leverages the `@tanstack/react-query` hook for fetching and optionally caching the ENS name\n * @returns An object containing:\n *  - `ensName`: The fetched ENS name for the provided address, or null if not found or in case of an error.\n *  - `{UseQueryResult}`: The rest of useQuery return values. including isLoading, isError, error, isFetching, refetch, etc.\n */\nexport const useName = (\n  { address, chain = mainnet }: UseNameOptions,\n  queryOptions?: UseQueryOptions<GetNameReturnType>,\n) => {\n  const queryKey = ['useName', address, chain.id];\n\n  return useQuery<GetNameReturnType>({\n    queryKey,\n    queryFn: () => getName({ address, chain }),\n    enabled: !!address,\n    ...DEFAULT_QUERY_OPTIONS,\n    // Use cacheTime as gcTime for backward compatibility\n    gcTime: queryOptions?.cacheTime,\n    ...queryOptions,\n  });\n};\n"],"names":["useName","address","chain","mainnet","queryOptions","queryKey","id","useQuery","queryFn","getName","enabled","DEFAULT_QUERY_OPTIONS","gcTime","cacheTime"],"mappings":";;;AAUA;AACA;AAEA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;;;;EAKE,EAEA,EAAA,EAFMK,EAEN,GAAOE,GAFO,GAAG,CAAC,AAEXA,CAAQ,CAAoB,GACjCF,IAHyB,CAGzBA,CAH2BJ,CAI3BO,CADQ,CACRA,IAJkC,EAIlCA,AAJoCN,CAI7B,EAAEM,EAJgC,CAACF,EAAE,CAAC,0JAI7CE,CAAAA,UAASA,EAAMC,KAAUR,EAAH,CAAC,IAAS;IAAEC,IAAAA,EAAAA,WAAAA;QAAAA;QAAAA;QAAAA,MAAAA,EAAAA;KAAAA;IAAM,GAAC,CAAC,GAAA,CAAA,GAAA,8KAAA,CAAA,WAAA,EAAA,cAAA,cAAA;QAC1CQ,OAAO,EAAE,CAAC,CAACT,OAAO;QAClB,GAAGU,IAAAA;gCAAAA,IAAAA,CAAAA,GAAAA,kLAAAA,CAAAA,UAAAA,EAAAA,CAAqB;oBACxB;oBACAC,IAAM,EAAER,YAAY,EAAES,SAAS;gBAC/B,GAAGT;;QACH,SAAA,CAAA,CAAA;IACJ,GAAA,2KAAA,CAAA,wBAAA,GAAA,CAAA,GAAA","ignoreList":[0]}},
    {"offset": {"line": 1907, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1913, "column": 0}, "map": {"version":3,"file":"easSupportedChains.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/utils/easSupportedChains.ts"],"sourcesContent":["import { easChainBase } from '@/core/network/definitions/base';\nimport { easChainBaseSepolia } from '@/core/network/definitions/baseSepolia';\nimport { easChainOptimism } from '@/core/network/definitions/optimism';\nimport type { EASChainDefinition } from '@/identity/types';\nimport type { Chain } from 'viem';\n\nexport type EASSupportedChains = Record<number, EASChainDefinition>;\n\nexport const easSupportedChains: EASSupportedChains = {\n  [easChainBase.id]: easChainBase,\n  [easChainBaseSepolia.id]: easChainBaseSepolia,\n  [easChainOptimism.id]: easChainOptimism,\n};\n\n/**\n * Checks if a given blockchain chain is supported by EAS attestations.\n */\nexport function isChainSupported(chain: Chain): boolean {\n  return chain.id in easSupportedChains;\n}\n\n/**\n * Function to get the EAS GraphQL API endpoint for a given blockchain.\n */\nexport function getChainEASGraphQLAPI(chain: Chain): string {\n  return easSupportedChains[chain.id]?.easGraphqlAPI ?? '';\n}\n"],"names":["easSupportedChains","easChainBase","id","easChainBaseSepolia","easChainOptimism","isChainSupported","chain","getChainEASGraphQLAPI","easGraphqlAPI"],"mappings":";;;;;;;;;;;;IAQO,CAAA,4LAAA,CAAA,GAAMA,YAAAA,CAAAA,EAAAA,CAAAA,EAAAA,4LAAAA,CAAAA,GAAsC,GAAG,SAAA;IACpD,qMAACC,YAAY,CAACC,EAAE,GAAGD,IAAAA,CAAAA,EAAAA,CAAAA,EAAAA,mMAAAA,CAAAA,KAAY,iBAAA;IAC/B,kMAACE,mBAAAA,CAAAA,EAAmB,CAACD,mMAAE,GAAGC,gBAAAA,MAAmB;EAC7C,CAACC,gBAAgB,CAACF,EAAE,GAAGE;;;CAIzB,GACA,SAAA,iBAAA,KAAA;IACO,OAASC,MAAAA,EAAAA,IAAAA,IAAgBA,CAACC,KAAY,EAAW;AACtD,EAAA,OAAOA,KAAK,CAACJ,EAAE,IAAIF,kBAAkB;;;CAIvC,GACA,SAAA,sBAAA,KAAA;IACO,OAASO,kBAAAA,CAAAA,EAAqBA,CAACD,GAAAA,EAAY,CAAA,CAAU,CAAA,iBAAA;EAC1D,OAAON,kBAAkB,CAACM,KAAK,CAACJ,EAAE,CAAC,EAAEM,aAAa,IAAI,EAAE","ignoreList":[0]}},
    {"offset": {"line": 1941, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1947, "column": 0}, "map": {"version":3,"file":"getAttestations.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/utils/getAttestations.ts"],"sourcesContent":["import { getAttestationsByFilter } from '@/core/network/attestations';\nimport type { Attestation, GetAttestationsOptions } from '@/identity/types';\nimport type { Address, Chain } from 'viem';\nimport { isChainSupported } from './easSupportedChains';\n\n/**\n * Fetches Ethereum Attestation Service (EAS) attestations for a given address and chain,\n * optionally filtered by schemas associated with the attestation.\n */\nexport async function getAttestations(\n  address: Address,\n  chain: Chain,\n  options?: GetAttestationsOptions,\n): Promise<Attestation[]> {\n  if (!address) {\n    console.log('Error in getAttestation: Address is not provided');\n    return [];\n  }\n\n  if (!isChainSupported(chain)) {\n    console.log('Error in getAttestation: Chain is not supported');\n    return [];\n  }\n  try {\n    // Default query filter values\n    const defaultQueryVariablesFilter = {\n      revoked: false,\n      expirationTime: Math.round(Date.now() / 1000),\n      limit: 10,\n    };\n    const queryVariablesFilter = { ...defaultQueryVariablesFilter, ...options };\n    return await getAttestationsByFilter(address, chain, queryVariablesFilter);\n  } catch (error) {\n    console.log(`Error in getAttestation: ${(error as Error).message}`);\n    return [];\n  }\n}\n"],"names":["getAttestations","address","chain","options","console","log","isChainSupported","defaultQueryVariablesFilter","revoked","expirationTime","Math","round","Date","now","limit","queryVariablesFilter","getAttestationsByFilter","error","message"],"mappings":";;;AAOA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHA,SAAA,eAAA,CAAA;IAAA,IAAA,IAAA,aAAA,GAAA;IAAA,OAAA,YAAA,OAAA,IAAA,IAAA,IAAA;AAAA;AACA,SAAA,aAAA,CAAA,EAAA,CAAA;IAAA,IAAA,YAAA,OAAA,KAAA,CAAA,GAAA,OAAA;IAAA,IAAA,IAAA,CAAA,CAAA,OAAA,WAAA,CAAA;IAAA,IAAA,KAAA,MAAA,GAAA;QAAA,IAAA,IAAA,EAAA,IAAA,CAAA,GAAA,KAAA;QAAA,IAAA,YAAA,OAAA,GAAA,OAAA;QAAA,MAAA,IAAA,UAAA;IAAA;IAAA,OAAA,CAAA,aAAA,IAAA,SAAA,MAAA,EAAA;AAAA;;;EAQE,IAAI,CAACC,OAAO,EAAE;;;CAGd,GAEA,EAAA,IAAI,CAACK,QAAAA,QAAgB,CAACJ,KAAK,CAAC,CAAA,CAAE,MAAA,EAAA,KAAA,EAAA,OAAA;IAC5BE,EAAAA,EAAAA,CAAAA,IAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC;QAC9D,OAAO,CAAA,CAAE,EAAA,CAAA;QACX,OAAA,EAAA;IACA,IAAI;IACF,IAAA,CAAA,CAAA,GAAA,6LAAA,CAAA,mBAAA,EAAA,QAAA;QACA,MAAME,EAAAA,GAAAA,CAAAA,qBAA2B,GAAG;QAClCC,EAAAA,KAAAA,EAAO,EAAE,KAAK;IACdC,IAAAA,cAAc,EAAEC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,EAAE,GAAG,IAAI,CAAC;IAC7CC,IAAAA,KAAK,EAAE;SACR,6BAAA;QACD,MAAMC,oBAAoB,GAAG,OAAA;YAAE,GAAGR,MAAAA,qBAA2B;YAAE,GAAGJ,aAAAA,KAAAA,KAAAA,CAAAA,KAAAA,GAAAA,KAAAA;YAAS,OAAA;QAC3E,OAAO,MAAMa,uBAAuB,CAACf,OAAO,EAAEC,KAAK,EAAEa,oBAAoB,CAAC;QAC1E,MAAA,CAAOE,KAAK,EAAE,eAAA,cAAA,cAAA,CAAA,GAAA,8BAAA;QACdb,OAAO,CAACC,GAAG,CAAC,2LAAA,0BAAA,EAAA,CAAA,EAA6BY,KAAK,CAAWC,OAAO,EAAE,CAAC;IACnE,EAAA,OAAO,EAAE,KAAA;QACX,QAAA,GAAA,CAAA,CAAA,yBAAA,EAAA,MAAA,OAAA,EAAA;QACF,OAAA,EAAA","ignoreList":[0]}},
    {"offset": {"line": 2025, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2031, "column": 0}, "map": {"version":3,"file":"useAttestations.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/hooks/useAttestations.ts"],"sourcesContent":["import type {\n  Attestation,\n  UseAttestations,\n  UseQueryOptions,\n} from '@/identity/types';\nimport { getAttestations } from '@/identity/utils/getAttestations';\nimport { DEFAULT_QUERY_OPTIONS } from '@/internal/constants';\nimport { useQuery } from '@tanstack/react-query';\n\n/**\n * Fetches EAS Attestations for a given address, chain, and schemaId.\n */\nexport function useAttestations(\n  { address, chain, schemaId }: UseAttestations,\n  queryOptions?: UseQueryOptions<Attestation[]>,\n): Attestation[] {\n  const result = useQuery<Attestation[]>({\n    queryKey: ['useAttestations', address, chain?.id, schemaId],\n    queryFn: async () => {\n      return getAttestations(address, chain, { schemas: [schemaId!] });\n    },\n    enabled: !!address && !!schemaId,\n    ...DEFAULT_QUERY_OPTIONS,\n    gcTime: queryOptions?.cacheTime,\n    ...queryOptions,\n  });\n\n  return result.data || [];\n}\n"],"names":["useAttestations","address","chain","schemaId","queryOptions","result","useQuery","queryKey","id","queryFn","getAttestations","schemas","enabled","DEFAULT_QUERY_OPTIONS","gcTime","cacheTime","data"],"mappings":";;;AAUA;AACA;AACO,SAASA,eAAeA,CAC7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAJF,SAAA,aAAA,CAAA,EAAA,CAAA;IAAA,IAAA,YAAA,OAAA,KAAA,CAAA,GAAA,OAAA;IAAA,IAAA,IAAA,CAAA,CAAA,OAAA,WAAA,CAAA;IAAA,IAAA,KAAA,MAAA,GAAA;QAAA,IAAA,IAAA,EAAA,IAAA,CAAA,GAAA,KAAA;QAAA,IAAA,YAAA,OAAA,GAAA,OAAA;QAAA,MAAA,IAAA,UAAA;IAAA;IAAA,OAAA,CAAA,aAAA,IAAA,SAAA,MAAA,EAAA;AAAA;;;;EAIaE,KAAK;;CAA6B,EAC7CE,GAEA,MAAMC,CAAAA,EAFuC,EAC9B,CACH,GAAGC,QAAQ,CAAgB,GACrCC,KAAAA,GAAQ,CACRE,CADU,CAAC,CACXA,EACE,EADK,EAAE,AACP,IAAA,GAAOC,GAFmB,EAAET,AACT,CACsBU,MAFN,CAEa,CAFXT,CAEf,AAA4B,CAA3BD,AAA4BE,GAFT,EAAEK,EAAE,AAEhB,CAA6B,CAFXL,AAEhBD,KAAK,EAAE,CAFiB,CAAC;IAEK,KAAC,CAAC,SAAA,CAAA,GAAA,8KAAA,CAAA,WAAA,EAAA,cAAA,cAAA;SACjE,SAAA;YAAA;YAAA;YAAA,OAAA;YAAA;SAAA;QACDU,OAAO;gDAAE,CAAC,CAACX,OAAO,IAAI,CAAC,CAACE,QAAQ;gBAChC,CAAGU,MAAAA,CAAAA,GAAAA,0LAAAA,CAAAA,kBAAqB,AAArBA,EAAqB,SAAA,OAAA;oBACxBC,EAAM,EAAEV,KAAAA;wBAAAA,MAAY,EAAEW;qBAAAA,QAAS;gBAC/B,CAAGX;YACH;;QAEF,KAAOC,IAAAA,CAAAA,CAAM,CAACW,IAAI,IAAI,EAAE,CAAA,CAAA;IAC1B,GAAA,2KAAA,CAAA,wBAAA,GAAA,CAAA,GAAA","ignoreList":[0]}},
    {"offset": {"line": 2110, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2116, "column": 0}, "map": {"version":3,"file":"Badge.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/components/Badge.tsx"],"sourcesContent":["'use client';\nimport { useAttestations } from '@/identity/hooks/useAttestations';\nimport type { BadgeReact } from '@/identity/types';\nimport { badgeSvg } from '@/internal/svg/badgeSvg';\nimport { zIndex } from '@/styles/constants';\nimport { background, border, cn, color, pressable, text } from '@/styles/theme';\nimport { useMemo, useState } from 'react';\nimport { useOnchainKit } from '../../useOnchainKit';\nimport { useIdentityContext } from './IdentityProvider';\n\ntype ExtractAttestationNameParams = {\n  decodedDataJson?: string;\n  id?: string;\n  attester?: string;\n  expirationTime?: number;\n  recipient?: string;\n  revocationTime?: number;\n  revoked?: boolean;\n  schemaId?: string;\n  time?: number;\n};\n\n/**\n * Badge component.\n */\nexport function Badge({ className, tooltip = false }: BadgeReact) {\n  const [showTooltip, setShowTooltip] = useState(false);\n  const { address, schemaId: contextSchemaId } = useIdentityContext();\n  const { chain, schemaId: kitSchemaId } = useOnchainKit();\n\n  const attestations = useAttestations({\n    address,\n    chain,\n    schemaId: tooltip ? (contextSchemaId ?? kitSchemaId) : null,\n  });\n\n  // Get tooltip text from tooltip prop or attestation\n  const displayText = useMemo(() => {\n    if (!tooltip) {\n      return null;\n    }\n\n    return typeof tooltip === 'string'\n      ? tooltip\n      : extractAttestationName(attestations[0]);\n  }, [tooltip, attestations]);\n\n  const badgeSize = '12px';\n\n  return (\n    <div className=\"relative inline-flex\" data-testid=\"ockBadgeContainer\">\n      <span\n        className={cn(\n          background.primary,\n          border.default,\n          border.radius,\n          tooltip && 'cursor-pointer',\n          className,\n        )}\n        style={{\n          height: badgeSize,\n          width: badgeSize,\n          maxHeight: badgeSize,\n          maxWidth: badgeSize,\n        }}\n        data-testid=\"ockBadge\"\n        {...(tooltip && {\n          onMouseEnter: () => setShowTooltip(true),\n          onMouseLeave: () => setShowTooltip(false),\n        })}\n      >\n        {badgeSvg}\n      </span>\n      {showTooltip && tooltip && (\n        <div\n          className={cn(\n            border.radius,\n            border.default,\n            pressable.alternate,\n            text.legal,\n            color.foreground,\n            zIndex.tooltip,\n            '-translate-x-1/2 absolute bottom-full left-1/2 mb-1 transform',\n            'whitespace-nowrap px-1.5 py-0.5',\n          )}\n          data-testid=\"ockBadgeTooltip\"\n        >\n          {displayText}\n          <div\n            className={cn(\n              '-translate-x-1/2 absolute top-full left-1/2 transform',\n            )}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\n/**\n * Extracts the attestation name from an attestation object\n */\nfunction extractAttestationName(\n  attestation?: ExtractAttestationNameParams,\n): string {\n  if (!attestation?.decodedDataJson) {\n    return 'Verified';\n  }\n\n  try {\n    const decodedData = JSON.parse(attestation.decodedDataJson);\n\n    if (Array.isArray(decodedData) && decodedData[0]?.name) {\n      return decodedData[0].name;\n    }\n\n    const value = Object.values(decodedData)[0];\n\n    if (typeof value === 'string') {\n      return value;\n    }\n\n    if (\n      value &&\n      typeof value === 'object' &&\n      'value' in value &&\n      typeof value.value === 'string'\n    ) {\n      return value.value;\n    }\n  } catch {\n    // If parsing fails, return default\n  }\n\n  return 'Verified';\n}\n"],"names":["Badge","className","tooltip","showTooltip","setShowTooltip","useState","address","schemaId","contextSchemaId","useIdentityContext","chain","kitSchemaId","useOnchainKit","attestations","useAttestations","displayText","useMemo","extractAttestationName","badgeSize","_jsxs","children","_jsx","cn","background","primary","border","default","radius","style","height","width","maxHeight","maxWidth","onMouseEnter","onMouseLeave","badgeSvg","pressable","alternate","text","legal","color","foreground","zIndex","attestation","decodedDataJson","decodedData","JSON","parse","Array","isArray","name","value","Object","values"],"mappings":";;;AAwBA;AACO,SAASA,KAAKA,CAAC;EAAEC,SAAS;AAAEC,EAAAA,OAAO,GAAG;AAAkB,CAAC,EAAE;EAChE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM;IAAEC,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA3BjB,SAAA,GAAY,eAAA,CAAA,EAAA,CAAA;IAAA,CAAA,QAAA,KAAA,IAAA,EAAA,MAAA,KAAA,CAAA,IAAA,EAAA,MAAA;IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,MAAA,IAAA,IAAA,GAAA,IAAA,CAAA,CAAA,EAAA,GAAA,CAAA,CAAA,EAAA;IAAA,OAAA;AAAA;AAsBZ,SAAA,sBAAA,CAAA,EAAA,CAAA;IAAA,IAAA,IAAA,QAAA,IAAA,OAAA,eAAA,OAAA,UAAA,CAAA,CAAA,OAAA,QAAA,CAAA,IAAA,CAAA,CAAA,aAAA;IAAA,IAAA,QAAA,GAAA;QAAA,IAAA,GAAA,GAAA,GAAA,GAAA,IAAA,EAAA,EAAA,IAAA,CAAA,GAAA,IAAA,CAAA;QAAA,IAAA;YAAA,IAAA,IAAA,CAAA,IAAA,EAAA,IAAA,CAAA,EAAA,EAAA,IAAA,EAAA,MAAA,GAAA;gBAAA,IAAA,OAAA,OAAA,GAAA;gBAAA,IAAA,CAAA;YAAA,OAAA,MAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,IAAA,CAAA,EAAA,EAAA,IAAA,KAAA,CAAA,EAAA,IAAA,CAAA,EAAA,KAAA,GAAA,EAAA,MAAA,KAAA,CAAA,GAAA,IAAA,CAAA;QAAA,EAAA,OAAA,GAAA;YAAA,IAAA,CAAA,GAAA,IAAA;QAAA,SAAA;YAAA,IAAA;gBAAA,IAAA,CAAA,KAAA,QAAA,EAAA,MAAA,IAAA,CAAA,IAAA,EAAA,MAAA,IAAA,OAAA,OAAA,CAAA,GAAA;YAAA,SAAA;gBAAA,IAAA,GAAA,MAAA;YAAA;QAAA;QAAA,OAAA;IAAA;AAAA;AACA,SAAA,gBAAA,CAAA;IAAA,IAAA,MAAA,OAAA,CAAA,IAAA,OAAA;AAAA;;;;;;;;;AAImBC,IAAAA,QAAQ,EAAEC;;EAC3B,MAAM,AAAEE,KAAK,MAAA,EAAEH,EAAAA,OAAAA,CAAQ,EAAEI,AAAa,GAAGC,MAAAA,KAAAA,EAAa,CAEtD,CAFwD,KAElDC,YAAY,GAAGC,eAAe,CAAC;MACnCR,IAAAA,GAAO,SAAA,CAAA,GAAA,6JAAA,CAAA,WAAA,EAAA,QACPI,KAAK,QAAA,eAAA,WAAA,IACLH,QAAQ,EAAEL,IAAAA,GAAO,GAAIM,IAAAA,CAAAA,EAAAA,EACrB,MADoC,IAAIG,OACxC,IADmD,GAAI,GACvD,CAAA,EAAA;+PAEF,UAAA,oBAAA,OAAA,EACA,IAAMI,WAAW,GAAGC,OAAO,CAAC,MAAM,MAAA,QAAA;MAChC,IAAI,CAACd,OAAO,EAAE,OAAA,CAAA,GAAA,mKAAA,CAAA,gBAAA,KACZ,EAAA,MAAA,CAAO,IAAI,UAAA,KAAA,EACb,cAAA,eAAA,QAAA;IAEA,EAAA,IAAA,GAAO,OAAOA,KAAAA,CAAAA,GAAAA,0LAAAA,CAAAA,EAAO,KAAK,WAAQ,AAAR,EAAQ,EAC9BA,OAAO,GACPe,sBAAsB,CAACJ,YAAY,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAE,CAACX,OAAO,EAAEW,YAAY,CAAC,CAAC;QAE3B,IAAMK,SAAS,GAAG,MAAM;QAExB,UAAA,QACEC,EAAAA,EAAA,CAAA,KAAA,EAAA,SAAA,cAAA;IAAKlB,EAAAA,SAAS,EAAC,sBAAsB;IAAC,EAAA,aAAA,EAAY,mBAAmB,gBAAA;IAAAmB,EAAAA,IAAAA,IAAA,UAAA,CAAA,GAAA,6JAAA,CAAA,UACnEC;sCAAAA,CAAA,CAAA,MAAA,EAAA;cACEpB,EAAAA,CAAAA,MAAS,EAAEqB,CAAAA,CAAE,CACXC,UAAU,CAACC,OAAO,EAClBC,MAAM,CAACC,OAAO,EACdD,MAAM,CAACE,MAAM,EACbzB,OAAO,IAAI,gBAAgB,EAC3BD,SACF,CAAE;gBACF2B,KAAK,EAAE;YACLC,IAAAA,MAAM,EAAEX,SAAS;YACjBY,IAAAA,GAAAA,EAAK,EAAEZ,GAAAA,MAAS,MAAA,WAAA,UAAA,uBAAA,YAAA,CAAA,EAAA;QAChBa;qCAAAA;QAAAA,EAAAA;QAAAA,EAAS,EAAEb;KAAS;IACpBc,MAAAA,QAAQ,EAAEd,EAAAA;SACV,EAAA,WAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,OAAA,EAAA,OAAA;QACF,EAAA,SAAA,IAAA,EAAY,UAAU;QAAA,EAAA,IACjBhB,OAAO,EAAA,EAAI;QACd+B,IAAAA,MAAAA;YAAAA,KAAY,EAAEA,IAAAA,8KAAM7B,MAAAA,EAAAA,QAAAA,EAAc,CAAC,IAAI,CAAC,MAAA,cAAA;gBACxC8B,EAAAA,SAAAA,CAAAA,GAAAA,qKAAAA,CAAAA,KAAAA,EAAY,EAAEA,MAAM9B,2KAAAA,CAAAA,OAAAA,EAAAA,qKAAAA,CAAAA,EAAc,CAAC,MAAA,CAAA,CAAK,MAAA,EAAA,qKAAA,CAAA,SAAA,CAAA,MAAA,EAAA,WAAA,kBAAA;iBACzC,CAAA,KAAA;oBAAAgB,MAAA,EAEAe;oBAEFhC,OAAAA,IAAW,IAAID,OAAO,iBACrBiB,IAAA,CAAA,KAAA,EAAA;oBACElB,OAAS,EAAEqB,EAAE,CACXG,MAAM,CAACE,MAAM,EACbF,MAAM,CAACC,OAAO,EACdU,SAAS,CAACC,SAAS,EACnBC,IAAI,CAACC,KAAK,EACVC,KAAK,CAACC,UAAU,EAChBC,MAAM,CAACxC,OAAO,EACd,+DAA+D,EAC/D,iCACF,CAAE;oBACF,UAAA,CAAA,EAAY,iBAAiB;gBAAAkB,QAAA,EAAA,CAE5BL,WAAW,eACZM,GAAA,CAAA,KAAA,EAAA;kBACEpB,SAAS,EAAEqB,EAAE,CACX,uDACF;YAAE,GACH,CAAC,UAAA;gBAEL,cAAA,IAAA,eAAA;gBACG,cAAA,IAAA,eAAA;YAEV,IAAA,CAAA,GAAA;;YAEA;YAAA,eAAA,WAAA,WAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,OAAA,EAAA,OAAA;gBACA,WAAA,CAAA,GAAA,qKAAA,CAAA,KAAA,EAAA,qKAAA,CAAA,SAAA,CAAA,MAAA,EAAA,qKAAA,CAAA,SAAA,CAAA,OAAA,EAAA,qKAAA,CAAA,YAAA,CAAA,SAAA,EAAA,qKAAA,CAAA,OAAA,CAAA,KAAA,EAAA,qKAAA,CAAA,QAAA,CAAA,UAAA,EAAA,yKAAA,CAAA,SAAA,CAAA,OAAA,EAAA,iEAAA;gBACA,eAAA;gBACA,GAASL,OAAAA;oBAAAA;oBAAAA,CAAsBA,CAC7B0B,SAAAA,8KAA0C,MAClC,EAAA,OAAA;wBACHA,UAAW,CAAA,CAAA,GAAA,qKAAA,CAAA,KAAEC,EAAAA,aAAe,EAAE;oBACjC;iBAAA,EAAO,UAAU;YACnB;SAAA;IAEA,IAAI;IACF,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACJ,WAAW,CAACC,eAAe,CAAC;AAE3D,IAAA,IAAII,KAAK,CAACC,OAAO,CAACJ,WAAW,CAAC,IAAIA,WAAW,CAAC,CAAC,CAAC,EAAEK,IAAI,EAAE;;CAExD,OAEA,KAAA,CAAMC,KAAK,GAAGC,MAAM,CAACC,MAAM,CAACR,WAAW,CAAC,CAAC,CAAC,CAAC;IAE3C,EAAA,EAAA,CAAA,CAAI,OAAOM,KAAK,KAAK,QAAQ,EAAE,EAAA;QAC7B,EAAA,KAAA,EAAOA,KAAK;IACd;IAEA,EAAA,EAAA,EACEA,KAAK,IACL,OAAOA,KAAK,KAAK,QAAQ,IACzB,OAAO,IAAIA,KAAK,IAChB,OAAOA,KAAK,CAACA,KAAK,KAAK,QAAQ,EAC/B;UACA,IAAA,GAAOA,KAAK,CAACA,KAAK,KAAA,KAAA,CAAA,YAAA,eAAA;QACpB,IAAA,MAAA,OAAA,CAAA,gBAAA,WAAA,CAAA,EAAA,EAAA,MAAA;YACA,IAAM,GAAA,WAAA,CAAA,EAAA,CAAA,IAAA;QACN;QAAA,MAAA,QAAA,OAAA,MAAA,CAAA,YAAA,CAAA,EAAA;QAGF,IAAA,CAAO,MAAA,IAAU,MAAA,UAAA;YACnB,OAAA","ignoreList":[0]}},
    {"offset": {"line": 2302, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2308, "column": 0}, "map": {"version":3,"file":"DisplayBadge.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/components/DisplayBadge.tsx"],"sourcesContent":["import { useAttestations } from '@/identity/hooks/useAttestations';\nimport type { ReactNode } from 'react';\nimport type { Address } from 'viem';\nimport { useOnchainKit } from '../../useOnchainKit';\nimport { useIdentityContext } from './IdentityProvider';\n\ntype DisplayBadgeReact = {\n  children: ReactNode;\n  address?: Address;\n};\n\nexport function DisplayBadge({ children, address }: DisplayBadgeReact) {\n  const { chain, schemaId } = useOnchainKit();\n  const { schemaId: contextSchemaId, address: contextAddress } =\n    useIdentityContext();\n  if (!contextSchemaId && !schemaId) {\n    throw new Error(\n      'Name: a SchemaId must be provided to the OnchainKitProvider or Identity component.',\n    );\n  }\n  const attestations = useAttestations({\n    address: address ?? contextAddress,\n    chain: chain,\n    schemaId: contextSchemaId ?? schemaId,\n  });\n\n  if (attestations.length === 0) {\n    return null;\n  }\n\n  return children;\n}\n"],"names":["DisplayBadge","children","address","chain","schemaId","useOnchainKit","contextSchemaId","contextAddress","useIdentityContext","Error","attestations","useAttestations","length"],"mappings":";;;;;;;;;wBAWO,OAASA,CAAAA,EAAeC,OAAAA,CAAQ,CAAXD,AAAaE,CAAZ,AAAYA;IAA4B,CAAE,KAAA,iBAAA,CAAA,GAAA,mKAAA,CAAA,gBAAA,KACrE,IAAM,IAAA,eAAA,KAAA,EAAEC,KAAK,MAAA,eAAA,QAAA;IAAEC,EAAAA,IAAAA,sBAAAA,CAAAA,GAAAA,gMAAAA,CAAAA,qBAAAA,KAAU,EAAGC,aAAa,EAAE,CAAA,oBAAA,QAAA,EAC3C,IAAM,aAAA,oBAAA,OAAA;IAAED,EAAAA,EAAAA,CAAAA,KAAQ,EAAEE,YAAAA,CAAAA,EAAe,QAAA;QAAEJ,MAAAA,CAAO,EAAEK,CAAAA,MAAAA;KAAgB,GAC1DC,kBAAkB,EAAE;IACtB,IAAI,CAACF,CAAAA,cAAe,CAAA,CAAA,GAAA,0LAAA,CAAA,GAAI,CAACF,QAAQ,MAAE,EAAA;QACjC,MAAM,GAAA,CAAIK,KAAK,CACb,IAAA,gFACF,CAAC;QACH,OAAA;QACA,IAAMC,MAAAA,MAAY,GAAGC,UAAAA,KAAe,CAAC;MACnCT,OAAO,EAAEA,OAAO,IAAIK,cAAc;IAClCJ,EAAAA,EAAAA,GAAK,EAAEA,KAAK,GAAA,MAAA,KAAA,GAAA;QACZC,OAAAA,CAAQ,EAAEE,eAAe,IAAIF;IAC/B,CAAC,CAAC;IAEF,IAAIM,GAAAA,SAAY,CAACE,MAAM,KAAK,CAAC,EAAE;AAC7B,IAAA,OAAO,IAAI;;CAGb,EAAA,OAAOX,QAAQ,uBAAA","ignoreList":[0]}},
    {"offset": {"line": 2335, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2341, "column": 0}, "map": {"version":3,"file":"Avatar.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/components/Avatar.tsx"],"sourcesContent":["'use client';\nimport { useIdentityContext } from '@/identity/components/IdentityProvider';\nimport { useAvatar } from '@/identity/hooks/useAvatar';\nimport { useName } from '@/identity/hooks/useName';\nimport type { AvatarReact } from '@/identity/types';\nimport { findComponent } from '@/internal/utils/findComponent';\nimport { Children, useMemo } from 'react';\nimport { defaultAvatarSVG } from '../../internal/svg/defaultAvatarSVG';\nimport { defaultLoadingSVG } from '../../internal/svg/defaultLoadingSVG';\nimport { border, cn } from '../../styles/theme';\nimport { Badge } from './Badge';\nimport { DisplayBadge } from './DisplayBadge';\n\n/**\n * Represents an Avatar component that displays either a loading indicator,\n * a default avatar, or a custom avatar based on Ethereum Name Service (ENS).\n */\nexport function Avatar({\n  address = null,\n  chain,\n  className,\n  defaultComponent,\n  loadingComponent,\n  children,\n  ...props\n}: AvatarReact) {\n  const { address: contextAddress, chain: contextChain } = useIdentityContext();\n\n  const accountAddress = address ?? contextAddress;\n  const accountChain = chain ?? contextChain;\n\n  if (!accountAddress) {\n    console.error(\n      'Avatar: an Ethereum address must be provided to the Identity or Avatar component.',\n    );\n    return null;\n  }\n\n  // The component first attempts to retrieve the ENS name and avatar for the given Ethereum address.\n  const { data: name, isLoading: isLoadingName } = useName({\n    address: accountAddress,\n    chain: accountChain,\n  });\n\n  const { data: avatar, isLoading: isLoadingAvatar } = useAvatar(\n    { ensName: name ?? '', chain: accountChain },\n    { enabled: !!name },\n  );\n\n  const badge = useMemo(() => {\n    return Children.toArray(children).find(findComponent(Badge));\n  }, [children]);\n\n  const defaultAvatar = defaultComponent || defaultAvatarSVG;\n  const loadingAvatar = loadingComponent || defaultLoadingSVG;\n\n  // If the data is still loading, it displays a loading SVG.\n  if (isLoadingName || isLoadingAvatar) {\n    return (\n      <div className={cn('h-8 w-8 overflow-hidden rounded-full', className)}>\n        {loadingAvatar}\n      </div>\n    );\n  }\n\n  const displayAvatarImg = name && avatar;\n\n  // Otherwise, it displays the custom avatar obtained from ENS.\n  return (\n    <div className=\"relative\">\n      <div\n        data-testid=\"ockAvatar_ImageContainer\"\n        className={cn('h-10 w-10 overflow-hidden rounded-full', className)}\n      >\n        {displayAvatarImg ? (\n          <img\n            className=\"min-h-full min-w-full object-cover\"\n            data-testid=\"ockAvatar_Image\"\n            loading=\"lazy\"\n            width=\"100%\"\n            height=\"100%\"\n            decoding=\"async\"\n            src={avatar}\n            alt={name}\n            {...props}\n          />\n        ) : (\n          <div className={cn(border.default, 'h-full w-full border')}>\n            {defaultAvatar}\n          </div>\n        )}\n      </div>\n      {badge && (\n        <DisplayBadge address={accountAddress}>\n          <div\n            data-testid=\"ockAvatar_BadgeContainer\"\n            className=\"-bottom-0.5 -right-0.5 absolute flex h-[15px] w-[15px] items-center justify-center rounded-full bg-transparent\"\n          >\n            <div className=\"flex h-3 w-3 items-center justify-center\">\n              {badge}\n            </div>\n          </div>\n        </DisplayBadge>\n      )}\n    </div>\n  );\n}\n"],"names":["Avatar","address","chain","className","defaultComponent","loadingComponent","children","props","contextAddress","contextChain","useIdentityContext","accountAddress","accountChain","console","error","data","name","isLoading","isLoadingName","useName","avatar","isLoadingAvatar","useAvatar","ensName","enabled","badge","useMemo","Children","toArray","find","findComponent","Badge","defaultAvatar","defaultAvatarSVG","loadingAvatar","defaultLoadingSVG","_jsx","cn","displayAvatarImg","_jsxs","loading","width","height","decoding","src","alt","border","default","DisplayBadge"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2510, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2516, "column": 0}, "map": {"version":3,"file":"EthBalance.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/components/EthBalance.tsx"],"sourcesContent":["'use client';\nimport { useIdentityContext } from '@/identity/components/IdentityProvider';\nimport type { EthBalanceReact } from '@/identity/types';\nimport { getRoundedAmount } from '@/internal/utils/getRoundedAmount';\nimport { cn, color, text } from '../../styles/theme';\nimport { useGetETHBalance } from '../../wallet/hooks/useGetETHBalance';\n\nexport function EthBalance({ address, className }: EthBalanceReact) {\n  const { address: contextAddress } = useIdentityContext();\n  if (!contextAddress && !address) {\n    console.error(\n      'Address: an Ethereum address must be provided to the Identity or EthBalance component.',\n    );\n    return null;\n  }\n\n  const { convertedBalance: balance, error } = useGetETHBalance(\n    address ?? contextAddress,\n  );\n\n  if (!balance || error) {\n    return null;\n  }\n\n  return (\n    <span\n      data-testid=\"ockEthBalance\"\n      className={cn(text.label2, color.foregroundMuted, className)}\n    >\n      {getRoundedAmount(balance, 4)} ETH\n    </span>\n  );\n}\n"],"names":["EthBalance","address","className","contextAddress","useIdentityContext","console","error","convertedBalance","balance","useGetETHBalance","_jsxs","cn","text","label2","color","foregroundMuted","children","getRoundedAmount"],"mappings":";;;;;;;;;;;;;;AAAA,SAAA,GAAY,QAAA,EAOL,OAASA,EAAaC,OAAO,CAAVD,CAAC,AAAS,EAAEE,CAAAA;IAA4B,CAAE,KAAA,sBAAA,CAAA,GAAA,gMAAA,CAAA,qBAAA,KAClE,IAAM,aAAA,oBAAA,OAAA;IAAED,EAAAA,EAAAA,CAAAA,IAAO,EAAEE,YAAAA,CAAAA,SAAAA;QAAgB,EAAGC,MAAAA,KAAAA,CAAAA,MAAkB,EAAE;QACxD,EAAI,CAACD,IAAAA,UAAc,IAAI,CAACF,OAAO,EAAE;IAC/BI,EAAAA,OAAO,CAACC,KAAK,CACX,wFACF,CAAC;IACD,EAAA,IAAA,GAAO,IAAI,aAAA,CAAA,GAAA,yLAAA,CAAA,mBAAA,EAAA,WAAA,iBACb,UAAA,kBAAA,gBAAA,EAEA,IAAM,IAAA,kBAAA,KAAA;IAAEC,EAAAA,EAAAA,CAAAA,WAAAA,EAAgB,EAAEC,GAAAA,IAAO;QAAEF,OAAAA;IAAM,CAAC,GAAGG,gBAAgB,CAC3DR,OAAO,IAAIE,cACb,CAAC;IAED,IAAI,CAACK,EAAAA,KAAO,IAAIF,EAAAA,GAAAA,CAAAA,GAAAA,sKAAAA,CAAAA,CAAK,MAAE,EAAA,QAAA;QACrB,OAAO,IAAI,IAAA;QACb,WAAA,CAAA,GAAA,qKAAA,CAAA,KAAA,EAAA,qKAAA,CAAA,OAAA,CAAA,MAAA,EAAA,qKAAA,CAAA,QAAA,CAAA,eAAA,EAAA;QAEA,UAAA;YAAA,CAAA,GAAA,2LAAA,CAAA,OACEI,IAAA,CAAA,OAAA,EAAA,CAAA,EAAA,MAAA;YAAA;SAAA;IACE,EAAA,aAAA,EAAY,eAAe;AAC3BR,IAAAA,SAAS,EAAES,EAAE,CAACC,IAAI,CAACC,MAAM,EAAEC,KAAK,CAACC,eAAe,EAAEb,SAAS,CAAE;;CAG/D,GAAM,CAAC,kCAAA","ignoreList":[0]}},
    {"offset": {"line": 2551, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2557, "column": 0}, "map": {"version":3,"file":"Name.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/components/Name.tsx"],"sourcesContent":["'use client';\nimport { useIdentityContext } from '@/identity/components/IdentityProvider';\nimport { useName } from '@/identity/hooks/useName';\nimport type { NameReact } from '@/identity/types';\nimport { getSlicedAddress } from '@/identity/utils/getSlicedAddress';\nimport { findComponent } from '@/internal/utils/findComponent';\nimport { Children, useMemo } from 'react';\nimport { cn, color, text } from '../../styles/theme';\nimport { Badge } from './Badge';\nimport { DisplayBadge } from './DisplayBadge';\n\n/**\n * Name is a React component that renders the user name from an Ethereum address.\n */\nexport function Name({\n  address = null,\n  className,\n  children,\n  chain,\n  ...props\n}: NameReact) {\n  const { address: contextAddress, chain: contextChain } = useIdentityContext();\n  if (!contextAddress && !address) {\n    console.error(\n      'Name: an Ethereum address must be provided to the Identity or Name component.',\n    );\n    return null;\n  }\n\n  const accountAddress = address ?? contextAddress;\n  const accountChain = chain ?? contextChain;\n\n  const { data: name, isLoading } = useName({\n    address: accountAddress,\n    chain: accountChain,\n  });\n\n  const badge = useMemo(() => {\n    return Children.toArray(children).find(findComponent(Badge));\n  }, [children]);\n\n  if (isLoading) {\n    return <span className={className} />;\n  }\n\n  return (\n    <div className=\"flex items-center gap-1\">\n      <span\n        data-testid=\"ockIdentity_Text\"\n        className={cn(text.headline, color.foreground, className)}\n        {...props}\n      >\n        {name || getSlicedAddress(accountAddress)}\n      </span>\n      {badge && <DisplayBadge address={accountAddress}>{badge}</DisplayBadge>}\n    </div>\n  );\n}\n"],"names":["Name","address","className","children","chain","props","contextAddress","contextChain","useIdentityContext","console","error","accountAddress","accountChain","data","name","isLoading","useName","badge","useMemo","Children","toArray","find","findComponent","Badge","_jsx","_jsxs","cn","text","headline","color","foreground","getSlicedAddress","DisplayBadge"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2689, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2695, "column": 0}, "map": {"version":3,"file":"getSocials.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/utils/getSocials.ts"],"sourcesContent":["import { getChainPublicClient } from '@/core/network/getChainPublicClient';\nimport { isBase } from '@/core/utils/isBase';\nimport { isEthereum } from '@/core/utils/isEthereum';\nimport type { GetSocialsReturnType } from '@/identity/types';\nimport type { Chain } from 'viem';\nimport { mainnet } from 'viem/chains';\nimport { normalize } from 'viem/ens';\nimport { RESOLVER_ADDRESSES_BY_CHAIN_ID } from '../constants';\n\nexport type GetSocials = {\n  ensName: string;\n  chain?: Chain;\n};\n\nexport const getSocials = async ({\n  ensName,\n  chain = mainnet,\n}: GetSocials): Promise<GetSocialsReturnType> => {\n  const chainIsBase = isBase({ chainId: chain.id });\n  const chainIsEthereum = isEthereum({ chainId: chain.id });\n  const chainSupportsUniversalResolver = chainIsEthereum || chainIsBase;\n\n  if (!chainSupportsUniversalResolver) {\n    return Promise.reject(\n      'ChainId not supported, socials resolution is only supported on Ethereum and Base.',\n    );\n  }\n\n  const client = getChainPublicClient(chain);\n  const normalizedName = normalize(ensName);\n\n  const fetchTextRecord = async (key: string) => {\n    try {\n      const result = await client.getEnsText({\n        name: normalizedName,\n        key,\n        universalResolverAddress: RESOLVER_ADDRESSES_BY_CHAIN_ID[chain.id],\n      });\n      return result || null;\n    } catch (error) {\n      console.warn(`Failed to fetch ENS text record for ${key}:`, error);\n      return null;\n    }\n  };\n\n  const [twitter, github, farcaster, website] = await Promise.all([\n    fetchTextRecord('com.twitter'),\n    fetchTextRecord('com.github'),\n    fetchTextRecord('xyz.farcaster'),\n    fetchTextRecord('url'),\n  ]);\n\n  return { twitter, github, farcaster, website };\n};\n"],"names":["getSocials","ensName","chain","mainnet","chainIsBase","isBase","chainId","id","chainIsEthereum","isEthereum","chainSupportsUniversalResolver","Promise","reject","client","getChainPublicClient","normalizedName","normalize","fetchTextRecord","key","result","getEnsText","name","universalResolverAddress","RESOLVER_ADDRESSES_BY_CHAIN_ID","error","console","warn","twitter","github","farcaster","website","all"],"mappings":";;;;AAcaA,MAAAA,UAAU,GAAG,OAAO;EAC/BC,OAAO;EAGP,MAAMG,WAAW,GAAGC,MAAM,CAAC;AAF3BH,EAAAA,KAAK,GAAGC;AACE,CAAC,KAAoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAClBG,EAAAA,KAAO,EAAEJ,KAAK,CAACK,OAAAA,EAAG,CAAC,CAAC,KAAA,EACjD,MAAMC,EAAAA,mKAAAA,CAAAA,UAAAA,KAA+BF,CAAhB,GAAGG,GAAoB,EAAEP,KAAZ,AAAiB,CAAhB,AAAiBK;IAAG,CAAC,CAAC,IAAA,cAAA,CAAA,GAAA,6KAAA,CAAA,SAAA,EAAA;QACzD,IAAMG,KAAAA,MAAAA,EAAAA,iBAA8B,GAAGF,eAAe,IAAIJ,WAAW;IAErE,IAAI,CAACM,8BAA8B,EAAE;IACnC,EAAA,IAAA,GAAOC,OAAO,CAACC,MAAM,CACnB,mMAAA,EAAA,wEACF,CAAC;QACH,SAAA,MAAA,EAAA;IAEA,MAAMC,MAAM,GAAGC,oBAAoB,CAACZ,KAAK,CAAC;IAC1C,MAAMa,cAAc,GAAGC,SAAS,CAACf,MAAAA,CAAO,CAAC,iBAAA;IAEzC,IAAA,CAAA,CAAMgB,eAAe,GAAG,MAAOC,GAAW,IAAK;QAC7C,IAAI,GAAA,QAAA,MAAA,CAAA;IACF,IAAA,MAAMC,MAAM,GAAG,MAAMN,MAAM,CAACO,UAAU,CAAC;IACrCC,MAAAA,IAAI,EAAEN,GAAAA,CAAAA,GAAAA,6LAAAA,CAAAA,WAAc,YAAA,EAAA;UACpBG,GAAG,cAAA,CAAA,GAAA,4JAAA,CAAA,YAAA,EAAA;IACHI,MAAAA,kBAAAA,OAAwB,EAAEC,8BAA8B,CAACrB,KAAK,CAACK,EAAE;QACnE,GAAC,CAAC;YACF,MAAA,CAAOY,MAAM,EAAA,EAAI,IAAI,OAAA,UAAA,CAAA;gBACrB,KAAOK,CAAAA,IAAK,EAAE;gBACdC,KAAO,CAACC,IAAI,CAAC,CAAA,oCAAA,EAAuCR,GAAG,CAAG,CAAA,CAAA,EAAEM,KAAK,CAAC;gBAClE,KAAO,IAAI,iBAAA,2KAAA,CAAA,iCAAA,CAAA,MAAA,EAAA,CAAA;YACb;YACD,OAAA,UAAA;QAED,EAAA,EAAM,CAACG,IAAAA,GAAO,EAAEC,EAAAA,IAAM,EAAEC,SAAS,EAAEC,OAAO,CAAC,GAAG,MAAMnB,OAAO,CAACoB,GAAG,CAAC,CAC9Dd,eAAe,CAAC,aAAa,CAAC,EAC9BA,eAAe,CAAC,YAAY,CAAC,EAC7BA,eAAe,CAAC,eAAe,CAAC,EAChCA,eAAe,CAAC,KAAK,CAAC,CACvB,CAAC;YAEF,GAAO,KAAA,IAAA,CAAA,CAAA,oCAAA,EAAA,IAAA,CAAA,CAAA,EAAA;YAAEU,KAAO,EAAA;QAAEC,MAAM;MAAEC,SAAS;IAAEC,EAAAA,IAAAA,qBAAAA,MAAAA,QAAAA,GAAAA,CAAAA;QAAAA,gBAAAA;QAAAA,gBAAAA;QAAAA,gBAAAA;QAAAA,gBAAAA;KAAAA,GAAS,sBAAA,eAAA,oBAAA,IAChD,UAAA,mBAAA,CAAA,EAAA","ignoreList":[0]}},
    {"offset": {"line": 2793, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2799, "column": 0}, "map": {"version":3,"file":"useSocials.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/hooks/useSocials.tsx"],"sourcesContent":["import type { GetSocialsReturnType, UseQueryOptions } from '@/identity/types';\nimport { getSocials } from '@/identity/utils/getSocials';\nimport { DEFAULT_QUERY_OPTIONS } from '@/internal/constants';\nimport { useQuery } from '@tanstack/react-query';\nimport type { Chain } from 'viem';\nimport { mainnet } from 'viem/chains';\n\ntype UseSocialsOptions = {\n  ensName: string;\n  chain?: Chain;\n};\n\nexport const useSocials = (\n  { ensName, chain = mainnet }: UseSocialsOptions,\n  queryOptions?: UseQueryOptions<GetSocialsReturnType>,\n) => {\n  const queryKey = ['useSocials', ensName, chain.id];\n\n  return useQuery<GetSocialsReturnType>({\n    queryKey,\n    queryFn: () => getSocials({ ensName, chain }),\n    ...DEFAULT_QUERY_OPTIONS,\n    // Use cacheTime as gcTime for backward compatibility\n    gcTime: queryOptions?.cacheTime,\n    ...queryOptions,\n  });\n};\n"],"names":["useSocials","ensName","chain","mainnet","queryOptions","queryKey","id","useQuery","queryFn","getSocials","DEFAULT_QUERY_OPTIONS","gcTime","cacheTime"],"mappings":";;;AAYO,MAAMA,UAAU,GAAGA,CACxB;EAAEC,OAAO;AAAqC,CAAC,EAC/CG,YAAoD,KACjD;AAFQF,EAAAA,KAAK,GAAGC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAGnB,IAAA,EAAME,QAAQ,GAAG,CAAC,EAElB,OAAOE,GAFuB,CAG5BF,CAH8BJ,GAEjB,CAAuB,CACpCI,EAHqC,EAAEH,KAAK,CAACI,EAAE,CAAC,sJAGhDD,CAAAA,EAAQ,QAAA,EACRG,EAAAA,CAAAA,OAAO,EAAEA,MAAMC,UAAU,CAAC;QAAER,EAAAA,KAAO,MAAA;QAAA;QAAA;QAAA,MAAA,EAAA;KAAA;IAAEC,IAAAA,GAAAA,CAAAA,GAAAA,8KAAAA,CAAAA,WAAAA,EAAAA,cAAAA,cAAAA;QAAM,CAAC,CAAC;QAC7C,GAAGQ,IAAAA;mCAAAA,IAAAA,CAAAA,GAAAA,qLAAAA,CAAAA,aAAqB,EAAA;oBACxB;oBACAC,IAAM,EAAEP,YAAY,EAAEQ,SAAS;gBAC/B,GAAGR;;IACL,CAAC,CAAC,CAAA,2KAAA,CAAA,wBAAA,GAAA,CAAA,GAAA;QACJ,qDAAA","ignoreList":[0]}},
    {"offset": {"line": 2874, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2880, "column": 0}, "map": {"version":3,"file":"getSocialPlatformDetails.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/components/getSocialPlatformDetails.tsx"],"sourcesContent":["import { githubSvg } from '../../internal/svg/githubSvg';\nimport { twitterSvg } from '../../internal/svg/twitterSvg';\nimport { warpcastSvg } from '../../internal/svg/warpcastSvg';\nimport { websiteSvg } from '../../internal/svg/websiteSvg';\nimport { border, cn, pressable } from '../../styles/theme';\n\nexport type SocialPlatform = 'twitter' | 'github' | 'farcaster' | 'website';\n\nexport const PLATFORM_CONFIG: Record<\n  SocialPlatform,\n  { href: (value: string) => string; icon: React.ReactNode }\n> = {\n  twitter: {\n    href: (value) => `https://x.com/${value}`,\n    icon: twitterSvg,\n  },\n  github: {\n    href: (value) => `https://github.com/${value}`,\n    icon: githubSvg,\n  },\n  farcaster: {\n    href: (value) => {\n      const username = value.split('/').pop();\n      return `https://warpcast.com/${username}`;\n    },\n    icon: warpcastSvg,\n  },\n  website: {\n    href: (value) => value,\n    icon: websiteSvg,\n  },\n};\n\nexport function GetSocialPlatformDetails({\n  platform,\n  value,\n}: {\n  platform: SocialPlatform;\n  value: string;\n}) {\n  const config = PLATFORM_CONFIG[platform];\n  return (\n    <a\n      href={config.href(value)}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className={cn(\n        pressable.default,\n        border.radius,\n        border.default,\n        'flex items-center justify-center p-2',\n      )}\n      data-testid={`ockSocials_${\n        platform.charAt(0).toUpperCase() + platform.slice(1)\n      }`}\n    >\n      <span className=\"sr-only\">{platform}</span>\n      <div className={cn('flex h-4 w-4 items-center justify-center')}>\n        {config.icon}\n      </div>\n    </a>\n  );\n}\n"],"names":["PLATFORM_CONFIG","twitter","href","value","icon","twitterSvg","github","githubSvg","farcaster","username","split","pop","warpcastSvg","website","websiteSvg","GetSocialPlatformDetails","platform","config","_jsxs","target","rel","className","cn","pressable","default","border","radius","charAt","toUpperCase","slice","children","_jsx"],"mappings":";;;;;;;;;;;;;;;;;IAQO,IAAMA,KAAAA,UAGZ,GAAG;QACFC,KAAO,CAAA,CAAA,CAAE,OAAA,CAAA,cAAA,EAAA,OAAA;QACPC,IAAI,sLAAGC,KAAK,IAAK,IAAA,cAAA,EAAiBA,KAAK,CAAE,CAAA;IACzCC,EAAAA,IAAI,EAAEC;KACP,OAAA;QACDC,IAAM,GAAE,QAAA,CAAA,mBAAA,EAAA,OAAA;QACNJ,IAAI,qLAAGC,KAAK,OAAK,CAAA,mBAAA,EAAsBA,KAAK,CAAE,CAAA;IAC9CC,EAAAA,IAAI,EAAEG;KACP,UAAA;QACDC,MAAAA,CAAAA,CAAS,EAAE;YACTN,EAAI,EAAGC,EAAAA,GAAK,IAAK,IAAA,MAAA,KAAA,CAAA,KAAA,GAAA;YACf,MAAMM,CAAAA,CAAAA,MAAQ,GAAGN,KAAK,CAACO,KAAK,CAAC,EAAA,CAAG,CAAC,CAACC,GAAG,EAAE,EAAA;UACvC,OAAO,CAAA,qBAAA,EAAwBF,QAAQ,CAAE,CAAA;SAC1C,KAAA,oLAAA,CAAA,cAAA;IACDL,EAAAA,IAAI,EAAEQ;KACP,QAAA;QACDC,KAAO,CAAA,CAAA,CAAE,OAAA;QACPX,IAAI,sLAAGC,KAAK,IAAKA,IAAAA,IAAK;IACtBC,EAAAA,IAAI,EAAEU;AACR;AACF,SAAA,yBAAA,EAEO,OAASC,CAAAA,EACdC,KAAAA,EACAb,CADQ,AACRA,aAFsCY,CAAC;IAMxC,CAAE,KAAA,SAAA,eAAA,CAAA,SAAA;IACD,MAAME,CAAAA,KAAM,GAAGjB,GAAAA,GAAAA,CAAAA,GAAAA,sKAAAA,CAAAA,OAAAA,EAAAA,KAAe,CAACgB,QAAQ,CAAC;QACxC,MAAA,OAAA,IAAA,CACEE,IAAA,CAAA,GAAA,EAAA;QACEhB,IAAI,EAAEe,EAAAA,IAAM,CAACf,IAAI,CAACC,KAAK,CAAE;QACzBgB,KAAAA,CAAM,EAAC,QAAQ;QACfC,GAAG,EAAC,MAAA,CAAA,GAAA,qKAAA,CAAA,KAAA,EAAA,qKAAA,CAAA,YAAA,CAAA,EAAqB,KAAA,EAAA,qKAAA,CAAA,SAAA,CAAA,MAAA,EAAA,qKAAA,CAAA,SAAA,CAAA,OAAA,EAAA;QACzBC,SAAS,EAAEC,EAAE,CACXC,CAAAA,CAAAA,OAAS,CAACC,GAAAA,EAAAA,EAAO,EACjBC,KAAAA,CAAM,CAACC,IAAAA,CAAAA,CAAM,EACbD,MAAM,CAACD,IAAAA,GAAO,EACd,SAAA,KAAA,CAAA,IAAA,mBACF,CAAE;QACF,UAAA;YAAA,EAAA,EAAa,OAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAA,CACXR,OAAAA,CAAQ,CAACW,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGZ,QAAQ,CAACa,KAAK,CAAC,CAAC,CAAC,CACnD,CAAA;gBAAAC,MAAA,KAAA,WAEHC,GAAA,CAAA,MAAA,EAAA;gBAAMV,SAAS,CAAA,CAAC,SAAS;YAAAS,EAAAA;YAAAA,MAAA,EAAEd,GAAAA,GAAAA,CAAAA,GAAAA,sKAAAA,CAAAA,MAAAA,EAAAA,OAAAA;gBAAgB,WAAA,CAAA,GAAA,qKAAA,CAAA,KAAA,EAAA,CAC3Ce,GAAA,CAAA,KAAA,EAAA;gBAAKV,SAAS,CAAA,CAAEC,EAAE,CAAC,GAAA,IAAA,mCAA0C,CAAE;cAAAQ;SAAAA,OAAA,EAC5Db,MAAM,CAACb;IAAI,GACT,CAAC;AAAA,GACL,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2939, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2945, "column": 0}, "map": {"version":3,"file":"Socials.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/components/Socials.tsx"],"sourcesContent":["'use client';\nimport { useIdentityContext } from '@/identity/components/IdentityProvider';\nimport { useName } from '@/identity/hooks/useName';\nimport { useSocials } from '@/identity/hooks/useSocials';\nimport { border, cn } from '@/styles/theme';\nimport type { Address, Chain } from 'viem';\nimport { GetSocialPlatformDetails } from './getSocialPlatformDetails';\nimport type { SocialPlatform } from './getSocialPlatformDetails';\n\ntype SocialsReact = {\n  address?: Address | null;\n  ensName?: string;\n  chain?: Chain;\n  className?: string;\n};\n\nexport function Socials({ address, chain, className }: SocialsReact) {\n  const { address: contextAddress, chain: contextChain } = useIdentityContext();\n\n  const accountAddress = address ?? contextAddress;\n  const accountChain = chain ?? contextChain;\n\n  if (!accountAddress) {\n    console.error(\n      'Socials: an Ethereum address must be provided to the Socials component.',\n    );\n    return null;\n  }\n\n  const { data: name, isLoading: isLoadingName } = useName({\n    address: accountAddress,\n    chain: accountChain,\n  });\n\n  const { data: socials, isLoading: isLoadingSocials } = useSocials(\n    {\n      ensName: name ?? '',\n      chain: accountChain,\n    },\n    { enabled: !!name },\n  );\n\n  if (isLoadingName || isLoadingSocials) {\n    return <span className={className} />;\n  }\n\n  if (!socials || Object.values(socials).every((value) => !value)) {\n    return null;\n  }\n\n  return (\n    <div className={cn(border.default, 'mt-2 w-full pl-1', className)}>\n      <div className={'left-4 flex space-x-2'}>\n        {Object.entries(socials).map(\n          ([platform, value]) =>\n            value && (\n              <GetSocialPlatformDetails\n                key={platform}\n                platform={platform as SocialPlatform}\n                value={value}\n              />\n            ),\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":["Socials","address","chain","className","contextAddress","contextChain","useIdentityContext","accountAddress","accountChain","console","error","data","name","isLoading","isLoadingName","useName","socials","isLoadingSocials","useSocials","ensName","enabled","_jsx","Object","values","every","value","cn","border","default","children","entries","map","platform","GetSocialPlatformDetails"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3000, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3006, "column": 0}, "map": {"version":3,"file":"IdentityLayout.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/components/IdentityLayout.tsx"],"sourcesContent":["import { useTheme } from '@/internal/hooks/useTheme';\nimport { findComponent } from '@/internal/utils/findComponent';\nimport { background, cn, color } from '@/styles/theme';\nimport { Children, cloneElement, useMemo } from 'react';\nimport type { ReactNode } from 'react';\nimport { Address } from './Address';\nimport { Avatar } from './Avatar';\nimport { EthBalance } from './EthBalance';\nimport { Name } from './Name';\nimport { Socials } from './Socials';\n\ntype IdentityLayoutReact = {\n  children: ReactNode;\n  className?: string;\n  hasCopyAddressOnClick?: boolean;\n};\n\nexport function IdentityLayout({\n  children,\n  className,\n  hasCopyAddressOnClick,\n}: IdentityLayoutReact) {\n  const componentTheme = useTheme();\n\n  const {\n    avatar,\n    name,\n    address: addressComponent,\n    ethBalance,\n    socials,\n  } = useMemo(() => {\n    const childrenArray = Children.toArray(children);\n    const addressElement = childrenArray.find(findComponent(Address));\n    return {\n      avatar: childrenArray.find(findComponent(Avatar)),\n      name: childrenArray.find(findComponent(Name)),\n      address: addressElement\n        ? cloneElement(addressElement, { hasCopyAddressOnClick })\n        : undefined,\n      ethBalance: childrenArray.find(findComponent(EthBalance)),\n      socials: childrenArray.find(findComponent(Socials)),\n    } as const;\n  }, [children, hasCopyAddressOnClick]);\n\n  return (\n    <div\n      className={cn(\n        componentTheme,\n        background.default,\n        'flex flex-col px-4 py-1',\n        className,\n      )}\n      data-testid=\"ockIdentityLayout_container\"\n    >\n      <div className=\"flex items-center space-x-3\">\n        <div className=\"flex-shrink-0\">{avatar}</div>\n        <div className=\"flex flex-col\">\n          {name}\n          {addressComponent && !ethBalance && addressComponent}\n          {!addressComponent && ethBalance && ethBalance}\n          {addressComponent && ethBalance && (\n            <div className=\"flex items-center gap-1\">\n              {addressComponent}\n              <span className={color.foregroundMuted}>·</span>\n              {ethBalance}\n            </div>\n          )}\n        </div>\n      </div>\n      {socials}\n    </div>\n  );\n}\n"],"names":["IdentityLayout","children","className","hasCopyAddressOnClick","componentTheme","useTheme","avatar","name","address","addressComponent","ethBalance","socials","useMemo","childrenArray","Children","toArray","addressElement","find","findComponent","Address","Avatar","Name","cloneElement","undefined","EthBalance","Socials","_jsxs","cn","background","default","_jsx","color","foregroundMuted"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3087, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3093, "column": 0}, "map": {"version":3,"file":"Identity.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/components/Identity.tsx"],"sourcesContent":["'use client';\nimport { IdentityLayout } from '@/identity/components/IdentityLayout';\nimport { IdentityProvider } from '@/identity/components/IdentityProvider';\nimport type { IdentityReact } from '@/identity/types';\nimport { useOnchainKit } from '@/useOnchainKit';\nimport { useAccount } from 'wagmi';\n\nexport function Identity({\n  address: addressProp,\n  chain,\n  children,\n  className,\n  hasCopyAddressOnClick,\n  schemaId,\n}: IdentityReact) {\n  const { chain: contextChain } = useOnchainKit();\n  const accountChain = chain ?? contextChain;\n  const { address } = useAccount();\n\n  if (!address && !addressProp) {\n    return null;\n  }\n\n  return (\n    <IdentityProvider\n      address={addressProp || address}\n      schemaId={schemaId}\n      chain={accountChain}\n    >\n      <IdentityLayout\n        className={className}\n        hasCopyAddressOnClick={hasCopyAddressOnClick}\n      >\n        {children}\n      </IdentityLayout>\n    </IdentityProvider>\n  );\n}\n"],"names":["Identity","address","addressProp","chain","children","className","hasCopyAddressOnClick","schemaId","contextChain","useOnchainKit","accountChain","useAccount","_jsx","IdentityProvider","IdentityLayout"],"mappings":";;;;;;;;;;;;;;AAAA,SAAA,GAAY,MAAA,EAOL,OAASA,EAAAA,MAAQA,CAAC,IAAA,EACvBC,KAAAA,EAAO,AACPE,EADSD,GACJ,GAAA,EACLE,GAFoB,KAEZ,CAAA,EACRC,SAAS,YAAA,EACTC,QAAAA,EACAC,CAAAA,UADqB;IAEP,CAAE,KAAA,iBAAA,CAAA,GAAA,mKAAA,CAAA,gBAAA,KAChB,IAAM,WAAA,eAAA,KAAA;IAAEJ,EAAAA,IAAAA,CAAK,EAAEK,YAAAA,SAAAA;KAAc,GAAGC,EAAAA,WAAa,EAAE,CAAA,CAAA,GAAA,8JAAA,CAAA,aAAA,KAC/C,IAAMC,MAAAA,MAAY,GAAGP,GAAAA,EAAK,IAAIK,CAAAA,WAAY;IAC1C,IAAA,CAAA,CAAM,UAAA,CAAA,aAAA;QAAEP,OAAAA;KAAS,GAAGU,UAAU,EAAE;IAEhC,IAAI,CAACV,EAAAA,KAAO,IAAI,CAACC,CAAAA,GAAAA,CAAAA,GAAAA,sKAAAA,CAAAA,MAAAA,EAAAA,gMAAAA,CAAAA,IAAW,EAAE,aAAA,EAAA;QAC5B,OAAO,EAAA,EAAI,aAAA;QACb,UAAA;QAEA,OAAA,WACEU,GAAA,CAACC,gBAAgB,EAAA;QACfZ,OAAO,EAAEC,CAAAA,UAAW,CAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,CAAID,KAAAA,EAAAA,8LAAAA,CAAAA,IAAQ,aAAA,EAAA;YAChCM,MAAQ,EAAEA,GAAAA,KAAS;YACnBJ,GAAK,EAAEO,YAAa,MAAA;YAAAN,MAAA,IAAA,WAEpBQ,GAAA,CAACE,cAAc,EAAA;QACbT,EAAAA,SAAS,EAAEA,SAAU;IACrBC,IAAAA,qBAAqB,EAAEA,qBAAsB;AAAAF,MAAAA,QAAA,EAE5CA;;CACc,GACD,CAAC,gCAAA","ignoreList":[0]}},
    {"offset": {"line": 3127, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3133, "column": 0}, "map": {"version":3,"file":"IdentityCard.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/components/IdentityCard.tsx"],"sourcesContent":["'use client';\nimport type { Address, Chain } from 'viem';\nimport { Address as AddressComponent } from './Address';\nimport { Avatar } from './Avatar';\nimport { Badge } from './Badge';\nimport { Identity } from './Identity';\nimport { Name } from './Name';\nimport { Socials } from './Socials';\n\nimport { background, border, cn } from '../../styles/theme';\n\ntype IdentityCardReact = {\n  address?: Address;\n  chain?: Chain;\n  className?: string;\n  schemaId?: Address | null;\n  /** Controls whether the badge shows a tooltip on hover. When true, the tooltip displays the attestation's name. When a string is provided, that text overrides the default display. Defaults to false. */\n  badgeTooltip?: boolean | string;\n};\n\nexport function IdentityCard({\n  address,\n  chain,\n  className = '',\n  schemaId,\n  badgeTooltip,\n}: IdentityCardReact) {\n  return (\n    <Identity\n      address={address}\n      chain={chain}\n      className={cn(\n        border.radius,\n        border.lineDefault,\n        background.default,\n        'items-left flex min-w-[300px] p-4',\n        className,\n      )}\n      schemaId={schemaId}\n    >\n      <Avatar />\n      <Name>\n        <Badge tooltip={badgeTooltip} />\n      </Name>\n      <AddressComponent />\n      <Socials />\n    </Identity>\n  );\n}\n"],"names":["IdentityCard","address","chain","className","schemaId","badgeTooltip","_jsxs","Identity","cn","border","radius","lineDefault","background","default","children","_jsx","Avatar","Name","Badge","tooltip","AddressComponent","Socials"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAAA,GAAY,UAAA,EAoBL,OAASA,EACdC,KAAAA,EAAO,AACPC,GAF0BF,CAAC,CAEtB,OAAA,EAAA,EACLG,QAAAA,CAAS,CACTC,EADY,EAAE,IACN,IAAA,EACRC,CAAAA;IACkB,CAAE,MAAA,WAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,OAAA,EAAA,wLAAA,CAAA,WAAA,EAAA;QACpB,SAAA,SACEC,IAAA,CAACC,QAAQ,EAAA;QACPN,OAAO,EAAEA,OAAQ;QACjBC,KAAK,EAAEA,IAAAA,CAAAA,GAAAA,qKAAAA,CAAAA,KAAM,EAAA,qKAAA,CAAA,SAAA,CAAA,MAAA,EAAA,qKAAA,CAAA,SAAA,CAAA,WAAA,EAAA,qKAAA,CAAA,aAAA,CAAA,OAAA,EAAA,qCAAA;QACbC,SAAS,CAAA,CAAEK,EAAE,CACXC,MAAM,CAACC,MAAM,EACbD,MAAM,CAACE,WAAW,EAClBC,UAAU,CAACC,OAAO,EAClB,mCAAmC,EACnCV,SACF,CAAE;QACFC,QAAQ,EAAEA;YAAAA,OAAS,IAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAA,sLAAA,CAAA,SAAA,EAAA,CAAA;YAAA,WAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAA,oLAAA,CAAA,OAAA,EAAA;gBAAAU,MAAA,EAAA,EAAA,WAAA,CAEnBC,EAAAA,CAAAA,GAAAA,sKAAAA,CAAAA,MAAA,AAACC,EAAAA,qLAAAA,CAAAA,QAAM,EAAA,EAAE,CAAC,eACVD,GAAA,CAACE,IAAI,EAAA;oBAAAH,MAAA,GAAA,YACHC,GAAA,CAACG,KAAK,EAAA;gBAACC,EAAAA,OAAO,EAAEd;eAAe;YAAA,WAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAA,uLAAA,CAAA,UAAA,EAAA,CAAA;YAAA,WAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAA,uLAAA,CAAA,UAAA,EAAA,CAAA;SAAA;IAAC,GAC5B,CAAC,eACPU,GAAA,CAACK,OAAgB,EAAA,EAAE,CAAC,eACpBL,GAAA,CAACM,OAAO,EAAA,EAAE,CAAC;AAAA,GACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3173, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3179, "column": 0}, "map": {"version":3,"file":"getAddress.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/utils/getAddress.ts"],"sourcesContent":["import { getChainPublicClient } from '@/core/network/getChainPublicClient';\nimport { isBase } from '@/core/utils/isBase';\nimport { isEthereum } from '@/core/utils/isEthereum';\nimport { RESOLVER_ADDRESSES_BY_CHAIN_ID } from '@/identity/constants';\nimport type { GetAddress, GetAddressReturnType } from '@/identity/types';\nimport { isBasename } from '@/identity/utils/isBasename';\nimport { mainnet } from 'viem/chains';\n\n/**\n * Get address from ENS name or Basename.\n */\nexport const getAddress = async ({\n  name,\n  chain = mainnet,\n}: GetAddress): Promise<GetAddressReturnType> => {\n  const chainIsBase = isBase({ chainId: chain.id });\n  const chainIsEthereum = isEthereum({ chainId: chain.id });\n  const chainSupportsUniversalResolver = chainIsEthereum || chainIsBase;\n\n  if (!chainSupportsUniversalResolver) {\n    return Promise.reject(\n      'ChainId not supported, name resolution is only supported on Ethereum and Base.',\n    );\n  }\n\n  const client = getChainPublicClient(chain);\n  // Gets address for ENS name.\n  const address = await client.getEnsAddress({\n    name,\n    universalResolverAddress: isBasename(name)\n      ? RESOLVER_ADDRESSES_BY_CHAIN_ID[chain.id]\n      : undefined,\n  });\n  return address ?? null;\n};\n"],"names":["getAddress","name","chain","mainnet","chainIsBase","isBase","chainId","id","chainIsEthereum","isEthereum","chainSupportsUniversalResolver","Promise","reject","client","getChainPublicClient","address","getEnsAddress","universalResolverAddress","isBasename","RESOLVER_ADDRESSES_BY_CHAIN_ID","undefined"],"mappings":";;;;;;;;;;;;;;;AAQA;;CAEA,GACaA,MAAAA,UAAU,GAAG,OAAO,EAC/BC,IAAI,EACJC,KAAK,uKAAGC,UAAAA,EACG,KAAoC;IAC/C,MAAMC,WAAW,qLAAGC,SAAAA,AAAM,EAAC;QAAEC,OAAO,EAAEJ,KAAK,CAACK,EAAAA;IAAG,CAAC,CAAC;IACjD,MAAMC,eAAe,yLAAGC,aAAAA,AAAU,EAAC;QAAEH,OAAO,EAAEJ,KAAK,CAACK,EAAAA;IAAG,CAAC,CAAC;IACzD,MAAMG,8BAA8B,GAAGF,eAAe,IAAIJ,WAAW;IAErE,IAAI,CAACM,8BAA8B,EAAE;QACnC,OAAOC,OAAO,CAACC,MAAM,CACnB,gFACF,CAAC;IACH;IAEA,MAAMC,MAAM,qMAAGC,uBAAAA,AAAoB,EAACZ,KAAK,CAAC;IAC1C,6BAAA;IACA,MAAMa,OAAO,GAAG,MAAMF,MAAM,CAACG,aAAa,CAAC;QACzCf,IAAI;QACJgB,wBAAwB,4LAAEC,aAAAA,AAAU,EAACjB,IAAI,CAAC,+KACtCkB,iCAA8B,CAACjB,KAAK,CAACK,EAAE,CAAC,GACxCa;IACN,CAAC,CAAC;IACF,OAAOL,OAAO,IAAI,IAAI;AACxB","ignoreList":[0]}},
    {"offset": {"line": 3217, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3223, "column": 0}, "map": {"version":3,"file":"getAvatars.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/utils/getAvatars.ts"],"sourcesContent":["import { getChainPublicClient } from '@/core/network/getChainPublicClient';\nimport { isBase } from '@/core/utils/isBase';\nimport { isEthereum } from '@/core/utils/isEthereum';\nimport type {\n  Basename,\n  GetAvatarReturnType,\n  GetAvatars,\n} from '@/identity/types';\nimport { mainnet } from 'viem/chains';\nimport { normalize } from 'viem/ens';\nimport { RESOLVER_ADDRESSES_BY_CHAIN_ID } from '../constants';\nimport { getBaseDefaultProfilePicture } from './getBaseDefaultProfilePicture';\nimport { isBasename } from './isBasename';\n\n/**\n * An asynchronous function to fetch multiple Basenames or Ethereum Name Service (ENS)\n * avatars for a given array of ENS names in a single batch request.\n * It returns an array of avatar URLs in the same order as the input names.\n */\nexport const getAvatars = async ({\n  ensNames,\n  chain = mainnet,\n}: GetAvatars): Promise<GetAvatarReturnType[]> => {\n  if (!ensNames || ensNames.length === 0) {\n    return [];\n  }\n\n  const chainIsBase = isBase({ chainId: chain.id });\n  const chainIsEthereum = isEthereum({ chainId: chain.id });\n  const chainSupportsUniversalResolver = chainIsEthereum || chainIsBase;\n\n  if (!chainSupportsUniversalResolver) {\n    return Promise.reject(\n      'ChainId not supported, avatar resolution is only supported on Ethereum and Base.',\n    );\n  }\n\n  const results: GetAvatarReturnType[] = Array(ensNames.length).fill(null);\n\n  // Categorize names by type for optimized processing\n  const basenameIndices: number[] = [];\n  const normalIndices: number[] = [];\n\n  ensNames.forEach((name, index) => {\n    if (isBasename(name)) {\n      basenameIndices.push(index);\n    } else {\n      normalIndices.push(index);\n    }\n  });\n\n  // Process Base avatars\n  if (chainIsBase && basenameIndices.length > 0) {\n    const client = getChainPublicClient(chain);\n\n    try {\n      // Create batch of calls for Base avatars with individual error handling\n      const baseAvatarPromises = basenameIndices.map((index) =>\n        client\n          .getEnsAvatar({\n            name: normalize(ensNames[index]),\n            universalResolverAddress: RESOLVER_ADDRESSES_BY_CHAIN_ID[chain.id],\n          })\n          .catch((error) => {\n            console.error(\n              `Error resolving Base avatar for ${ensNames[index]}:`,\n              error,\n            );\n            return null; // Return null for failed resolutions\n          }),\n      );\n\n      const baseAvatarResults = await Promise.all(baseAvatarPromises);\n\n      baseAvatarResults.forEach((avatar, i) => {\n        const originalIndex = basenameIndices[i];\n        if (avatar) {\n          results[originalIndex] = avatar;\n        }\n      });\n    } catch (error) {\n      console.error('Error resolving Base avatars in batch:', error);\n    }\n  }\n\n  // Process mainnet avatars\n  const fallbackClient = getChainPublicClient(mainnet);\n\n  try {\n    // Create batch of ENS avatar resolution calls with individual error handling\n    const ensAvatarPromises = ensNames.map((name, index) => {\n      // Skip if we already have a result\n      if (results[index] !== null) {\n        return Promise.resolve(null);\n      }\n      return fallbackClient\n        .getEnsAvatar({\n          name: normalize(name),\n        })\n        .catch((error) => {\n          console.error(`Error resolving ENS avatar for ${name}:`, error);\n          return null; // Return null for failed resolutions\n        });\n    });\n\n    // Execute all ENS avatar resolution calls\n    const ensAvatarResults = await Promise.all(ensAvatarPromises);\n\n    // Update results with ENS avatars\n    ensAvatarResults.forEach((avatar, index) => {\n      if (avatar && results[index] === null) {\n        results[index] = avatar;\n      }\n    });\n  } catch (error) {\n    console.error('Error resolving ENS avatars in batch:', error);\n  }\n\n  // Apply default Base profile pictures for basenames that don't have avatars\n  for (const index of basenameIndices) {\n    if (results[index] === null) {\n      results[index] = getBaseDefaultProfilePicture(\n        ensNames[index] as Basename,\n      );\n    }\n  }\n\n  return results;\n};\n"],"names":["getAvatars","ensNames","chain","mainnet","length","chainIsBase","isBase","chainId","id","chainIsEthereum","isEthereum","chainSupportsUniversalResolver","Promise","reject","results","Array","fill","basenameIndices","normalIndices","forEach","name","index","isBasename","push","client","getChainPublicClient","baseAvatarPromises","map","getEnsAvatar","normalize","universalResolverAddress","RESOLVER_ADDRESSES_BY_CHAIN_ID","catch","error","console","baseAvatarResults","all","avatar","i","originalIndex","fallbackClient","ensAvatarPromises","resolve","ensAvatarResults","getBaseDefaultProfilePicture"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3337, "column": 0}, "map": {"version":3,"file":"getNames.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/utils/getNames.ts"],"sourcesContent":["import type { Basename, GetNameReturnType, GetNames } from '@/identity/types';\nimport { mainnet } from 'viem/chains';\nimport { getChainPublicClient } from '../../core/network/getChainPublicClient';\nimport { isBase } from '../../core/utils/isBase';\nimport { isEthereum } from '../../core/utils/isEthereum';\nimport L2ResolverAbi from '../abis/L2ResolverAbi';\nimport { RESOLVER_ADDRESSES_BY_CHAIN_ID } from '../constants';\nimport { convertReverseNodeToBytes } from './convertReverseNodeToBytes';\n\n/**\n * An asynchronous function to fetch multiple Basenames or Ethereum Name Service (ENS)\n * names for a given array of Ethereum addresses in a single batch request.\n * It returns an array of ENS names in the same order as the input addresses.\n */\nexport const getNames = async ({\n  addresses,\n  chain = mainnet,\n}: GetNames): Promise<GetNameReturnType[]> => {\n  if (!addresses || addresses.length === 0) {\n    return [];\n  }\n\n  const chainIsBase = isBase({ chainId: chain.id });\n  const chainIsEthereum = isEthereum({ chainId: chain.id });\n  const chainSupportsUniversalResolver = chainIsEthereum || chainIsBase;\n\n  if (!chainSupportsUniversalResolver) {\n    return Promise.reject(\n      'ChainId not supported, name resolution is only supported on Ethereum and Base.',\n    );\n  }\n\n  const client = getChainPublicClient(chain);\n  const results: GetNameReturnType[] = Array(addresses.length).fill(null);\n\n  if (chainIsBase) {\n    try {\n      // Create batch of calls for the multicall contract\n      const calls = addresses.map((address) => ({\n        address: RESOLVER_ADDRESSES_BY_CHAIN_ID[chain.id],\n        abi: L2ResolverAbi,\n        functionName: 'name',\n        args: [convertReverseNodeToBytes(address, chain.id)],\n      }));\n\n      const batchResults = await client.multicall({\n        contracts: calls,\n        allowFailure: true,\n      });\n\n      batchResults.forEach((result, index) => {\n        if (result.status === 'success' && result.result) {\n          results[index] = result.result as Basename;\n        }\n      });\n\n      // If we have all results, return them\n      if (results.every((result) => result !== null)) {\n        return results;\n      }\n    } catch (error) {\n      console.error('Error resolving Base names in batch:', error);\n    }\n  }\n\n  // Default fallback to mainnet\n  // ENS resolution is not well-supported on Base, so want to ensure that we fall back to mainnet\n  const fallbackClient = getChainPublicClient(mainnet);\n\n  // For addresses that don't have a result yet, try ENS resolution on mainnet\n  const unresolvedIndices = results\n    .map((result, index) => (result === null ? index : -1))\n    .filter((index) => index !== -1);\n\n  if (unresolvedIndices.length > 0) {\n    try {\n      const ensPromises = unresolvedIndices.map((index) =>\n        fallbackClient\n          .getEnsName({\n            address: addresses[index],\n          })\n          .catch((error) => {\n            console.error(\n              `Error resolving ENS name for ${addresses[index]}:`,\n              error,\n            );\n            return null; // Return null for failed resolutions\n          }),\n      );\n\n      const ensResults = await Promise.all(ensPromises);\n\n      // Update results with ENS names\n      ensResults.forEach((ensName, i) => {\n        const originalIndex = unresolvedIndices[i];\n        results[originalIndex] = ensName;\n      });\n    } catch (error) {\n      console.error('Error resolving ENS names in batch:', error);\n    }\n  }\n\n  return results;\n};\n"],"names":["getNames","addresses","chain","mainnet","length","chainIsBase","isBase","chainId","id","chainIsEthereum","isEthereum","chainSupportsUniversalResolver","Promise","reject","client","getChainPublicClient","results","Array","fill","calls","map","address","RESOLVER_ADDRESSES_BY_CHAIN_ID","abi","L2ResolverAbi","functionName","args","convertReverseNodeToBytes","batchResults","multicall","contracts","allowFailure","forEach","result","index","status","every","error","console","fallbackClient","unresolvedIndices","filter","ensPromises","getEnsName","catch","ensResults","all","ensName","i","originalIndex"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3429, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3435, "column": 0}, "map": {"version":3,"file":"useAddress.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/hooks/useAddress.ts"],"sourcesContent":["import type {\n  GetAddressReturnType,\n  UseAddressOptions,\n  UseQueryOptions,\n} from '@/identity/types';\nimport { getAddress } from '@/identity/utils/getAddress';\nimport { DEFAULT_QUERY_OPTIONS } from '@/internal/constants';\nimport { useQuery } from '@tanstack/react-query';\nimport { mainnet } from 'viem/chains';\n\nexport const useAddress = (\n  { name, chain = mainnet }: UseAddressOptions,\n  queryOptions?: UseQueryOptions<GetAddressReturnType>,\n) => {\n  const queryKey = ['useAddress', name, chain.id];\n\n  return useQuery<GetAddressReturnType>({\n    queryKey,\n    queryFn: () => getAddress({ name, chain }),\n    enabled: !!name,\n    ...DEFAULT_QUERY_OPTIONS,\n    // Use cacheTime as gcTime for backward compatibility\n    gcTime: queryOptions?.cacheTime,\n    ...queryOptions,\n  });\n};\n"],"names":["useAddress","name","chain","mainnet","queryOptions","queryKey","id","useQuery","queryFn","getAddress","enabled","DEFAULT_QUERY_OPTIONS","gcTime","cacheTime"],"mappings":";;;AAUO,MAAMA,UAAU,GAAGA,CACxB;EAAEC,IAAI;AAAqC,CAAC,EAC5CG,YAAoD,KACjD;AAFKF,EAAAA,KAAK,GAAGC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAGhB,IAAA,EAAME,QAAQ,GAAG,CAAC,EAElB,IAAA,GAAOE,CACLF,EAH4B,EAAEJ,EAG9BI,CADa,CAFqB,AAEE,EAFAH,KAAK,CAACI,EAAE,CAAC,sJAG7CD,CAAAA,EAAQ,QAAA,EACRG,EAAAA,CAAAA,OAAO,EAAEA,MAAMC,UAAU,CAAC;QAAER,EAAAA,EAAI,SAAA;QAAA;QAAA;QAAA,MAAA,EAAA;KAAA;IAAEC,IAAAA,GAAAA,CAAAA,GAAAA,8KAAAA,CAAAA,WAAAA,EAAAA,cAAAA,cAAAA;QAAM,CAAC,CAAC;QAC1CQ,OAAO;mCAAE,CAAC,CAACT,4LAAI,aAAA,EAAA;oBACf,CAAGU,qBAAqB;oBACxB;gBACAC,MAAM,EAAER,YAAY,EAAES,SAAS;;QAC/B,GAAGT,MAAAA,CAAAA,CAAAA;IACL,CAAC,CAAC,CAAA,2KAAA,CAAA,wBAAA,GAAA,CAAA,GAAA;QACJ,qDAAA","ignoreList":[0]}},
    {"offset": {"line": 3511, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3517, "column": 0}, "map": {"version":3,"file":"useAvatars.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/hooks/useAvatars.ts"],"sourcesContent":["import { getAvatars } from '@/identity/utils/getAvatars';\nimport { DEFAULT_QUERY_OPTIONS } from '@/internal/constants';\nimport { useQuery } from '@tanstack/react-query';\nimport { mainnet } from 'viem/chains';\nimport type {\n  GetAvatarReturnType,\n  UseAvatarsOptions,\n  UseQueryOptions,\n} from '../types';\n\n/**\n * A React hook that leverages the `@tanstack/react-query` for fetching and optionally caching\n * multiple Basenames or ENS avatars in a single batch request.\n */\nexport const useAvatars = (\n  { ensNames, chain = mainnet }: UseAvatarsOptions,\n  queryOptions?: UseQueryOptions<GetAvatarReturnType[]>,\n) => {\n  const namesKey = ensNames.join(',');\n  const queryKey = ['useAvatars', namesKey, chain.id];\n\n  return useQuery<GetAvatarReturnType[]>({\n    queryKey,\n    queryFn: () => getAvatars({ ensNames, chain }),\n    enabled: !!ensNames.length,\n    ...DEFAULT_QUERY_OPTIONS,\n    gcTime: queryOptions?.cacheTime,\n    ...queryOptions,\n  });\n};\n"],"names":["useAvatars","ensNames","chain","mainnet","queryOptions","namesKey","join","queryKey","id","useQuery","queryFn","getAvatars","enabled","length","DEFAULT_QUERY_OPTIONS","gcTime","cacheTime"],"mappings":";;;AAUA;AACA;AAEA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAGIC,QAAQ;;;CAGV,CAAA,IACA,EADMI,EACN,EAAME,IADQ,GAAGN,CACH,GAAG,CAAC,EAElB,CAHyB,CAACK,IAAI,CAAC,AAGxBG,CAAAA,EAH2B,AACJ,CADK,CACHJ,AAG9BE,GADa,CAAwB,EACrCA,EAHsC,EAAEL,KAAK,CAACM,EAAE,CAAC,sJAGjDD,CAAAA,CAAQ,SAAA,EACRG,EAAAA,CAAAA,OAAO,EAAEA,MAAMC,UAAU,CAAC;QAAEV,EAAAA,MAAQ,KAAA,SAAA,IAAA,CAAA;IAAEC,IAAAA,EAAAA,WAAAA;QAAAA;QAAAA;QAAAA,MAAAA,EAAAA;KAAAA;IAAM,GAAC,CAAC,GAAA,CAAA,GAAA,8KAAA,CAAA,WAAA,EAAA,cAAA,cAAA;QAC9CU,OAAO,EAAE,CAAC,CAACX,QAAQ,CAACY,MAAM;QAC1B,GAAGC,IAAAA;mCAAAA,IAAAA,CAAAA,GAAAA,qLAAAA,CAAAA,aAAqB,EAAA;oBACxBC,IAAM,EAAEX,YAAY,EAAEY,SAAS;oBAC/B,CAAGZ;gBACH;;QACJ,SAAA,CAAA,CAAA,SAAA,MAAA","ignoreList":[0]}},
    {"offset": {"line": 3596, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3602, "column": 0}, "map": {"version":3,"file":"useNames.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/hooks/useNames.ts"],"sourcesContent":["import { getNames } from '@/identity/utils/getNames';\nimport { DEFAULT_QUERY_OPTIONS } from '@/internal/constants';\nimport { useQuery } from '@tanstack/react-query';\nimport { mainnet } from 'viem/chains';\nimport type {\n  GetNameReturnType,\n  UseNamesOptions,\n  UseQueryOptions,\n} from '../types';\n\n/**\n * A React hook that leverages the `@tanstack/react-query` for fetching and optionally caching\n * multiple Basenames or ENS names in a single batch request.\n */\nexport const useNames = (\n  { addresses, chain = mainnet }: UseNamesOptions,\n  queryOptions?: UseQueryOptions<GetNameReturnType[]>,\n) => {\n  const addressesKey = addresses.join(',');\n  const queryKey = ['useNames', addressesKey, chain.id];\n\n  return useQuery<GetNameReturnType[]>({\n    queryKey,\n    queryFn: () => getNames({ addresses, chain }),\n    enabled: !!addresses.length,\n    ...DEFAULT_QUERY_OPTIONS,\n    // Use cacheTime as gcTime for backward compatibility\n    gcTime: queryOptions?.cacheTime,\n    ...queryOptions,\n  });\n};\n"],"names":["useNames","addresses","chain","mainnet","queryOptions","addressesKey","join","queryKey","id","useQuery","queryFn","getNames","enabled","length","DEFAULT_QUERY_OPTIONS","gcTime","cacheTime"],"mappings":";;;AAUA;AACA;AAEA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAGIC,SAAS;;;CAGX,CAAA,IACA,EADMI,EACN,EAAME,QADY,AACJ,CAAA,CAAA,CADON,AACJ,CAAC,AAElB,OAAOQ,CAHuB,CAACH,AAGxBG,CAFqB,EAAEJ,CADK,AAIjCE,CAJkC,CAGrB,CAAsB,CAHE,CAAC,CAItCA,KAHwC,EAAEL,KAAK,CAACM,EAAE,CAAC,mJAGnDD,CAAAA,CAAQ,SAAA,EACRG,EAAAA,CAAAA,OAAO,EAAEA,MAAMC,QAAQ,CAAC;QAAEV,EAAAA,OAAS,QAAA,UAAA,IAAA,CAAA;IAAEC,IAAAA,EAAAA,WAAAA;QAAAA;QAAAA;QAAAA,MAAAA,EAAAA;KAAAA;IAAM,GAAC,CAAC,GAAA,CAAA,GAAA,8KAAA,CAAA,WAAA,EAAA,cAAA,cAAA;QAC7CU,OAAO,EAAE,CAAC,CAACX,SAAS,CAACY,MAAM;QAC3B,GAAGC,IAAAA;iCAAAA,IAAAA,CAAAA,GAAAA,mLAAAA,CAAAA,WAAAA,EAAqB;oBACxB;oBACAC,IAAM,EAAEX,YAAY,EAAEY,SAAS;gBAC/B,GAAGZ;;QACH,SAAA,CAAA,CAAA,UAAA,MAAA;IACJ,GAAA,2KAAA,CAAA,wBAAA,GAAA,CAAA,GAAA","ignoreList":[0]}},
    {"offset": {"line": 3682, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3688, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/index.ts"],"sourcesContent":["// 🌲☀🌲\nexport { Address } from './components/Address';\nexport { Avatar } from './components/Avatar';\nexport { Badge } from './components/Badge';\nexport { EthBalance } from './components/EthBalance';\nexport { Identity } from './components/Identity';\nexport { Name } from './components/Name';\nexport { Socials } from './components/Socials';\nexport { isBasename } from './utils/isBasename';\nexport { IdentityCard } from './components/IdentityCard';\nexport { getAddress } from './utils/getAddress';\nexport { getAttestations } from './utils/getAttestations';\nexport { getAvatar } from './utils/getAvatar';\nexport { getAvatars } from './utils/getAvatars';\nexport { getName } from './utils/getName';\nexport { getNames } from './utils/getNames';\nexport { useAddress } from './hooks/useAddress';\nexport { useAttestations } from './hooks/useAttestations';\nexport { useAvatar } from './hooks/useAvatar';\nexport { useAvatars } from './hooks/useAvatars';\nexport { useName } from './hooks/useName';\nexport { useNames } from './hooks/useNames';\nexport type {\n  AddressReact,\n  Attestation,\n  AvatarReact,\n  BadgeReact,\n  BaseMainnetName,\n  Basename,\n  BaseSepoliaName,\n  EASChainDefinition,\n  EASSchemaUid,\n  EthBalanceReact,\n  GetAddress,\n  GetAddressReturnType,\n  GetAttestationsOptions,\n  GetAvatar,\n  GetAvatarReturnType,\n  GetAvatars,\n  GetName,\n  GetNameReturnType,\n  GetNames,\n  IdentityContextType,\n  IdentityReact,\n  NameReact,\n  UseAddressOptions,\n  UseAvatarOptions,\n  UseNamesOptions,\n  UseQueryOptions,\n  UseNameOptions,\n} from './types';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;CAAA,QAAA","ignoreList":[0]}},
    {"offset": {"line": 3712, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3747, "column": 0}, "map": {"version":3,"file":"isEns.js","sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/identity/utils/isEns.ts"],"sourcesContent":["export const isEns = (username: string) => {\n  if (username.endsWith('.base.eth') || username.endsWith('.basetest.eth')) {\n    return false;\n  }\n  if (username.endsWith('.eth') || username.endsWith('.test.eth')) {\n    return true;\n  }\n  return false;\n};\n"],"names":["isEns","username","endsWith"],"mappings":";;;AAAaA,MAAAA,KAAK,IAAIC,QAAgB,IAAK;IACzC,IAAIA,QAAQ,CAACC,QAAQ,CAAC,WAAW,CAAC,IAAID,QAAQ,CAACC,QAAQ,CAAC,eAAe,CAAC,EAAE;QACxE,OAAO,KAAK;IACd;IACA,IAAID,QAAQ,CAACC,QAAQ,CAAC,MAAM,CAAC,IAAID,QAAQ,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAE;QAC/D,OAAO,IAAI;IACb;IACA,OAAO,KAAK;AACd","ignoreList":[0]}},
    {"offset": {"line": 3761, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}