{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"getCoinbaseSmartWalletFundUrl.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/utils/getCoinbaseSmartWalletFundUrl.ts"],"sourcesContent":["import { version } from '../../version';\n\nconst COINBASE_SMART_WALLET_FUND_URL = 'https://keys.coinbase.com/fund';\n\n/**\n * Builds the URL for the Coinbase Smart Wallet funding page, including parameters to identify the dApp based on the\n * document title and current URL.\n * @returns the URL\n */\nexport function getCoinbaseSmartWalletFundUrl() {\n  const currentURL = window.location.href;\n  const tabName = document.title;\n\n  const fundUrl = `${COINBASE_SMART_WALLET_FUND_URL}?dappName=${encodeURIComponent(\n    tabName,\n  )}&dappUrl=${encodeURIComponent(currentURL)}&version=${encodeURIComponent(\n    version,\n  )}&source=onchainkit`;\n\n  return fundUrl;\n}\n"],"names":["COINBASE_SMART_WALLET_FUND_URL","getCoinbaseSmartWalletFundUrl","currentURL","window","location","href","tabName","document","title","fundUrl","encodeURIComponent","version"],"mappings":";;;;;;;;;;CAOA,GACA,SAAA;IACO,MAAA,CAASC,YAAAA,OAAAA,QAAAA,CAAAA,CAA6BA,GAAG;IAC9C,MAAMC,UAAU,GAAGC,MAAM,CAACC,IAAAA,IAAQ,CAACC,IAAI;IACvC,MAAMC,OAAO,GAAGC,GAAAA,KAAQ,CAACC,KAAK,oBAAA,UAAA,EAAA,mBAAA,SAAA,SAAA,EAAA,mBAAA,YAAA,SAAA,EAAA,mBAAA,6JAAA,CAAA,UAAA,EAAA,kBAAA,CAAA;IAE9B,MAAMC,CAAAA,MAAO,GAAG,CAAA,EAAGT,8BAA8B,CAAaU,UAAAA,EAAAA,kBAAkB,CAC9EJ,OACF,CAAC,YAAYI,kBAAkB,CAACR,UAAU,CAAC,CAAA,SAAA,EAAYQ,kBAAkB,CACvEC,OACF,CAAC,CAAoB,kBAAA,CAAA;AAErB,EAAA,OAAOF,OAAO","ignoreList":[0]}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"file":"constants.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/constants.ts"],"sourcesContent":["export const DEFAULT_ONRAMP_URL = 'https://pay.coinbase.com';\n\n/** The base URL for the Coinbase Onramp widget */\nexport const ONRAMP_BUY_URL = `${DEFAULT_ONRAMP_URL}/buy`;\n\n/** The recommended height of a Coinbase Onramp popup window */\nexport const ONRAMP_POPUP_HEIGHT = 720;\n\n/** The recommended width of a Coinbase Onramp popup window */\nexport const ONRAMP_POPUP_WIDTH = 460;\n\n/** The base URL for the Coinbase Onramp API */\nexport const ONRAMP_API_BASE_URL =\n  'https://api.developer.coinbase.com/onramp/v1';\n\n/** Time in milliseconds to wait before resetting the button state to default after a transaction is completed */\nexport const FUND_BUTTON_RESET_TIMEOUT = 3000;\n"],"names":["DEFAULT_ONRAMP_URL","ONRAMP_BUY_URL","ONRAMP_POPUP_HEIGHT","ONRAMP_POPUP_WIDTH","ONRAMP_API_BASE_URL","FUND_BUTTON_RESET_TIMEOUT"],"mappings":";;;;;;;;AAAO,MAAMA,kBAAkB,GAAG;AAElC,gDAAA,GACaC,MAAAA,cAAc,GAAG,CAAA,EAAGD,kBAAkB,CAAM,IAAA,CAAA;AAEzD,6DAAA,GACO,MAAME,mBAAmB,GAAG;AAEnC,4DAAA,GACO,MAAMC,kBAAkB,GAAG;AAElC,6CAAA,GACO,MAAMC,mBAAmB,GAC9B;AAEF,+GAAA,GACO,MAAMC,yBAAyB,GAAG","ignoreList":[0]}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"file":"getOnrampBuyUrl.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/utils/getOnrampBuyUrl.ts"],"sourcesContent":["import { version } from '../../version';\nimport { ONRAMP_BUY_URL } from '../constants';\nimport type {\n  GetOnrampUrlWithProjectIdParams,\n  GetOnrampUrlWithSessionTokenParams,\n} from '../types';\n\n/**\n * Builds a Coinbase Onramp buy URL using the provided parameters.\n * @param projectId a projectId generated in the Coinbase Developer Portal\n * @returns the URL\n */\nexport function getOnrampBuyUrl({\n  projectId,\n  originComponentName,\n  ...props\n}: GetOnrampUrlWithProjectIdParams | GetOnrampUrlWithSessionTokenParams) {\n  const url = new URL(ONRAMP_BUY_URL);\n\n  if (projectId !== undefined) {\n    // Coinbase Onramp requires projectId to be passed as appId\n    url.searchParams.append('appId', projectId);\n  }\n\n  for (const key of Object.keys(props) as Array<keyof typeof props>) {\n    const value = props[key];\n    if (value !== undefined) {\n      if (['string', 'number', 'boolean'].includes(typeof value)) {\n        url.searchParams.append(key, value.toString());\n      } else {\n        url.searchParams.append(key, JSON.stringify(value));\n      }\n    }\n  }\n\n  if (originComponentName) {\n    url.searchParams.append(\n      'sdkVersion',\n      `onchainkit@${version}:${originComponentName}`,\n    );\n  } else {\n    url.searchParams.append('sdkVersion', `onchainkit@${version}`);\n  }\n\n  url.searchParams.sort();\n\n  return url.toString();\n}\n"],"names":["getOnrampBuyUrl","projectId","originComponentName","props","url","URL","ONRAMP_BUY_URL","undefined","searchParams","append","key","Object","keys","value","includes","toString","JSON","stringify","version","sort"],"mappings":";;;AAOA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;EAIEE,IACA,GAAGC,IAAAA,QADgB,QAChBA,IAAAA;IACkE,CAAE,GAAA,YAAA,KAAA,SAAA,EACvE,IAAMC,GAAG,GAAG,IAAIC,GAAG,CAACC,IAAAA,KAAAA,KAAc,CAAC,aAAA,EAEnC,EAAIL,MAAAA,GAAS,KAAKM,SAAS,EAAE,MAAA,MAAA;IAC3B,MAAA,MAAA,IAAA,IAAA,uKAAA,CAAA,iBAAA;MACAH,EAAAA,CAAG,CAACI,YAAY,CAACC,MAAM,CAAC,GAAA,IAAO,EAAER,SAAS,CAAC;QAC7C,2DAAA;QAEA,GAAK,CAAA,KAAMS,GAAG,IAAIC,CAAAA,KAAM,CAACC,CAAAA,GAAI,CAACT,KAAK,CAAC,EAA+B;IACjE,EAAA,MAAMU,KAAK,GAAGV,KAAK,CAACO,GAAG,CAAC;MACxB,GAAA,CAAIG,KAAK,KAAKN,EAAAA,OAAS,EAAE,EAAA,CAAA,OAAA;QACvB,EAAA,IAAI,CAAC,OAAA,CAAQ,EAAE,EAAA,CAAA,IAAA,CAAQ,EAAE,SAAS,CAAC,CAACO,QAAQ,CAAC,OAAOD,KAAK,CAAC,EAAE;QAC1DT,IAAAA,GAAG,CAACI,MAAAA,MAAY,CAACC,IAAAA,EAAM,CAACC,GAAG,EAAEG,KAAK,CAACE,QAAQ,EAAE,CAAC;YAChD,CAAC,GAAA;gBAAA,EAAM;gBAAA;gBAAA;aAAA,CAAA,QAAA,CAAA,OAAA,QAAA;gBACLX,GAAG,CAACI,YAAY,CAACC,MAAM,CAACC,GAAG,EAAEM,IAAI,CAACC,CAAAA,QAAS,CAACJ,KAAK,CAAC,CAAC;YACrD,OAAA;gBACF,IAAA,YAAA,CAAA,MAAA,CAAA,KAAA,KAAA,SAAA,CAAA;YACF;QAEA,EAAIX,mBAAmB,EAAE;IACvBE,EAAAA,GAAG,CAACI,YAAY,CAACC,MAAM,CACrB,YAAY,EACZ,CAAA,WAAA,EAAcS,OAAO,CAAA,CAAA,EAAIhB,mBAAmB,CAAA,CAC9C,CAAC;IACH,CAAC,GAAA,GAAM,kBAAA;QACLE,GAAG,CAACI,YAAY,CAACC,MAAM,CAAC,YAAY,EAAE,CAAA,WAAA,gKAAcS,UAAO,CAAA,CAAE,CAAC,CAAA,qBAAA;IAChE,OAAA;QAEAd,CAAG,CAACI,EAAAA,UAAY,CAACW,CAAAA,CAAAA,EAAI,EAAE,EAAA,CAAA,cAAA,CAAA,WAAA,EAAA,6JAAA,CAAA,UAAA,EAAA;IAEvB,OAAOf,GAAG,CAACW,QAAQ,EAAE;IACvB,IAAA,YAAA,CAAA,IAAA","ignoreList":[0]}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"file":"useGetFundingUrl.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/hooks/useGetFundingUrl.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport { useAccount } from 'wagmi';\nimport { useOnchainKit } from '../../useOnchainKit';\nimport { useIsWalletACoinbaseSmartWallet } from '../../wallet/hooks/useIsWalletACoinbaseSmartWallet';\nimport { getCoinbaseSmartWalletFundUrl } from '../utils/getCoinbaseSmartWalletFundUrl';\nimport { getOnrampBuyUrl } from '../utils/getOnrampBuyUrl';\n\n/**\n * Gets the correct funding URL based on the connected wallet. If a Coinbase Smart Wallet is connected it will send the\n * user to keys.coinbase.com, otherwise it will send them to pay.coinbase.com.\n * @returns the funding URL and optional popup dimensions if the URL requires them\n */\nexport function useGetFundingUrl({\n  fiatCurrency,\n  originComponentName,\n}: {\n  fiatCurrency?: string;\n  originComponentName?: string;\n}): string | undefined {\n  const { projectId, chain: defaultChain } = useOnchainKit();\n  const { address, chain: accountChain } = useAccount();\n  const isCoinbaseSmartWallet = useIsWalletACoinbaseSmartWallet();\n\n  // If the connected wallet's active chain is not included in the Wagmi config, accountChain will be undefined. If this\n  // is the case, fall back to the default chain specified in the OnchainKit config.\n  const chain = accountChain || defaultChain;\n\n  return useMemo(() => {\n    if (isCoinbaseSmartWallet) {\n      return getCoinbaseSmartWalletFundUrl();\n    }\n\n    if (projectId === null || address === undefined) {\n      return undefined;\n    }\n\n    return getOnrampBuyUrl({\n      projectId,\n      addresses: { [address]: [chain.name.toLowerCase()] },\n      fiatCurrency,\n      originComponentName,\n    });\n  }, [\n    isCoinbaseSmartWallet,\n    projectId,\n    address,\n    chain,\n    fiatCurrency,\n    originComponentName,\n  ]);\n}\n"],"names":["useGetFundingUrl","fiatCurrency","originComponentName","projectId","chain","defaultChain","useOnchainKit","address","accountChain","useAccount","isCoinbaseSmartWallet","useIsWalletACoinbaseSmartWallet","useMemo","getCoinbaseSmartWalletFundUrl","undefined","getOnrampBuyUrl","addresses","name","toLowerCase"],"mappings":";;;;;;;;;;;;;;;AAOA;;;;CAIA,GACO,SAASA,gBAAgBA,CAAC,EAC/BC,YAAY,EACZC,mBAAAA,EAID,EAAsB;IACrB,MAAM,iBAAA,CAAA,GAAA,mKAAA,CAAA,gBAAA,KAAEC,SAAS,GAAA,eAAA,SAAA,EAAEC,KAAK,EAAEC,QAAAA,eAAAA,KAAAA;KAAc,GAAGC,EAAAA,WAAa,EAAE,CAAA,CAAA,GAAA,8JAAA,CAAA,aAAA,KAC1D,IAAM,MAAA,YAAA,OAAA,EAAEC,OAAO,QAAA,YAAA,KAAA;IAAEH,EAAAA,IAAAA,CAAK,EAAEI,qBAAAA,CAAAA,GAAAA,wMAAAA,CAAAA,kCAAAA;IACxB,MAAME,qBAAqB,GAAGC,+BAA+B,EAAE,uDAAA;;IAE/D,MAAA,QAAA,gBAAA;IACA,OAAA,CAAA,GAAA,6JAAA,CAAA,UAAA;oCAAA;YACA,IAAMP,KAAK,GAAGI,YAAY,GAAA,CAAIH,YAAY;gBAE1C,GAAOO,IAAAA,CAAAA,GAAAA,oMAAAA,CAAAA,GAAO,CAAC,MAAM,sBAAA;YACnB,IAAIF,qBAAqB,EAAE;cACzB,EAAA,KAAOG,SAAAA,QAAAA,YAA6B,EAAE,SAAA;gBACxC,OAAA;YAEA,IAAIV,SAAS,KAAK,IAAI,IAAII,OAAO,KAAKO,SAAS,EAAE;YAC/C,EAAA,KAAA,CAAA,GAAA,sLAAA,CAAA,EAAOA,SAAS,OAAA,EAAA;gBAClB;gBAEA,KAAOC,MAAAA,SAAe,CAAC;oBACrBZ,CAAAA,MAAS,EAAA,EAAA;wBAAA,MAAA,IAAA,CAAA,WAAA;qBAAA;gBACTa,SAAS,EAAE;kBAAE,CAACT,OAAO,GAAG,CAACH,KAAK,CAACa,IAAI,CAACC,WAAW,EAAE;iBAAG;cACpDjB,YAAY;QACZC;mCAAAA;QAAAA;QAAAA;QAAAA;QAAAA;QAAAA;QAAAA;KAAAA;AACF,KAAC,CAAC;;CASN,4CAAA","ignoreList":[0]}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"file":"getFundingPopupSize.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/utils/getFundingPopupSize.ts"],"sourcesContent":["import {\n  getWindowDimensions,\n  type popupSizes,\n} from '../../internal/utils/getWindowDimensions';\nimport { ONRAMP_POPUP_HEIGHT, ONRAMP_POPUP_WIDTH } from '../constants';\nimport { ONRAMP_BUY_URL } from '../constants';\n\ntype PopupSize = {\n  height: number;\n  width: number;\n};\n\n/**\n * Gets the appropriate popup dimensions for the given size and funding URL.\n */\nexport function getFundingPopupSize(\n  size: keyof typeof popupSizes,\n  fundingUrl?: string,\n): PopupSize {\n  // The Coinbase Onramp widget is not very responsive, so we need to set a fixed popup size.\n  if (fundingUrl?.includes(ONRAMP_BUY_URL)) {\n    return {\n      height: ONRAMP_POPUP_HEIGHT,\n      width: ONRAMP_POPUP_WIDTH,\n    };\n  }\n\n  return getWindowDimensions(size);\n}\n"],"names":["getFundingPopupSize","size","fundingUrl","includes","ONRAMP_BUY_URL","height","ONRAMP_POPUP_HEIGHT","width","ONRAMP_POPUP_WIDTH","getWindowDimensions"],"mappings":";;;;;;;AAYA;;CAEA,GACO,SAASA,mBAAmBA,CACjCC,IAA6B,EAC7BC,UAAmB,EACR;IACX,2FAAA;IACA,IAAIA,UAAU,EAAEC,QAAQ,yKAACC,iBAAc,CAAC,EAAE;QACxC,OAAO;YACLC,MAAM,0KAAEC,sBAAmB;YAC3BC,KAAK,0KAAEC,qBAAAA;SACR;IACH;IAEA,0MAAOC,sBAAAA,AAAmB,EAACR,IAAI,CAAC;AAClC","ignoreList":[0]}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"file":"FundButton.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/components/FundButton.tsx"],"sourcesContent":["'use client';\n\nimport { useCallback } from 'react';\nimport { useTheme } from '../../internal/hooks/useTheme';\nimport { border, cn, color, pressable, text } from '../../styles/theme';\n\nimport { usePopupMonitor } from '@/buy/hooks/usePopupMonitor';\nimport { ErrorSvg } from '@/internal/svg/errorSvg';\nimport { openPopup } from '@/internal/utils/openPopup';\nimport { useMemo } from 'react';\nimport { useAccount } from 'wagmi';\nimport { useAnalytics } from '../../core/analytics/hooks/useAnalytics';\nimport { FundEvent } from '../../core/analytics/types';\nimport { Spinner } from '../../internal/components/Spinner';\nimport { AddSvg } from '../../internal/svg/addSvg';\nimport { SuccessSvg } from '../../internal/svg/successSvg';\nimport { background } from '../../styles/theme';\nimport { ConnectWallet } from '../../wallet/components/ConnectWallet';\nimport { useGetFundingUrl } from '../hooks/useGetFundingUrl';\nimport type { FundButtonReact } from '../types';\nimport { getFundingPopupSize } from '../utils/getFundingPopupSize';\n\nexport function FundButton({\n  className,\n  disabled = false,\n  fundingUrl,\n  hideIcon = false,\n  hideText = false,\n  openIn = 'popup',\n  popupSize = 'md',\n  rel,\n  target,\n  text: buttonText = 'Fund',\n  successText: buttonSuccessText = 'Success',\n  errorText: buttonErrorText = 'Something went wrong',\n  state: buttonState = 'default',\n  fiatCurrency = 'USD',\n  onPopupClose,\n  onClick,\n}: FundButtonReact) {\n  const componentTheme = useTheme();\n  // If the fundingUrl prop is undefined, fallback to our recommended funding URL based on the wallet type\n  const fallbackFundingUrl = useGetFundingUrl({\n    fiatCurrency,\n    originComponentName: 'FundButton',\n  });\n  const { address } = useAccount();\n  const fundingUrlToRender = fundingUrl ?? fallbackFundingUrl;\n  const isDisabled = disabled || !fundingUrlToRender;\n  const shouldShowConnectWallet = !address;\n\n  const { startPopupMonitor } = usePopupMonitor(onPopupClose);\n  const { sendAnalytics } = useAnalytics();\n\n  const handleAnalyticsInitiated = useCallback(() => {\n    sendAnalytics(FundEvent.FundInitiated, {\n      currency: fiatCurrency,\n    });\n  }, [sendAnalytics, fiatCurrency]);\n\n  const handleAnalyticsFailure = useCallback(\n    (error: string) => {\n      sendAnalytics(FundEvent.FundFailure, {\n        error,\n        metadata: { currency: fiatCurrency },\n      });\n    },\n    [sendAnalytics, fiatCurrency],\n  );\n\n  const handleClick = useCallback(\n    (e: React.MouseEvent) => {\n      e.preventDefault();\n\n      if (fundingUrlToRender) {\n        handleAnalyticsInitiated();\n        onClick?.();\n        const { height, width } = getFundingPopupSize(\n          popupSize,\n          fundingUrlToRender,\n        );\n        const popupWindow = openPopup({\n          url: fundingUrlToRender,\n          height,\n          width,\n          target,\n        });\n\n        if (popupWindow) {\n          startPopupMonitor(popupWindow);\n        } else {\n          handleAnalyticsFailure('Failed to open funding popup');\n        }\n      }\n    },\n    [\n      fundingUrlToRender,\n      popupSize,\n      target,\n      onClick,\n      startPopupMonitor,\n      handleAnalyticsInitiated,\n      handleAnalyticsFailure,\n    ],\n  );\n\n  const buttonColorClass = useMemo(() => {\n    if (buttonState === 'error') {\n      return background.error;\n    }\n    return pressable.primary;\n  }, [buttonState]);\n\n  const classNames = cn(\n    componentTheme,\n    buttonColorClass,\n    'px-4 py-3 inline-flex items-center justify-center space-x-2',\n    {\n      [pressable.disabled]: isDisabled,\n    },\n    text.headline,\n    border.radius,\n    color.inverse,\n    className,\n  );\n\n  const buttonIcon = useMemo(() => {\n    if (hideIcon) {\n      return null;\n    }\n    switch (buttonState) {\n      case 'loading':\n        return '';\n      case 'success':\n        return <SuccessSvg fill=\"#F9FAFB\" />;\n      case 'error':\n        return <ErrorSvg fill=\"#F9FAFB\" />;\n      default:\n        return <AddSvg />;\n    }\n  }, [buttonState, hideIcon]);\n\n  const buttonTextContent = useMemo(() => {\n    switch (buttonState) {\n      case 'loading':\n        return '';\n      case 'success':\n        return buttonSuccessText;\n      case 'error':\n        return buttonErrorText;\n      default:\n        return buttonText;\n    }\n  }, [buttonState, buttonSuccessText, buttonErrorText, buttonText]);\n\n  const buttonContent = useMemo(() => {\n    if (buttonState === 'loading') {\n      return <Spinner />;\n    }\n\n    return (\n      <>\n        {buttonIcon && (\n          <span\n            data-testid=\"ockFundButtonIcon\"\n            className=\"flex h-6 items-center\"\n          >\n            {buttonIcon}\n          </span>\n        )}\n        {hideText || (\n          <span data-testid=\"ockFundButtonTextContent\">\n            {buttonTextContent}\n          </span>\n        )}\n      </>\n    );\n  }, [buttonState, buttonIcon, buttonTextContent, hideText]);\n\n  if (openIn === 'tab') {\n    return (\n      <a\n        className={classNames}\n        href={fundingUrlToRender}\n        // If openIn is 'tab', default target to _blank so we don't accidentally navigate in the current tab\n        target={target ?? '_blank'}\n        rel={rel}\n      >\n        {buttonContent}\n      </a>\n    );\n  }\n\n  if (shouldShowConnectWallet) {\n    return <ConnectWallet className={cn('w-full', className)} />;\n  }\n\n  return (\n    <button\n      className={classNames}\n      onClick={handleClick}\n      type=\"button\"\n      disabled={isDisabled}\n      data-testid=\"ockFundButton\"\n    >\n      {buttonContent}\n    </button>\n  );\n}\n"],"names":["FundButton","className","disabled","fundingUrl","hideIcon","hideText","openIn","popupSize","rel","target","text","buttonText","successText","buttonSuccessText","errorText","buttonErrorText","state","buttonState","fiatCurrency","onPopupClose","onClick","componentTheme","useTheme","fallbackFundingUrl","useGetFundingUrl","originComponentName","address","useAccount","fundingUrlToRender","isDisabled","shouldShowConnectWallet","startPopupMonitor","usePopupMonitor","sendAnalytics","useAnalytics","handleAnalyticsInitiated","useCallback","FundEvent","FundInitiated","currency","handleAnalyticsFailure","error","FundFailure","metadata","handleClick","e","preventDefault","height","width","getFundingPopupSize","popupWindow","openPopup","url","buttonColorClass","useMemo","background","pressable","primary","classNames","cn","headline","border","radius","color","inverse","buttonIcon","_jsx","SuccessSvg","fill","ErrorSvg","AddSvg","buttonTextContent","buttonContent","Spinner","_jsxs","_Fragment","children","href","ConnectWallet","type"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 425, "column": 0}, "map": {"version":3,"file":"useEmitLifecycleStatus.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/hooks/useEmitLifecycleStatus.ts"],"sourcesContent":["import { useLifecycleStatus } from '@/internal/hooks/useLifecycleStatus';\nimport { useEffect, useMemo } from 'react';\nimport type { LifecycleEvents, LifecycleStatus } from '../types';\n\nexport const useEmitLifecycleStatus = ({\n  onError,\n  onSuccess,\n  onStatus,\n}: LifecycleEvents) => {\n  const [lifecycleStatus, updateLifecycleStatus] =\n    useLifecycleStatus<LifecycleStatus>({\n      statusName: 'init',\n      statusData: null,\n    });\n\n  // Lifecycle emitters\n  useEffect(() => {\n    // Error\n    if (lifecycleStatus.statusName === 'error') {\n      onError?.(lifecycleStatus.statusData);\n    }\n    // Success\n    if (lifecycleStatus.statusName === 'transactionSuccess') {\n      onSuccess?.(lifecycleStatus.statusData);\n    }\n    // Emit Status\n    onStatus?.(lifecycleStatus);\n  }, [\n    onError,\n    onStatus,\n    onSuccess,\n    lifecycleStatus,\n    lifecycleStatus.statusData,\n    lifecycleStatus.statusName,\n  ]);\n\n  return useMemo(\n    () => ({ lifecycleStatus, updateLifecycleStatus }),\n    [lifecycleStatus, updateLifecycleStatus],\n  );\n};\n"],"names":["useEmitLifecycleStatus","onError","onSuccess","onStatus","lifecycleStatus","updateLifecycleStatus","useLifecycleStatus","statusName","statusData","useEffect","useMemo"],"mappings":";;;AAOEG,EAAAA;AACe,CAAC,KAAK;;;;;;;;;;;;;;AAJhB,MAAMH,GAAAA,kBAAAA,CAAsB,EAAA,CAAGA,CAAC;IAAA,CAAA,QAAA,KAAA,IAAA,EAAA,MAAA,KAAA,CAAA,IAAA,EAAA,MAAA;IAAA,IAAA,IAAA,IAAA,GAAA,IAAA,MAAA,IAAA,IAAA,GAAA,IAAA,CAAA,CAAA,EAAA,GAAA,CAAA,CAAA,EAAA;IAAA,OAAA;AAAA;EACrCC,OAAO,sBAAA,CAAA,EAAA,CAAA;IAAA,IAAA,IAAA,QAAA,IAAA,OAAA,eAAA,OAAA,UAAA,CAAA,CAAA,OAAA,QAAA,CAAA,IAAA,CAAA,CAAA,aAAA;IAAA,IAAA,QAAA,GAAA;QAAA,IAAA,GAAA,GAAA,GAAA,GAAA,IAAA,EAAA,EAAA,IAAA,CAAA,GAAA,IAAA,CAAA;QAAA,IAAA;YAAA,IAAA,IAAA,CAAA,IAAA,EAAA,IAAA,CAAA,EAAA,EAAA,IAAA,EAAA,MAAA,GAAA;gBAAA,IAAA,OAAA,OAAA,GAAA;gBAAA,IAAA,CAAA;YAAA,OAAA,MAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,IAAA,CAAA,EAAA,EAAA,IAAA,KAAA,CAAA,EAAA,IAAA,CAAA,EAAA,KAAA,GAAA,EAAA,MAAA,KAAA,CAAA,GAAA,IAAA,CAAA;QAAA,EAAA,OAAA,GAAA;YAAA,IAAA,CAAA,GAAA,IAAA;QAAA,SAAA;YAAA,IAAA;gBAAA,IAAA,CAAA,KAAA,QAAA,EAAA,MAAA,IAAA,CAAA,IAAA,EAAA,MAAA,IAAA,OAAA,OAAA,CAAA,GAAA;YAAA,SAAA;gBAAA,IAAA,GAAA,MAAA;YAAA;QAAA;QAAA,OAAA;IAAA;AAAA;EACPC,OAAAA,EAAS,cAAA,CAAA;IAAA,IAAA,MAAA,OAAA,CAAA,IAAA,OAAA;AAAA;;;AAGT,EAAA,IAAA,EAAM,CAACE,eAAe,EAAEC,KAAAA,CAAAA,EAEpBE,EAAAA,KAAAA,EACAC,EAAAA,CADU,CAF+B,CAE7B,AAF8B,GAC5CF,CAEEE,EADkB,AAEpB,CADY,AACX,CAAC,CADY,KACZ,OAHgB,CAAkB;IAKtC,MAAA,sBAAA,CAAA,GAAA,6LAAA,CAAA,qBAAA,EAAA;QACAC,KAAS,CAAC,MAAM;QACd,YAAA;IACA,IAAIL,AACFH,EAAAA,OAAO,GAAGG,GADO,CAACG,OACRH,GADkB,CACH,CAACI,GADO,OAAO,AACJ,CAAC,CADK,mBACL,IACvC,kBAAA,oBAAA,CAAA,EAAA,EACA,wBAAA,oBAAA,CAAA,EAAA;IAEEN,IAAAA,SAAS,GAAGE,KAAAA,UAAe,CAACI,UAAU,CAAC;IACzC,CAAA,GAAA,6JAAA,CAAA,YAAA;4CAAA;YACA,QAAA;YACAL,IAAAA,IAAQ,GAAGC,SAAAA,MAAe,CAAC,GAAA,KAAA,SAAA;gBAE3BH,OAAO,EACPE,CAAAA,OAAQ,EACRD,OAAAA,EAAS,EACTE,MAAAA,SAAe,EACfA,eAAe,CAACI,UAAU,EAC1BJ,eAAe,CAACG,UAAU,CAC3B,CAAC;YAEF,KAAOG,OAAO,CACZ,OAAO;YAAEN,UAAAA,KAAe;YAAEC,IAAAA,gBAAAA,UAAAA,KAAAA,sBAAAA;gBAC1B,CAACD,WAAAA,IAAe,EAAEC,UAAAA,UAAAA,CAAqB,CACzC,CAAC;YACH","ignoreList":[0]}},
    {"offset": {"line": 513, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 519, "column": 0}, "map": {"version":3,"file":"fetchOnrampQuote.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/utils/fetchOnrampQuote.ts"],"sourcesContent":["import { convertSnakeToCamelCase } from '../../internal/utils/convertSnakeToCamelCase';\nimport { getApiKey } from '../../internal/utils/getApiKey';\nimport { ONRAMP_API_BASE_URL } from '../constants';\nimport type { OnrampQuoteResponseData } from '../types';\n\n/**\n * Provides a quote based on the asset the user would like to purchase, plus the network, the fiat payment, the payment currency, payment method, and country.\n *\n * @param purchaseCurrency ID of the crypto asset the user wants to purchase. Retrieved from the options API. `required`\n * @param purchaseNetwork Name of the network that the purchase currency should be purchased on.\n * Retrieved from the options API. If omitted, the default network for the crypto currency is used.\n * @param paymentCurrency Fiat currency of the payment amount, e.g., `USD`. `required`\n * @param paymentMethod ID of payment method used to complete the purchase. Retrieved from the options API. `required`\n * @param paymentAmount Fiat amount the user wants to spend to purchase the crypto currency, inclusive of fees with two decimals of precision, e.g., `100.00`. `required`\n * @param country ISO 3166-1 two-digit country code string representing the purchasing user’s country of residence, e.g., US. `required`\n * @param subdivision ISO 3166-2 two-digit country subdivision code representing the purchasing user’s subdivision of residence within their country, e.g. `NY`.\n * Required if the `country=“US”` because certain states (e.g., `NY`) have state specific asset restrictions.\n */\nexport async function fetchOnrampQuote({\n  purchaseCurrency,\n  purchaseNetwork,\n  paymentCurrency,\n  paymentMethod,\n  paymentAmount,\n  country,\n  subdivision,\n  apiKey,\n}: {\n  purchaseCurrency: string;\n  purchaseNetwork?: string;\n  paymentCurrency: string;\n  paymentMethod: string;\n  paymentAmount: string;\n  country: string;\n  subdivision?: string;\n  apiKey?: string;\n}): Promise<OnrampQuoteResponseData> {\n  const cpdApiKey = apiKey || getApiKey();\n\n  const response = await fetch(`${ONRAMP_API_BASE_URL}/buy/quote`, {\n    method: 'POST',\n    body: JSON.stringify({\n      purchase_currency: purchaseCurrency,\n      purchase_network: purchaseNetwork,\n      payment_currency: paymentCurrency,\n      payment_method: paymentMethod,\n      payment_amount: paymentAmount,\n      country,\n      subdivision,\n    }),\n    headers: {\n      Authorization: `Bearer ${cpdApiKey}`,\n    },\n  });\n\n  const responseJson = await response.json();\n\n  return convertSnakeToCamelCase<OnrampQuoteResponseData>(responseJson);\n}\n"],"names":["fetchOnrampQuote","purchaseCurrency","purchaseNetwork","paymentCurrency","paymentMethod","paymentAmount","country","subdivision","apiKey","cpdApiKey","getApiKey","response","fetch","ONRAMP_API_BASE_URL","method","body","JSON","stringify","purchase_currency","purchase_network","payment_currency","payment_method","payment_amount","headers","Authorization","responseJson","json","convertSnakeToCamelCase"],"mappings":";;;;;;;;;AAKA;;;;;;;;;;;;CAYA,GACO,eAAeA,gBAAgBA,CAAC,EACrCC,gBAAgB,EAChBC,eAAe,EACfC,eAAe,EACfC,aAAa,EACbC,aAAa,EACbC,OAAO,EACPC,WAAW,EACXC,MAAAA,EAUD,EAAoC;IACnC,MAAMC,SAAS,GAAGD,MAAM,6LAAIE,YAAAA,AAAS,EAAE;IAEvC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,CAAGC,0KAAAA,sBAAmB,CAAA,UAAA,CAAY,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,iBAAiB,EAAEjB,gBAAgB;YACnCkB,gBAAgB,EAAEjB,eAAe;YACjCkB,gBAAgB,EAAEjB,eAAe;YACjCkB,cAAc,EAAEjB,aAAa;YAC7BkB,cAAc,EAAEjB,aAAa;YAC7BC,OAAO;YACPC;QACF,CAAC,CAAC;QACFgB,OAAO,EAAE;YACPC,aAAa,EAAE,CAAA,OAAA,EAAUf,SAAS,CAAA,CAAA;QACpC;IACF,CAAC,CAAC;IAEF,MAAMgB,YAAY,GAAG,MAAMd,QAAQ,CAACe,IAAI,EAAE;IAE1C,8MAAOC,0BAAAA,AAAuB,EAA0BF,YAAY,CAAC;AACvE","ignoreList":[0]}},
    {"offset": {"line": 562, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 568, "column": 0}, "map": {"version":3,"file":"useOnrampExchangeRate.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/hooks/useOnrampExchangeRate.ts"],"sourcesContent":["import { useCallback, useMemo } from 'react';\nimport type { OnrampError } from '../types';\nimport { fetchOnrampQuote } from '../utils/fetchOnrampQuote';\n\nexport const useOnrampExchangeRate = ({\n  asset,\n  currency,\n  country,\n  subdivision,\n  setExchangeRate,\n  onError,\n}: {\n  asset: string;\n  currency: string;\n  country: string;\n  subdivision?: string;\n  setExchangeRate: (exchangeRate: number) => void;\n  onError?: (error: OnrampError) => void;\n}) => {\n  const fetchExchangeRate = useCallback(async () => {\n    try {\n      const quote = await fetchOnrampQuote({\n        purchaseCurrency: asset,\n        paymentCurrency: currency,\n        paymentAmount: '100',\n        paymentMethod: 'CARD',\n        country,\n        subdivision,\n      });\n\n      setExchangeRate(\n        Number(quote.purchaseAmount.value) /\n          Number(quote.paymentSubtotal.value),\n      );\n    } catch (err) {\n      if (err instanceof Error) {\n        console.error('Error fetching exchange rate:', err);\n        onError?.({\n          errorType: 'handled_error',\n          code: 'EXCHANGE_RATE_ERROR',\n          debugMessage: err.message,\n        });\n      } else {\n        console.error('Unknown error fetching exchange rate:', err);\n        onError?.({\n          errorType: 'unknown_error',\n          code: 'EXCHANGE_RATE_ERROR',\n          debugMessage: JSON.stringify(err),\n        });\n      }\n    }\n  }, [asset, country, subdivision, currency, onError, setExchangeRate]);\n\n  return useMemo(() => ({ fetchExchangeRate }), [fetchExchangeRate]);\n};\n"],"names":["useOnrampExchangeRate","asset","currency","country","subdivision","setExchangeRate","onError","fetchExchangeRate","useCallback","quote","fetchOnrampQuote","purchaseCurrency","paymentCurrency","paymentAmount","paymentMethod","Number","purchaseAmount","value","paymentSubtotal","err","Error","console","error","errorType","code","debugMessage","message","JSON","stringify","useMemo"],"mappings":";;;;;;;iCAIO,IAAMA,CAAAA,EACXC,KAAK,GAAA,EACLC,OAAAA,CAAQ,AAFwB,CAGhCC,EAHmCH,CAAC,IAG7B,IAAA,EACPI,WAAW,IAAA,EACXC,OAAAA,EACAC,CAAAA,KADe;IAShB,IAAK,EAAA,oBAAA,CAAA,GAAA,6JAAA,CAAA,cAAA;gEAAA;YACJ,IAAMC,iBAAiB,GAAGC,WAAW,CAAC,YAAY;gBAChD,EAAI,IAAA,QAAA,MAAA,CAAA,GAAA,uLAAA,CAAA,mBAAA,EAAA;oBACF,IAAMC,KAAK,GAAG,MAAMC,gBAAgB,CAAC;oBACnCC,gBAAgB,CAAA,CAAEV,KAAK;oBACvBW,eAAe,EAAEV,QAAQ;oBACzBW,aAAa,EAAE,KAAK;oBACpBC,aAAa,EAAE,MAAM;oBACrBX,OAAO;gBACPC,EAAAA;gBACF,CAAC,CAAC,cAAA,OAAA,MAAA,cAAA,CAAA,KAAA,IAAA,OAAA,MAAA,eAAA,CAAA,KAAA;YAEFC,EAAAA,OAAAA,KAAAA,GAAe,CACbU,MAAM,CAACN,KAAK,CAACO,cAAc,CAACC,KAAK,CAAC,GAChCF,MAAM,CAACN,KAAK,CAACS,eAAe,CAACD,KAAK,CACtC,CAAC;gBACD,IAAA,GAAOE,GAAG,EAAE,OAAA,OAAA;oBACZ,EAAIA,GAAG,GAAA,KAAA,CAAA,GAAYC,KAAK,EAAE,uBAAA;oBACxBC,OAAO,CAACC,EAAAA,GAAK,CAAC,+BAA+B,EAAEH,GAAG,CAAC;wBACnDb,KAAO,GAAG,GAAA;wBACRiB,MAAAA,GAAS,EAAE,eAAe;wBAC1BC,IAAI,EAAE,QAAA,IAAA,OAAA,EAAqB;sBAC3BC,YAAY,EAAEN,GAAG,CAACO;gBACpB,GAAC,CAAC,GAAA;oBACH,KAAM,GAAA,KAAA,CAAA,yCAAA;oBACLL,OAAO,CAACC,EAAAA,GAAK,CAAC,uCAAuC,EAAEH,GAAG,CAAC;wBAC3Db,KAAO,GAAG,GAAA;wBACRiB,MAAAA,GAAS,EAAE,eAAe;wBAC1BC,IAAI,EAAE,QAAA,KAAA,QAAqB,CAAA,CAAA;oBAC3BC,EAAAA,YAAY,EAAEE,IAAI,CAACC,SAAS,CAACT,GAAG;gBAClC,GAAC,CAAC;YACJ;QACF;+DAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;KAAA;IACF,CAAC,EAAE,CAAClB,GAAAA,CAAAA,GAAAA,6JAAAA,CAAAA,EAAK,EAAEE,MAAAA;yCAAAA,GAAO,CAAEC,CAAAA,SAAW,EAAEF,QAAQ,EAAEI,OAAO,EAAED,eAAe,CAAC,CAAC;gBAErE,KAAOwB,OAAO,CAAC,OAAO;YAAEtB,CAAAA,CAAAA;wCAAAA;QAAAA;KAAAA;AAAkB,GAAC,CAAC,EAAE,CAACA,iBAAiB,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 624, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 630, "column": 0}, "map": {"version":3,"file":"buildPaymentMethods.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/utils/buildPaymentMethods.ts"],"sourcesContent":["import type {\n  OnrampOptionsResponseData,\n  OnrampPaymentCurrency,\n  PaymentMethod,\n} from '../types';\n\nconst DEFAULT_MIN_AMOUNT = 2;\nconst DEFAULT_MAX_AMOUNT = 500;\n\n/**\n * Coinbase payment method description is built using the available payment methods and adding Cash and Crypto Balance to the end of the array.\n * i.e. If the API returns Card and ACH, the description will be \"Card, ACH, Cash, Crypto Balance\".\n */\nexport const buildCoinbasePaymentMethodDescription = (\n  paymentMethodLimits: Array<{ id: string }>,\n) => {\n  const availableMethods = [\n    // Check API-provided methods\n    paymentMethodLimits.some((limit) => limit.id === 'ACH_BANK_ACCOUNT') &&\n      'ACH',\n    paymentMethodLimits.some((limit) => limit.id === 'CARD') && 'debit',\n    // Always include these methods\n    'cash',\n    'crypto balance',\n  ].filter(Boolean); // Remove falsy values\n\n  return availableMethods.join(', ');\n};\n\nconst buildCoinbasePaymentMethod = ({\n  limits,\n}: OnrampPaymentCurrency): PaymentMethod => ({\n  id: '',\n  name: 'Coinbase',\n  description: buildCoinbasePaymentMethodDescription(limits),\n  icon: 'coinbaseLogo',\n  minAmount: Math.min(...limits.map((l) => Number(l.min))),\n  maxAmount: Math.max(...limits.map((l) => Number(l.max))),\n});\n\nconst buildUSPaymentMethods = (\n  paymentCurrency: OnrampPaymentCurrency,\n): PaymentMethod[] => {\n  const paymentMethodConfigs = [\n    {\n      id: 'APPLE_PAY',\n      name: 'Apple Pay',\n      icon: 'apple',\n    },\n    {\n      id: 'CARD',\n      name: 'Debit card',\n      icon: 'creditCard',\n    },\n  ];\n\n  return paymentMethodConfigs.map((config) => {\n    const limit = paymentCurrency.limits.find(\n      (limit) => limit.id === config.id,\n    );\n\n    return {\n      ...config,\n      description: 'Up to $500/week. No sign up required.',\n      minAmount: Number(limit?.min) || DEFAULT_MIN_AMOUNT,\n      maxAmount: Number(limit?.max) || DEFAULT_MAX_AMOUNT,\n    };\n  });\n};\n\nexport const buildPaymentMethods = (\n  paymentOptions: OnrampOptionsResponseData,\n  currency: string,\n  country: string,\n) => {\n  const paymentCurrency = paymentOptions.paymentCurrencies.find(\n    (paymentCurrency) => paymentCurrency.id === currency,\n  );\n\n  if (!paymentCurrency) {\n    return [];\n  }\n\n  const coinbasePaymentMethod = buildCoinbasePaymentMethod(paymentCurrency);\n\n  let usPaymentMethods: PaymentMethod[] = [];\n  if (country === 'US' && currency === 'USD') {\n    usPaymentMethods = buildUSPaymentMethods(paymentCurrency);\n  }\n\n  return [coinbasePaymentMethod, ...usPaymentMethods];\n};\n"],"names":["DEFAULT_MIN_AMOUNT","DEFAULT_MAX_AMOUNT","buildCoinbasePaymentMethodDescription","paymentMethodLimits","availableMethods","some","limit","id","filter","Boolean","join","buildCoinbasePaymentMethod","limits","name","description","icon","minAmount","Math","min","map","l","Number","maxAmount","max","buildUSPaymentMethods","paymentCurrency","paymentMethodConfigs","config","find","buildPaymentMethods","paymentOptions","currency","country","paymentCurrencies","coinbasePaymentMethod","usPaymentMethods"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 740, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 746, "column": 0}, "map": {"version":3,"file":"fetchOnrampOptions.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/utils/fetchOnrampOptions.ts"],"sourcesContent":["import { convertSnakeToCamelCase } from '../../internal/utils/convertSnakeToCamelCase';\nimport { getApiKey } from '../../internal/utils/getApiKey';\nimport { ONRAMP_API_BASE_URL } from '../constants';\nimport type { OnrampOptionsResponseData } from '../types';\n\n/**\n * Returns supported fiat currencies and available crypto assets that can be passed into the Buy Quote API.\n *\n * @param country ISO 3166-1 two-digit country code string representing the purchasing user’s country of residence, e.g., US. `required`\n * @param subdivision ISO 3166-2 two-digit country subdivision code representing the purchasing user’s subdivision of residence within their country, e.g. `NY`.\n */\nexport async function fetchOnrampOptions({\n  country,\n  subdivision,\n  apiKey,\n}: {\n  country: string;\n  subdivision?: string;\n  apiKey?: string;\n}): Promise<OnrampOptionsResponseData> {\n  const cpdApiKey = apiKey || getApiKey();\n\n  let queryParams = `?country=${country}`;\n\n  if (subdivision) {\n    queryParams = `${queryParams}&subdivision=${subdivision}`;\n  }\n\n  const response = await fetch(\n    `${ONRAMP_API_BASE_URL}/buy/options${queryParams}`,\n    {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${cpdApiKey}`,\n      },\n    },\n  );\n\n  const responseJson = await response.json();\n\n  return convertSnakeToCamelCase<OnrampOptionsResponseData>(responseJson);\n}\n"],"names":["fetchOnrampOptions","country","subdivision","apiKey","cpdApiKey","getApiKey","queryParams","response","fetch","ONRAMP_API_BASE_URL","method","headers","Authorization","responseJson","json","convertSnakeToCamelCase"],"mappings":";;;;;;;;;AAKA;;;;;CAKA,GACO,eAAeA,kBAAkBA,CAAC,EACvCC,OAAO,EACPC,WAAW,EACXC,MAAAA,EAKD,EAAsC;IACrC,MAAMC,SAAS,GAAGD,MAAM,KAAIE,oMAAAA,AAAS,EAAE;IAEvC,IAAIC,WAAW,GAAG,CAAYL,SAAAA,EAAAA,OAAO,CAAE,CAAA;IAEvC,IAAIC,WAAW,EAAE;QACfI,WAAW,GAAG,CAAA,EAAGA,WAAW,CAAA,aAAA,EAAgBJ,WAAW,CAAE,CAAA;IAC3D;IAEA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAC1B,2KAAGC,sBAAmB,CAAA,YAAA,EAAeH,WAAW,CAAA,CAAE,EAClD;QACEI,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;YACPC,aAAa,EAAE,CAAA,OAAA,EAAUR,SAAS,CAAA,CAAA;QACpC;IACF,CACF,CAAC;IAED,MAAMS,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;IAE1C,8MAAOC,0BAAAA,AAAuB,EAA4BF,YAAY,CAAC;AACzE","ignoreList":[0]}},
    {"offset": {"line": 777, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 783, "column": 0}, "map": {"version":3,"file":"usePaymentMethods.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/hooks/usePaymentMethods.ts"],"sourcesContent":["import { useCallback, useEffect } from 'react';\nimport type { OnrampError, PaymentMethod } from '../types';\nimport { buildPaymentMethods } from '../utils/buildPaymentMethods';\nimport { fetchOnrampOptions } from '../utils/fetchOnrampOptions';\n\nexport const usePaymentMethods = ({\n  country,\n  subdivision,\n  currency,\n  setPaymentMethods,\n  setIsPaymentMethodsLoading,\n  onError,\n}: {\n  country: string;\n  subdivision?: string;\n  currency: string;\n  setPaymentMethods: (paymentMethods: PaymentMethod[]) => void;\n  setIsPaymentMethodsLoading: (loading: boolean) => void;\n  onError?: (e: OnrampError | undefined) => void;\n}) => {\n  const handleFetchPaymentMethods = useCallback(async () => {\n    setIsPaymentMethodsLoading(true);\n\n    try {\n      const paymentOptions = await fetchOnrampOptions({\n        country,\n        subdivision,\n      });\n\n      const paymentMethods = buildPaymentMethods(\n        paymentOptions,\n        currency,\n        country,\n      );\n\n      if (paymentMethods.length === 0) {\n        console.error(\n          'No payment methods found for the selected country and currency. See docs for more information: https://docs.cdp.coinbase.com/onramp/docs/api-configurations',\n        );\n        onError?.({\n          errorType: 'handled_error',\n          code: 'NO_PAYMENT_METHODS',\n          debugMessage:\n            'No payment methods found for the selected country and currency. See docs for more information: https://docs.cdp.coinbase.com/onramp/docs/api-configurations',\n        });\n      }\n\n      setPaymentMethods(paymentMethods);\n    } catch (error) {\n      if (error instanceof Error) {\n        console.error('Error fetching payment options:', error);\n        onError?.({\n          errorType: 'handled_error',\n          code: 'PAYMENT_METHODS_ERROR',\n          debugMessage: error.message,\n        });\n      }\n    } finally {\n      setIsPaymentMethodsLoading(false);\n    }\n  }, [\n    country,\n    subdivision,\n    currency,\n    setPaymentMethods,\n    setIsPaymentMethodsLoading,\n    onError,\n  ]);\n\n  useEffect(() => {\n    handleFetchPaymentMethods();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n"],"names":["usePaymentMethods","country","subdivision","currency","setPaymentMethods","setIsPaymentMethodsLoading","onError","handleFetchPaymentMethods","useCallback","paymentOptions","fetchOnrampOptions","paymentMethods","buildPaymentMethods","length","console","error","errorType","code","debugMessage","Error","message","useEffect"],"mappings":";;;;;;;;;6BAKO,IAAMA,GAAAA,EACXC,OAAO,IAAA,CADqB,CAE5BC,EAF+BF,CAAC,KAEhCE,EACAC,CADW,OACH,SAAA,EACRC,iBAAiB,SAAA,EACjBC,OAAAA,EACAC,CAAAA,gBAD0B;IAS3B,IAAK,EAAA,4BAAA,CAAA,GAAA,6JAAA,CAAA,cAAA;oEAAA;YACJ,IAAMC,uBAAAA,EAAyB,GAAGC,WAAW,CAAC,YAAY;YACxDH,IAAAA,sBAA0B,CAAC,IAAI,CAAC;gBAEhC,EAAI,IAAA,iBAAA,MAAA,CAAA,GAAA,yLAAA,CAAA,qBAAA,EAAA;oBACF,IAAMI,cAAc,GAAG,MAAMC,kBAAkB,CAAC;oBAC9CT,OAAO;gBACPC,EAAAA;gBACF,CAAC,CAAC,IAAA,iBAAA,CAAA,GAAA,0LAAA,CAAA,sBAAA,EAAA,gBAAA,UAAA;gBAEF,IAAA,EAAMS,aAAAA,CAAc,GAAGC,EAAAA,KAAAA,GAAAA,SAAmB,CACxCH,cAAc,EACdN,QAAQ,EACRF,OACF,CAAC;oBAED,EAAIU,MAAAA,KAAAA,CAAAA,EAAc,CAACE,MAAM,KAAK,CAAC,EAAE;oBAC/BC,OAAO,CAACC,EAAAA,GAAK,CACX,6JACF,CAAC;wBACDT,KAAO,GAAG,GAAA;wBACRU,MAAAA,GAAS,EAAE,eAAe;wBAC1BC,IAAI,EAAE,QAAA,YAAoB;oBAC1BC,EAAAA,YAAY,EACV;gBACJ,GAAC,CAAC;gBACJ,kBAAA;cAEAd,OAAAA,OAAAA,GAAiB,CAACO,cAAc,CAAC;gBACjC,IAAA,GAAOI,KAAK,EAAE,OAAA,OAAA;oBACd,EAAIA,KAAK,CAAA,KAAA,CAAA,KAAYI,KAAK,EAAE,uBAAA;oBAC1BL,OAAO,CAACC,EAAAA,GAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;wBACvDT,KAAO,GAAG,GAAA;wBACRU,MAAAA,GAAS,EAAE,eAAe;wBAC1BC,IAAI,EAAE,QAAA,MAAA,OAAA,EAAuB;sBAC7BC,YAAY,EAAEH,KAAK,CAACK;gBACtB,GAAC,CAAC;YACJ,SAAA;gBACD,QAAS,mBAAA;cACRf,0BAA0B,CAAC,KAAK,CAAC;QACnC;mEAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;KAAA;IACF,CAAA,GAAA,6JAAA,CAAA,CAAC,EAAE,CACDJ,QAAAA;uCAAAA,CAAO,EACPC,WAAW,EACXC,QAAQ,EACRC,iBAAiB,EACjBC,0BAA0B,EAC1BC,OAAO,CACR,CAAC;YAEFe,OAAS,CAAC,MAAM;QACdd,yBAAyB,EAAE,4BAAA;QAC3B;sCAAA,EAAA;GACD,EAAE,EAAE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 841, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 847, "column": 0}, "map": {"version":3,"file":"FundCardProvider.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/components/FundCardProvider.tsx"],"sourcesContent":["'use client';\nimport type { LifecycleStatusUpdate } from '@/internal/types';\nimport {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { useAnalytics } from '../../core/analytics/hooks/useAnalytics';\nimport { FundEvent } from '../../core/analytics/types';\nimport { useValue } from '../../internal/hooks/useValue';\nimport { useEmitLifecycleStatus } from '../hooks/useEmitLifecycleStatus';\nimport { useOnrampExchangeRate } from '../hooks/useOnrampExchangeRate';\nimport { usePaymentMethods } from '../hooks/usePaymentMethods';\nimport type {\n  AmountInputType,\n  FundButtonStateReact,\n  FundCardProviderReact,\n  LifecycleStatus,\n  OnrampError,\n  PaymentMethod,\n  PresetAmountInputs,\n} from '../types';\n\ntype FundCardContextType = {\n  asset: string;\n  currency: string;\n  selectedPaymentMethod?: PaymentMethod;\n  setSelectedPaymentMethod: (paymentMethod: PaymentMethod) => void;\n  selectedInputType: AmountInputType;\n  setSelectedInputType: (inputType: AmountInputType) => void;\n  fundAmountFiat: string;\n  setFundAmountFiat: (amount: string) => void;\n  fundAmountCrypto: string;\n  setFundAmountCrypto: (amount: string) => void;\n  exchangeRate: number;\n  setExchangeRate: (exchangeRate: number) => void;\n  exchangeRateLoading: boolean;\n  setExchangeRateLoading: (loading: boolean) => void;\n  submitButtonState: FundButtonStateReact;\n  setSubmitButtonState: (state: FundButtonStateReact) => void;\n  paymentMethods: PaymentMethod[];\n  setPaymentMethods: (paymentMethods: PaymentMethod[]) => void;\n  isPaymentMethodsLoading: boolean;\n  setIsPaymentMethodsLoading: (loading: boolean) => void;\n  headerText?: string;\n  buttonText?: string;\n  country: string;\n  subdivision?: string;\n  inputType?: 'fiat' | 'crypto';\n  lifecycleStatus: LifecycleStatus;\n\n  presetAmountInputs?: PresetAmountInputs;\n  updateLifecycleStatus: (\n    newStatus: LifecycleStatusUpdate<LifecycleStatus>,\n  ) => void;\n  onError?: (error: OnrampError) => void;\n};\n\nconst FundContext = createContext<FundCardContextType | undefined>(undefined);\n\nexport function FundCardProvider({\n  children,\n  asset,\n  currency = 'USD',\n  headerText = `Buy ${asset.toUpperCase()}`,\n  buttonText,\n  country,\n  subdivision,\n  inputType,\n  onError,\n  onStatus,\n  onSuccess,\n  presetAmountInputs,\n}: FundCardProviderReact) {\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState<\n    PaymentMethod | undefined\n  >();\n  const [selectedInputType, setSelectedInputType] = useState<AmountInputType>(\n    inputType || 'fiat',\n  );\n  const [fundAmountFiat, setFundAmountFiat] = useState<string>('');\n  const [fundAmountCrypto, setFundAmountCrypto] = useState<string>('');\n  const [exchangeRate, setExchangeRate] = useState<number>(0);\n  const [exchangeRateLoading, setExchangeRateLoading] = useState<boolean>(true);\n\n  const [submitButtonState, setSubmitButtonState] =\n    useState<FundButtonStateReact>('default');\n\n  const [paymentMethods, setPaymentMethods] = useState<PaymentMethod[]>([]);\n  const [isPaymentMethodsLoading, setIsPaymentMethodsLoading] =\n    useState<boolean>(true);\n  const { lifecycleStatus, updateLifecycleStatus } = useEmitLifecycleStatus({\n    onError,\n    onSuccess,\n    onStatus,\n  });\n\n  const { fetchExchangeRate } = useOnrampExchangeRate({\n    asset,\n    currency,\n    country,\n    subdivision,\n    setExchangeRate,\n    onError,\n  });\n\n  const { sendAnalytics } = useAnalytics();\n\n  const handleAnalyticsAmountChanged = useCallback(\n    (amount: number, currency: string) => {\n      sendAnalytics(FundEvent.FundAmountChanged, {\n        amount,\n        currency,\n      });\n    },\n    [sendAnalytics],\n  );\n\n  const handleAnalyticsOptionSelected = useCallback(\n    (option: string) => {\n      sendAnalytics(FundEvent.FundOptionSelected, {\n        option,\n      });\n    },\n    [sendAnalytics],\n  );\n\n  const handleSetFundAmountFiat = useCallback(\n    (amount: string) => {\n      const newAmount = Number.parseFloat(amount);\n\n      if (!Number.isNaN(newAmount)) {\n        handleAnalyticsAmountChanged(newAmount, currency);\n      }\n\n      setFundAmountFiat(amount);\n    },\n    [currency, handleAnalyticsAmountChanged],\n  );\n\n  const handleSetSelectedPaymentMethod = useCallback(\n    (paymentMethod: PaymentMethod) => {\n      handleAnalyticsOptionSelected(paymentMethod.id);\n      setSelectedPaymentMethod(paymentMethod);\n    },\n    [handleAnalyticsOptionSelected],\n  );\n\n  const handleFetchExchangeRate = useCallback(async () => {\n    setExchangeRateLoading(true);\n    await fetchExchangeRate();\n    setExchangeRateLoading(false);\n  }, [fetchExchangeRate]);\n\n  useEffect(() => {\n    handleFetchExchangeRate();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Fetches and sets the payment methods to the context\n  usePaymentMethods({\n    country,\n    subdivision,\n    currency,\n    setPaymentMethods,\n    setIsPaymentMethodsLoading,\n    onError,\n  });\n\n  const value = useValue<FundCardContextType>({\n    asset,\n    currency,\n    selectedPaymentMethod,\n    setSelectedPaymentMethod: handleSetSelectedPaymentMethod,\n    fundAmountFiat,\n    setFundAmountFiat: handleSetFundAmountFiat,\n    fundAmountCrypto,\n    setFundAmountCrypto,\n    selectedInputType,\n    setSelectedInputType,\n    exchangeRate,\n    setExchangeRate,\n    exchangeRateLoading,\n    setExchangeRateLoading,\n    submitButtonState,\n    setSubmitButtonState,\n    paymentMethods,\n    setPaymentMethods,\n    isPaymentMethodsLoading,\n    setIsPaymentMethodsLoading,\n    headerText,\n    buttonText,\n    country,\n    subdivision,\n    lifecycleStatus,\n    updateLifecycleStatus,\n    presetAmountInputs,\n    onError,\n  });\n  return <FundContext.Provider value={value}>{children}</FundContext.Provider>;\n}\n\nexport function useFundContext() {\n  const context = useContext(FundContext);\n\n  if (!context) {\n    throw new Error('useFundContext must be used within a FundCardProvider');\n  }\n\n  return context;\n}\n"],"names":["FundContext","createContext","undefined","FundCardProvider","children","asset","currency","headerText","toUpperCase","buttonText","country","subdivision","inputType","onError","onStatus","onSuccess","presetAmountInputs","selectedPaymentMethod","setSelectedPaymentMethod","useState","selectedInputType","setSelectedInputType","fundAmountFiat","setFundAmountFiat","fundAmountCrypto","setFundAmountCrypto","exchangeRate","setExchangeRate","exchangeRateLoading","setExchangeRateLoading","submitButtonState","setSubmitButtonState","paymentMethods","setPaymentMethods","isPaymentMethodsLoading","setIsPaymentMethodsLoading","lifecycleStatus","updateLifecycleStatus","useEmitLifecycleStatus","fetchExchangeRate","useOnrampExchangeRate","sendAnalytics","useAnalytics","handleAnalyticsAmountChanged","useCallback","amount","FundEvent","FundAmountChanged","handleAnalyticsOptionSelected","option","FundOptionSelected","handleSetFundAmountFiat","newAmount","Number","parseFloat","isNaN","handleSetSelectedPaymentMethod","paymentMethod","id","handleFetchExchangeRate","useEffect","usePaymentMethods","value","useValue","_jsx","Provider","useFundContext","context","useContext","Error"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1042, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1048, "column": 0}, "map": {"version":3,"file":"subscribeToWindowMessage.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/utils/subscribeToWindowMessage.ts"],"sourcesContent":["import { DEFAULT_ONRAMP_URL } from '../constants';\nimport type { JsonObject } from '../types';\n\nexport enum MessageCodes {\n  AppParams = 'app_params',\n  PaymentLinkSuccess = 'payment_link_success',\n  PaymentLinkClosed = 'payment_link_closed',\n  GuestCheckoutRedirectSuccess = 'guest_checkout_redirect_success',\n  Success = 'success',\n  Event = 'event',\n}\n\ntype MessageData = JsonObject;\n\n/**\n * Subscribes to a message from the parent window.\n * @param messageCode A message code to subscribe to.\n * @param onMessage Callback for when the message is received.\n * @param allowedOrigin The origin to allow messages from.\n * @param onValidateOrigin Callback to validate the origin of the message.\n * @returns\n */\nexport function subscribeToWindowMessage({\n  onMessage,\n  allowedOrigin = DEFAULT_ONRAMP_URL,\n  onValidateOrigin = () => Promise.resolve(true),\n}: {\n  onMessage: (data?: MessageData) => void;\n  allowedOrigin: string;\n  onValidateOrigin?: (origin: string) => Promise<boolean>;\n}) {\n  const handleMessage = (event: MessageEvent<string>) => {\n    if (!isAllowedOrigin({ event, allowedOrigin })) {\n      return;\n    }\n\n    const { eventName, data } = JSON.parse(event.data);\n\n    if (eventName === 'event') {\n      (async () => {\n        if (await onValidateOrigin(event.origin)) {\n          onMessage(data);\n        }\n      })();\n    }\n  };\n\n  window.addEventListener('message', handleMessage);\n\n  // Unsubscribe\n  return () => {\n    window.removeEventListener('message', handleMessage);\n  };\n}\n\nfunction isAllowedOrigin({\n  event,\n  allowedOrigin,\n}: {\n  event: MessageEvent;\n  allowedOrigin: string;\n}) {\n  const isOriginAllowed = !allowedOrigin || event.origin === allowedOrigin;\n  return isOriginAllowed;\n}\n"],"names":["MessageCodes","subscribeToWindowMessage","onMessage","allowedOrigin","DEFAULT_ONRAMP_URL","onValidateOrigin","Promise","resolve","handleMessage","event","isAllowedOrigin","eventName","data","JSON","parse","origin","window","addEventListener","removeEventListener","isOriginAllowed"],"mappings":";;;;;;;IAGYA,EAAAA,UAAAA,CAAAA,CAAY,WAAA,GAAA,YAAZA,YAAY,EAAA;IAAZA,YAAY,CAAA,WAAA,CAAA,GAAA,MAAA,GAAA,GAAA;IAAZA,YAAY,CAAA,oBAAA,CAAA,EAAA,CAAA,sBAAA;IAAZA,YAAY,CAAA,mBAAA,CAAA,GAAA,QAAA,GAAA,UAAA;IAAZA,YAAY,CAAA,UAAA,GAAA,iBAAA,CAAA,GAAA,iCAAA;IAAZA,YAAY,CAAA,QAAA,CAAA,CAAA,CAAA,EAAA,SAAA;IAAZA,OAAAA,KAAY,CAAA,OAAA,CAAA,GAAA,OAAA;AAAA,EAAA,CAAA,MAAZA,YAAY;AAAA,CAAA,CAAA,EAAA;;;;;;;CAiBxB,GACA,SAAA,yBAAA,EACO,OAASC,EAAAA,EACdC,SAAS,OAAA,IAD6BD,CAAC,kKAC9B,CAAA,qBAAA,EACTE,aAAa,GAAGC,GAAAA,IAAAA,QAAAA,CAAkB,MAAA,CAAA,KAAA,EAClCC,CAAAA,gBAAgB,GAAGA,MAAMC,OAAO,CAACC,OAAO,CAAC,IAAI;IAK9C,CAAE,KAAA,gBAAA,CAAA;QACD,IAAMC,CAAAA,YAAa,GAAIC,CAAAA,IAA2B,IAAK;YACrD,EAAI,CAACC,eAAe,CAAC;YAAED,KAAK;QAAEN,EAAAA,EAAAA;YAAgB,EAAE;QAC9C,EAAA;QACF,MAAA,cAAA,KAAA,KAAA,CAAA,MAAA,IAAA,GAEA,IAAM,QAAA,YAAA,SAAA,EAAEQ,OAAAA,EAAS,UAAA,IAAA;QAAEC,EAAAA,EAAAA,cAAAA,SAAAA;YAAM,CAAA,CAAGC,IAAI,CAACC,KAAK,CAACL,KAAK,CAACG,IAAI,CAAC;gBAE9CD,IAAAA,KAAS,CAAA,IAAK,OAAO,EAAE,IAAA,MAAA,MAAA,GAAA;oBACxB,SAAY,CAAA;gBACX,IAAI,MAAMN,gBAAgB,CAACI,KAAK,CAACM,MAAM,CAAC,EAAE;gBACxCb,SAAS,CAACU,IAAI,CAAC;QACjB;IACF,KAAC,GAAG;IACN,OAAA,gBAAA,CAAA,WAAA;IAGFI,MAAM,CAACC,OAAAA,SAAgB,CAAC,SAAS,EAAET,aAAa,CAAC;;QAEjD,OAAA,mBAAA,CAAA,WAAA;IACA,OAAO,MAAM;AACXQ,IAAAA,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEV,aAAa,CAAC;GACrD,MAAA,gBAAA,EACH,KAAA,EAEA,OAASE,MAAAA,GACPD,KAAK,CADiBC,CAAC;IAEvBP,MAAAA,kBAAAA,CAAAA,iBAAAA,MAAAA,MAAAA,KAAAA;IAID,CAAE,MAAA;EACD,MAAMgB,eAAe,GAAG,CAAChB,aAAa,IAAIM,KAAK,CAACM,MAAM,KAAKZ,aAAa;;CAE1E,oDAAA","ignoreList":[0]}},
    {"offset": {"line": 1099, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1105, "column": 0}, "map": {"version":3,"file":"setupOnrampEventListeners.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/utils/setupOnrampEventListeners.ts"],"sourcesContent":["import { DEFAULT_ONRAMP_URL } from '../constants';\nimport type { EventMetadata, OnrampError, SuccessEventData } from '../types';\nimport { subscribeToWindowMessage } from './subscribeToWindowMessage';\n\ntype SetupOnrampEventListenersParams = {\n  host?: string;\n  onSuccess?: (data?: SuccessEventData) => void;\n  onExit?: (error?: OnrampError) => void;\n  onEvent?: (event: EventMetadata) => void;\n};\n\n/**\n * Subscribes to events from the Coinbase Onramp widget.\n * @param onEvent - Callback for when any event is received.\n * @param onExit - Callback for when an exit event is received.\n * @param onSuccess - Callback for when a success event is received.\n * @returns a function to unsubscribe from the event listener.\n */\nexport function setupOnrampEventListeners({\n  onEvent,\n  onExit,\n  onSuccess,\n  host = DEFAULT_ONRAMP_URL,\n}: SetupOnrampEventListenersParams) {\n  const unsubscribe = subscribeToWindowMessage({\n    allowedOrigin: host,\n    onMessage: (data) => {\n      const metadata = data as EventMetadata;\n\n      if (metadata.eventName === 'success') {\n        onSuccess?.(metadata.data);\n      }\n      if (metadata.eventName === 'exit') {\n        onExit?.(metadata.error);\n      }\n      onEvent?.(metadata);\n    },\n  });\n\n  return unsubscribe;\n}\n"],"names":["setupOnrampEventListeners","onEvent","onExit","onSuccess","host","DEFAULT_ONRAMP_URL","unsubscribe","subscribeToWindowMessage","allowedOrigin","onMessage","data","metadata","eventName","error"],"mappings":";;;;;;;AAWA;;;;;;CAMA,GACO,SAASA,yBAAyBA,CAAC,EACxCC,OAAO,EACPC,MAAM,EACNC,SAAS,EACTC,IAAI,2KAAGC,qBAAAA,EACyB,EAAE;IAClC,MAAMC,WAAW,uMAAGC,2BAAAA,AAAwB,EAAC;QAC3CC,aAAa,EAAEJ,IAAI;QACnBK,SAAS,GAAGC,IAAI,IAAK;YACnB,MAAMC,QAAQ,GAAGD,IAAqB;YAEtC,IAAIC,QAAQ,CAACC,SAAS,KAAK,SAAS,EAAE;gBACpCT,SAAS,GAAGQ,QAAQ,CAACD,IAAI,CAAC;YAC5B;YACA,IAAIC,QAAQ,CAACC,SAAS,KAAK,MAAM,EAAE;gBACjCV,MAAM,GAAGS,QAAQ,CAACE,KAAK,CAAC;YAC1B;YACAZ,OAAO,GAAGU,QAAQ,CAAC;QACrB;IACF,CAAC,CAAC;IAEF,OAAOL,WAAW;AACpB","ignoreList":[0]}},
    {"offset": {"line": 1136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1142, "column": 0}, "map": {"version":3,"file":"useFundCardSetupOnrampEventListeners.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/hooks/useFundCardSetupOnrampEventListeners.ts"],"sourcesContent":["import { useCallback, useEffect } from 'react';\nimport { useFundContext } from '../components/FundCardProvider';\nimport { FUND_BUTTON_RESET_TIMEOUT } from '../constants';\nimport type { EventMetadata, SuccessEventData } from '../types';\nimport { setupOnrampEventListeners } from '../utils/setupOnrampEventListeners';\n\nexport const useFundCardSetupOnrampEventListeners = () => {\n  const { setSubmitButtonState, updateLifecycleStatus } = useFundContext();\n\n  const handleOnrampEvent = useCallback(\n    (data: EventMetadata) => {\n      if (data.eventName === 'transition_view') {\n        updateLifecycleStatus({\n          statusName: 'transactionPending',\n          statusData: undefined,\n        });\n      } else if (data.eventName === 'error') {\n        updateLifecycleStatus({\n          statusName: 'error',\n          statusData: data.error,\n        });\n\n        setSubmitButtonState('error');\n        setTimeout(() => {\n          setSubmitButtonState('default');\n        }, FUND_BUTTON_RESET_TIMEOUT);\n      }\n    },\n    [updateLifecycleStatus, setSubmitButtonState],\n  );\n\n  const handleOnrampSuccess = useCallback(\n    (data?: SuccessEventData) => {\n      updateLifecycleStatus({\n        statusName: 'transactionSuccess',\n        statusData: data,\n      });\n\n      setSubmitButtonState('success');\n\n      setTimeout(() => {\n        setSubmitButtonState('default');\n      }, FUND_BUTTON_RESET_TIMEOUT);\n    },\n    [updateLifecycleStatus, setSubmitButtonState],\n  );\n\n  const handleOnrampExit = useCallback(() => {\n    setSubmitButtonState('default');\n\n    updateLifecycleStatus({\n      statusName: 'exit',\n      statusData: undefined,\n    });\n  }, [updateLifecycleStatus, setSubmitButtonState]);\n\n  useEffect(() => {\n    const unsubscribe = setupOnrampEventListeners({\n      onEvent: handleOnrampEvent,\n      onExit: handleOnrampExit,\n      onSuccess: handleOnrampSuccess,\n    });\n\n    return () => {\n      unsubscribe();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n"],"names":["useFundCardSetupOnrampEventListeners","setSubmitButtonState","updateLifecycleStatus","useFundContext","handleOnrampEvent","useCallback","data","eventName","statusName","statusData","undefined","error","setTimeout","FUND_BUTTON_RESET_TIMEOUT","handleOnrampSuccess","handleOnrampExit","useEffect","unsubscribe","setupOnrampEventListeners","onEvent","onExit","onSuccess"],"mappings":";;;;;;;;;;;;IAMaA,IAAAA,EAAAA,kBAAAA,CAAAA,GAAAA,4LAAAA,CAAAA,iBAAAA,EAAoC,GAAGA,AAClD,IAAM,EADkD,iBAClD,gBAAA,oBAAA,EAAEC,oBAAoB,IAAA,gBAAA,qBAAA;IAAEC,EAAAA,IAAAA,oBAAAA,CAAAA,GAAAA,6JAAAA,CAAAA,cAAAA;+EAAAA,CAAAA;YAAuB,EAAGC,EAAAA,KAAAA,OAAc,EAAE,KAAA,mBAAA;gBAExE,EAAMC,iBAAiB,GAAGC,WAAW,CAClCC,IAAmB,IAAK;oBACnBA,IAAI,CAACC,OAAAA,EAAS,KAAK,iBAAiB,EAAE;oBACxCL,YAAAA,OAAqB,CAAC;gBACpBM,EAAAA,UAAU,EAAE,oBAAoB;YAChCC,IAAAA,GAAAA,IAAAA,GAAU,EAAEC,SAAAA,KAAAA,SAAAA;gBACd,CAAC,CAAC,oBAAA;oBACH,GAAM,IAAIJ,IAAI,CAACC,SAAS,KAAK,OAAO,EAAE;oBACrCL,YAAAA,KAAAA,EAAqB,CAAC,EAAA;gBACpBM,EAAAA,UAAU,EAAE,OAAO;kBACnBC,UAAU,EAAEH,IAAI,CAACK,EAAAA;gBACnB,CAAC,CAAC;2FAAA;wBAEFV,kBAAoB,CAAC,EAAA,KAAO,CAAC;oBAC7BW;0FAAAA,uKAAAA,CAAAA,OAAU,CAAC,MAAM,cAAA;gBACfX,oBAAoB,CAAC,SAAS,CAAC;;;SAChC,EAAEY;QAAAA,KAAyB,CAAC;KAAA;IAC/B,MAAA,sBAAA,CAAA,GAAA,6JAAA,CAAA,cAAA;iFAAA,CAAA;YACD,CACD,CAACX,oBAAAA,CAAqB,EAAED,oBAAoB,CAC9C,CAAC;gBAED,EAAMa,UAAAA,SAAmB,GAAGT,WAAW,CACpCC,IAAuB,IAAK;gBAC3BJ,YAAAA,OAAqB,CAAC;YACpBM,EAAAA,UAAU,EAAE,oBAAoB;YAChCC,EAAAA,UAAU,EAAEH,OAAAA;YACd,CAAC,CAAC;yFAAA;oBAEFL,kBAAoB,CAAC,EAAA,OAAS,CAAC;gBAE/BW;wFAAAA,uKAAAA,CAAAA,OAAU,CAAC,MAAM,cAAA;;;QACfX,oBAAoB,CAAC;QAAA,OAAS,CAAC;KAAA;OAChC,EAAEY,CAAAA,mBAAAA,CAAAA,GAAAA,CAAyB,CAAC,2JAA1BA,CAAAA,cAA0B;8EAAA;YAC9B,CACD,CAACX,mBAAAA,EAAqB,EAAED,oBAAoB,CAC9C,CAAC;YAED,IAAMc,gBAAgB,EAAA,CAAGV,WAAW,CAAC,MAAM;gBACzCJ,YAAAA,MAAoB,CAAC,SAAS,CAAC;gBAE/BC,YAAAA,OAAqB,CAAC;YACpBM,EAAAA,UAAU,EAAE,MAAM;QAClBC;6EAAAA;QAAAA,UAAU,EAAEC;QAAAA;KAAAA;IACd,CAAA,GAAA,6JAAA,CAAA,GAAC,CAAC,QAAA;0DAAA;YACH,CAAE,CAACR,IAAAA,cAAAA,CAAAA,GAAAA,gMAAAA,CAAAA,GAAqB,EAAED,uBAAAA,AAAoB,EAAC,CAAC;gBAEjDe,KAAS,CAAC,GAAA,GAAM;gBACd,IAAMC,IAAAA,OAAW,GAAGC,yBAAyB,CAAC;gBAC5CC,OAAO,EAAEf,EAAAA,eAAiB;YAC1BgB,EAAAA,MAAM,EAAEL,gBAAgB;YACxBM,EAAAA;kEAAAA,IAAS,EAAEP;oBACX;gBAEF,OAAO,MAAM;;QACXG,EAAAA,WAAW,EAAE,wCAAA;;yDACd,EAAA;AACD;;CAEJ,gEAAA","ignoreList":[0]}},
    {"offset": {"line": 1226, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1232, "column": 0}, "map": {"version":3,"file":"FundCardAmountInput.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/components/FundCardAmountInput.tsx"],"sourcesContent":["'use client';\nimport { AmountInput } from '@/internal/components/amount-input/AmountInput';\nimport { useThrottle } from '@/internal/hooks/useThrottle';\nimport { useCallback } from 'react';\nimport { useAnalytics } from '../../core/analytics/hooks/useAnalytics';\nimport { FundEvent } from '../../core/analytics/types';\nimport { useOnrampExchangeRate } from '../hooks/useOnrampExchangeRate';\nimport type { FundCardAmountInputPropsReact } from '../types';\nimport { useFundContext } from './FundCardProvider';\n\nconst THROTTLE_DELAY_MS = 5000;\n\nexport const FundCardAmountInput = ({\n  className,\n}: FundCardAmountInputPropsReact) => {\n  const {\n    fundAmountFiat,\n    fundAmountCrypto,\n    asset,\n    selectedInputType,\n    currency,\n    exchangeRate,\n    setFundAmountFiat,\n    setFundAmountCrypto,\n    country,\n    subdivision,\n    setExchangeRate,\n    onError,\n  } = useFundContext();\n\n  const { fetchExchangeRate } = useOnrampExchangeRate({\n    asset,\n    currency,\n    country,\n    subdivision,\n    setExchangeRate,\n    onError,\n  });\n\n  const throttledFetchExchangeRate = useThrottle(\n    fetchExchangeRate,\n    THROTTLE_DELAY_MS,\n  );\n\n  const { sendAnalytics } = useAnalytics();\n\n  /**\n   * Handle amount changes with throttled updates\n   *\n   * Both setFiatAmount and setCryptoAmount on the AmountInput component are called with the new amount so we only need to fetch exchange rate when either is called.\n   */\n  const handleFiatAmountChange = useCallback(\n    (amount: string) => {\n      setFundAmountFiat(amount);\n      throttledFetchExchangeRate();\n\n      sendAnalytics(FundEvent.FundAmountChanged, {\n        amount: Number(amount),\n        currency,\n      });\n    },\n    [currency, sendAnalytics, setFundAmountFiat, throttledFetchExchangeRate],\n  );\n\n  return (\n    <AmountInput\n      fiatAmount={fundAmountFiat}\n      cryptoAmount={fundAmountCrypto}\n      asset={asset}\n      selectedInputType={selectedInputType}\n      currency={currency}\n      className={className}\n      setFiatAmount={handleFiatAmountChange}\n      setCryptoAmount={setFundAmountCrypto}\n      exchangeRate={String(exchangeRate)}\n    />\n  );\n};\n\nexport default FundCardAmountInput;\n"],"names":["THROTTLE_DELAY_MS","FundCardAmountInput","className","fundAmountFiat","fundAmountCrypto","asset","selectedInputType","currency","exchangeRate","setFundAmountFiat","setFundAmountCrypto","country","subdivision","setExchangeRate","onError","useFundContext","fetchExchangeRate","useOnrampExchangeRate","throttledFetchExchangeRate","useThrottle","sendAnalytics","useAnalytics","handleFiatAmountChange","useCallback","amount","FundEvent","FundAmountChanged","Number","_jsx","AmountInput","fiatAmount","cryptoAmount","setFiatAmount","setCryptoAmount","String"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,MAAY,cAAA;AAUZ,MAAMA,iBAAiB,GAAG,EAAA,CAAA,CAAI,CAEvB,IAAMC,KAAAA,EACXC,CAAAA,WAD8B,GAAGD,CAAC;IAEJ,IAAK,EAAA,kBAAA,CAAA,GAAA,4LAAA,CAAA,iBAAA,KACnC,IAAM,aAAA,gBAAA,cAAA,EACJE,cAAc,KAAA,gBAAA,gBAAA,EACdC,QAAAA,QAAgB,QAAA,KAAA,EAChBC,KAAK,eAAA,gBAAA,iBAAA,EACLC,WAAAA,MAAiB,UAAA,QAAA,EACjBC,QAAQ,OAAA,gBAAA,YAAA,EACRC,YAAY,QAAA,gBAAA,iBAAA,EACZC,iBAAiB,KAAA,gBAAA,mBAAA,EACjBC,UAAAA,SAAmB,OAAA,OAAA,EACnBC,OAAO,OAAA,gBAAA,WAAA,EACPC,WAAW,OAAA,gBAAA,eAAA,EACXC,UAAAA,KAAe,WAAA,OAAA;IACfC,EAAAA,IAAAA,wBAAAA,CAAAA,GAAAA,4LAAAA,CAAAA,wBAAAA,EAAAA;QACEC,cAAc,EAAE;QAEpB,EAAM;QAAEC;QAAsBC,qBAAqB,CAAC;QAClDZ,GAAK;QACLE,MAAQ;IACRI,IACAC,GADO,QACI,SAAA,sBAAA,iBAAA;MACXC,IAAAA,WAAe,kBAAA,CAAA,GAAA,sLAAA,CAAA,cAAA,EAAA,mBAAA;IACfC,EAAAA,IAAAA,gBAAAA,CAAAA,GAAAA,gMAAAA,CAAAA,eAAAA,KACA,gBAAA,cAAA,aAAA;IAEF,MAAMI,0BAA0B,GAAGC,WAAW,CAC5CH,iBAAiB,EACjBhB,iBACF,CAAC;;;;MAID,MAAA,yBAAA,CAAA,GAAA,6JAAA,CAAA,cAAA;mEAAA,CAAA;YACF,kBAAA;YACA;YACA,cAAA,gLAAA,CAAA,YAAA,CAAA,iBAAA,EAAA;gBACA,QAAA,OAAA;gBACE,EAAMsB,sBAAsB,GAAGC,WAAW,CACvCC,MAAc,IAAK;YAClBf,iBAAiB,CAACe,MAAM,CAAC;QACzBN,EAAAA;kEAAAA;QAAAA;QAAAA,cAA0B;QAAA,CAAE;QAAA;KAAA;IAE5BE,EAAAA,KAAAA,QAAa,CAACK,EAAAA,GAAAA,CAAAA,GAAAA,sKAAAA,CAAAA,MAAAA,EAAAA,8MAAAA,CAAAA,CAAS,CAACC,YAAAA,EAAAA,MAAiB,EAAE;QACzCF,EAAAA,MAAM,EAAEG,EAAAA,IAAM,CAACH,MAAM,CAAC;QACtBjB,EAAAA,YAAAA;QACF,CAAC,CAAC,KAAA;QACH,CACD,CAACA,QAAQ,EAAEa,OAAAA,MAAa,EAAEX,iBAAiB,EAAES,0BAA0B,CACzE,CAAC;QAED,UAAA,QACEU,GAAA,CAACC,WAAW,EAAA;QACVC,UAAU,CAAA,CAAE3B,cAAe;QAC3B4B,YAAY,EAAE3B,CAAAA,eAAiB;QAC/BC,KAAK,EAAEA,KAAM,KAAA;QACbC,cAAAA,GAAiB,EAAEA,EAAAA,eAAkB;IACrCC,EAAAA,QAAQ,EAAEA,QAAS;AACnBL,IAAAA,SAAS,EAAEA,SAAU;;CAErB+B,IAAAA,eAAe,EAAEvB,mBAAoB,OAAA","ignoreList":[0]}},
    {"offset": {"line": 1299, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1305, "column": 0}, "map": {"version":3,"file":"FundCardAmountInputTypeSwitch.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/components/FundCardAmountInputTypeSwitch.tsx"],"sourcesContent":["'use client';\nimport { AmountInputTypeSwitch } from '@/internal/components/amount-input/AmountInputTypeSwitch';\nimport type { FundCardAmountInputTypeSwitchPropsReact } from '../types';\nimport { useFundContext } from './FundCardProvider';\n\nexport const FundCardAmountInputTypeSwitch = ({\n  className,\n}: FundCardAmountInputTypeSwitchPropsReact) => {\n  const {\n    selectedInputType,\n    setSelectedInputType,\n    asset,\n    fundAmountFiat,\n    fundAmountCrypto,\n    exchangeRate,\n    exchangeRateLoading,\n    currency,\n  } = useFundContext();\n\n  return (\n    <AmountInputTypeSwitch\n      selectedInputType={selectedInputType}\n      setSelectedInputType={setSelectedInputType}\n      asset={asset}\n      fiatAmount={fundAmountFiat}\n      cryptoAmount={fundAmountCrypto}\n      exchangeRate={exchangeRate}\n      exchangeRateLoading={exchangeRateLoading}\n      currency={currency}\n      className={className}\n    />\n  );\n};\n\nexport default FundCardAmountInputTypeSwitch;\n"],"names":["FundCardAmountInputTypeSwitch","className","selectedInputType","setSelectedInputType","asset","fundAmountFiat","fundAmountCrypto","exchangeRate","exchangeRateLoading","currency","useFundContext","_jsx","AmountInputTypeSwitch","fiatAmount","cryptoAmount"],"mappings":";;;;;;;;;;;AAAA,MAAA,MAAY,0BAAA,CAAA,EAKL,IAAMA,KAAAA,EACXC,CAAAA,qBADwC,GAAGD,CAAC;IAEJ,IAAK,EAAA,kBAAA,CAAA,GAAA,4LAAA,CAAA,iBAAA,KAC7C,IAAM,gBAAA,gBAAA,iBAAA,EACJE,iBAAiB,MAAA,gBAAA,oBAAA,EACjBC,QAAAA,YAAoB,IAAA,KAAA,EACpBC,KAAK,YAAA,gBAAA,cAAA,EACLC,cAAc,KAAA,gBAAA,gBAAA,EACdC,eAAAA,CAAgB,eAAA,YAAA,EAChBC,YAAY,UAAA,gBAAA,mBAAA,EACZC,WAAAA,QAAmB,QAAA,QAAA;IACnBC,EAAAA,KAAAA,WAAAA,GAAAA,CAAAA,GAAAA,sKAAAA,CAAAA,MAAAA,EAAAA,wNAAAA,CAAAA,wBAAAA,EAAAA;QACD,EAAGC,cAAc,EAAE,CAAA;QAEpB,kBACEC,GAAA,CAACC,qBAAqB,EAAA;QACpBV,OAAAA,UAAiB,EAAEA,iBAAkB;QACrCC,YAAAA,QAAoB,EAAEA,oBAAqB;QAC3CC,KAAK,EAAEA,KAAM,EAAA;QACbS,UAAU,EAAER,EAAAA,YAAe;QAC3BS,YAAY,EAAER,OAAAA,SAAiB;QAC/BC,UAAAA,EAAY,EAAEA,YAAa;QAC3BC,WAAAA,QAAmB,EAAEA,mBAAoB;IACzCC,EAAAA,QAAQ,EAAEA,QAAS;AACnBR,IAAAA,SAAS,EAAEA;;CAGjB,yDAAA","ignoreList":[0]}},
    {"offset": {"line": 1332, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1338, "column": 0}, "map": {"version":3,"file":"FundCardHeader.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/components/FundCardHeader.tsx"],"sourcesContent":["'use client';\nimport { cn, text } from '@/styles/theme';\nimport type { FundCardHeaderPropsReact } from '../types';\nimport { useFundContext } from './FundCardProvider';\n\nexport function FundCardHeader({ className }: FundCardHeaderPropsReact) {\n  const { headerText } = useFundContext();\n\n  return (\n    <div\n      className={cn(text.headline, className)}\n      data-testid=\"ockFundCardHeader\"\n    >\n      {headerText}\n    </div>\n  );\n}\n"],"names":["FundCardHeader","className","headerText","useFundContext","_jsx","cn","text","headline","children"],"mappings":";;;;;;;;;;AAAA,SAAA,GAAY,YAAA,EAKL,OAASA,EAAAA,EAAiBC,CAAAA,SAAHD,CAAC;IAAuC,CAAE,KAAA,kBAAA,CAAA,GAAA,4LAAA,CAAA,iBAAA,KACtE,IAAM,SAAA,gBAAA,UAAA;IAAEE,EAAAA,KAAAA,WAAAA,GAAAA,CAAAA,GAAAA,sKAAAA,CAAAA,MAAAA,EAAAA,OAAAA;QAAY,EAAGC,SAAAA,CAAAA,GAAAA,qKAAAA,CAAAA,KAAAA,EAAAA,qKAAAA,CAAAA,EAAc,KAAE,CAAA,QAAA,EAAA;QAEvC,eAAA,GACEC,GAAA,CAAA,KAAA,EAAA;QACEH,SAAS,CAAA,CAAEI,EAAE,CAACC,IAAI,CAACC,QAAQ,EAAEN,SAAS,CAAE;IACxC,EAAA,aAAA,EAAY,mBAAmB;AAAAO,IAAAA,QAAA,EAE9BN;;CAGP,0CAAA","ignoreList":[0]}},
    {"offset": {"line": 1358, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1364, "column": 0}, "map": {"version":3,"file":"FundCardPaymentMethodImage.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/components/FundCardPaymentMethodImage.tsx"],"sourcesContent":["import { useIcon } from '../../internal/hooks/useIcon';\nimport { cn } from '../../styles/theme';\nimport type { FundCardPaymentMethodImagePropsReact } from '../types';\n\nexport function FundCardPaymentMethodImage({\n  className,\n  paymentMethod,\n}: FundCardPaymentMethodImagePropsReact) {\n  const { icon } = paymentMethod;\n\n  const iconSvg = useIcon({ icon });\n\n  return (\n    <div\n      data-testid=\"ockFundCardPaymentMethodImage__iconContainer\"\n      className={cn(\n        'flex items-center justify-center overflow-hidden rounded-[50%]',\n        className,\n      )}\n    >\n      {iconSvg}\n    </div>\n  );\n}\n"],"names":["FundCardPaymentMethodImage","className","paymentMethod","icon","iconSvg","useIcon","_jsx","cn","children"],"mappings":";;;;;;;;;sCAIO,OAASA,EAAAA,EACdC,SAAS,IAAA,EACTC,CAAAA,MAFwCF,CAAC;IAGJ,CAAE,KAAA,OAAA,cAAA,IAAA;IACvC,MAAM,UAAA,CAAA,GAAA,kLAAA,CAAA,UAAA,EAAA;QAAEG;IAAK,CAAC,GAAGD,aAAa;IAE9B,MAAME,CAAAA,MAAO,GAAGC,EAAAA,GAAAA,CAAAA,GAAAA,sKAAAA,CAAAA,MAAAA,AAAO,EAAC,OAAA;QAAEF,eAAAA;QAAO,WAAA,CAAA,GAAA,qKAAA,CAAA,KAAA,EAAA,kEAAA;QAEjC,UAAA,QACEG,GAAA,CAAA,KAAA,EAAA;IACE,EAAA,aAAA,EAAY,8CAA8C;AAC1DL,IAAAA,SAAS,EAAEM,EAAE,CACX,gEAAgE,EAChEN,SACF,CAAE;;CAEM,GACL,CAAC,kDAAA","ignoreList":[0]}},
    {"offset": {"line": 1386, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1392, "column": 0}, "map": {"version":3,"file":"FundCardPaymentMethodSelectRow.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/components/FundCardPaymentMethodSelectRow.tsx"],"sourcesContent":["import { memo, useCallback } from 'react';\nimport { useAnalytics } from '../../core/analytics/hooks/useAnalytics';\nimport { FundEvent } from '../../core/analytics/types';\nimport {\n  background,\n  border,\n  cn,\n  color,\n  pressable,\n  text,\n} from '../../styles/theme';\nimport type { FundCardPaymentMethodSelectRowPropsReact } from '../types';\nimport { FundCardPaymentMethodImage } from './FundCardPaymentMethodImage';\n\nexport const FundCardPaymentMethodSelectRow = memo(\n  ({\n    paymentMethod,\n    onClick,\n    hideImage,\n    hideDescription,\n    disabled,\n    disabledReason,\n    testId,\n  }: FundCardPaymentMethodSelectRowPropsReact) => {\n    const { sendAnalytics } = useAnalytics();\n\n    const handleOnClick = useCallback(() => {\n      if (!disabled) {\n        onClick?.(paymentMethod);\n        sendAnalytics(FundEvent.FundOptionSelected, {\n          option: paymentMethod.id,\n        });\n      }\n    }, [disabled, onClick, paymentMethod, sendAnalytics]);\n\n    return (\n      <button\n        data-testid={testId}\n        type=\"button\"\n        className={cn(\n          pressable.default,\n          border.radius,\n          background.default,\n          'flex w-full items-center justify-between px-4 py-2',\n          {\n            [pressable.disabled]: disabled,\n          },\n        )}\n        onClick={handleOnClick}\n        disabled={disabled}\n        title={disabledReason}\n      >\n        <span className=\"flex items-center gap-3\">\n          {!hideImage && (\n            <FundCardPaymentMethodImage\n              paymentMethod={paymentMethod}\n              className={cn('h-4 w-4', {\n                [pressable.disabled]: disabled,\n              })}\n            />\n          )}\n          <span className=\"flex flex-col items-start\">\n            <span className={cn(text.headline)}>{paymentMethod.name}</span>\n            {!hideDescription && (\n              <span\n                className={cn(\n                  text.label2,\n                  color.foregroundMuted,\n                  'font-normal',\n                )}\n              >\n                {disabledReason || paymentMethod.description}\n              </span>\n            )}\n          </span>\n        </span>\n      </button>\n    );\n  },\n);\n\nFundCardPaymentMethodSelectRow.displayName = 'FundCardPaymentMethodSelectRow';\n"],"names":["FundCardPaymentMethodSelectRow","memo","paymentMethod","onClick","hideImage","hideDescription","disabled","disabledReason","testId","sendAnalytics","useAnalytics","handleOnClick","useCallback","FundEvent","FundOptionSelected","option","id","_jsx","type","className","cn","pressable","default","border","radius","background","title","children","_jsxs","FundCardPaymentMethodImage","text","headline","name","label2","color","foregroundMuted","description","displayName"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1462, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1468, "column": 0}, "map": {"version":3,"file":"FundCardPaymentMethodSelectorToggle.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/components/FundCardPaymentMethodSelectorToggle.tsx"],"sourcesContent":["import { type ForwardedRef, forwardRef } from 'react';\nimport { caretUpSvg } from '../../internal/svg/caretUpSvg';\nimport { border, cn, color, pressable, text } from '../../styles/theme';\nimport type { FundCardPaymentMethodSelectorTogglePropsReact } from '../types';\nimport { FundCardPaymentMethodImage } from './FundCardPaymentMethodImage';\n\nexport const FundCardPaymentMethodSelectorToggle = forwardRef(\n  (\n    {\n      onClick,\n      paymentMethod,\n      isOpen,\n      className,\n    }: FundCardPaymentMethodSelectorTogglePropsReact,\n    ref: ForwardedRef<HTMLButtonElement>,\n  ) => {\n    return (\n      <button\n        type=\"button\"\n        className={cn(\n          pressable.default,\n          border.radius,\n          border.lineDefault,\n          'flex h-12 w-full items-center gap-2 px-3 py-1',\n          className,\n        )}\n        onClick={onClick}\n        ref={ref}\n        data-testid=\"ockFundCardPaymentMethodSelectorToggle\"\n      >\n        <div className=\"w-4\">\n          <FundCardPaymentMethodImage\n            paymentMethod={paymentMethod}\n            className=\"h-4 w-4\"\n          />\n        </div>\n        <span\n          className={cn(text.headline, color.foreground, 'flex w-full')}\n          data-testid=\"ockFundCardPaymentMethodSelectorToggle__paymentMethodName\"\n        >\n          {paymentMethod.name}\n        </span>\n\n        <span\n          className={cn(\n            'rotate-90 transition-transform duration-200',\n            isOpen && 'rotate-180',\n          )}\n        >\n          {caretUpSvg}\n        </span>\n      </button>\n    );\n  },\n);\n\nFundCardPaymentMethodSelectorToggle.displayName =\n  'FundCardPaymentMethodSelectorToggle';\n"],"names":["FundCardPaymentMethodSelectorToggle","forwardRef","onClick","paymentMethod","isOpen","className","ref","_jsxs","type","cn","pressable","default","border","radius","lineDefault","children","_jsx","FundCardPaymentMethodImage","text","headline","color","foreground","name","caretUpSvg","displayName"],"mappings":";;;;;;;;;;;;;8OAMaA,IAAAA,GAAAA,EAGPE,OAAO,MAAA,EACPC,MAAAA,EACAC,KADa,CACP,CALoC,EAKpC,EACNC,CAAAA,CAAAA,UAN6CJ,UAAU,CAC3D,CACE;IAKgD,CAChDK,GAAoC,GAAA,EACjC,SAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,OAAA,EAAA,UAAA;QACH,MAAA,YACEC,IAAA,CAAA,QAAA,EAAA;QACEC,IAAI,EAAC,KAAA,CAAA,GAAA,qKAAA,CAAA,KAAA,wKAAQ,YAAA,CAAA,OAAA,EAAA,qKAAA,CAAA,SAAA,CAAA,MAAA,EAAA,qKAAA,CAAA,SAAA,CAAA,WAAA,EAAA,iDAAA;QACbH,SAAS,EAAEI,EAAE,CACXC,SAAS,CAACC,OAAO,EACjBC,MAAM,CAACC,MAAM,EACbD,MAAM,CAACE,WAAW,EAClB,+CAA+C,EAC/CT,SACF,CAAE;QACFH,KAAAA,EAAO,EAAEA,OAAQ;QACjBI,GAAG,EAAEA,GAAI,OAAA;QACT,UAAA;YAAA,EAAA,EAAY,OAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAA,OAAA,oBAAwC;gBAAAS,MAAA,KAAA,WAEpDC,GAAA,CAAA,KAAA,EAAA;gBAAKX,SAAS,CAAA,CAAC,KAAK,KAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAA,sMAAA,CAAA,6BAAA,EAAA;oBAAAU,MAAA,SAAA,MAClBC,GAAA,CAACC,0BAA0B,EAAA;oBACzBd,WAAAA,EAAa,EAAEA,aAAc;gBAC7BE,EAAAA,SAAS,EAAC;eACX;YAAA,WAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAA,QAAA;gBACG,WAAA,CAAA,GAAA,qKAAA,CAAA,KAAA,EAAA,qKAAA,CAAA,CACNW,MAAA,CAAA,MAAA,EAAA,EAAA,qKAAA,CAAA,QAAA,CAAA,UAAA,EAAA;gBACEX,SAAS,EAAEI,EAAE,CAACS,CAAAA,GAAI,CAACC,QAAQ,EAAEC,KAAK,CAACC,UAAU,EAAE,aAAa,CAAE;gBAC9D,UAAA,GAAA,EAAY,SAAA,IAAA,8CAA2D;cAAAN;YAAAA,MAAA,EAEtEZ,GAAAA,GAAAA,CAAAA,GAAAA,sKAAAA,CAAAA,MAAAA,EAAAA,IAAa,CAACmB,GAAAA;gBACV,WAAA,CAAA,GAAA,qKAAA,CAAA,KAAA,EAAA,CAEPN,GAAA,CAAA,MAAA,EAAA,kCAAA,UAAA;gBACEX,SAAS,CAAA,mLAAA,CAAA,CAAEI,EAAE,CACX,SAAA,uCAA6C,EAC7CL,MAAM,IAAI,YACZ,CAAE;YAAAW,EAAAA;SAAAA,OAAA,EAEDQ;IAAU,GACP,CAAC;AAAA,GACD,CAAC;AAEb,CACF,mCAAA,WAAA,GAAA","ignoreList":[0]}},
    {"offset": {"line": 1511, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1517, "column": 0}, "map": {"version":3,"file":"FundCardPaymentMethodDropdown.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/components/FundCardPaymentMethodDropdown.tsx"],"sourcesContent":["'use client';\nimport { isApplePaySupported } from '@/buy/utils/isApplePaySupported';\nimport { Skeleton } from '@/internal/components/Skeleton';\nimport { useOutsideClick } from '@/internal/hooks/useOutsideClick';\nimport { formatFiatAmount } from '@/internal/utils/formatFiatAmount';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useAnalytics } from '../../core/analytics/hooks/useAnalytics';\nimport { FundEvent } from '../../core/analytics/types';\nimport { background, border, cn } from '../../styles/theme';\nimport type {\n  FundCardPaymentMethodDropdownPropsReact,\n  PaymentMethod,\n} from '../types';\nimport { FundCardPaymentMethodSelectRow } from './FundCardPaymentMethodSelectRow';\nimport { FundCardPaymentMethodSelectorToggle } from './FundCardPaymentMethodSelectorToggle';\nimport { useFundContext } from './FundCardProvider';\n\nexport function FundCardPaymentMethodDropdown({\n  className,\n}: FundCardPaymentMethodDropdownPropsReact) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const {\n    selectedPaymentMethod,\n    setSelectedPaymentMethod,\n    paymentMethods,\n    fundAmountFiat,\n    isPaymentMethodsLoading,\n    currency,\n  } = useFundContext();\n\n  const { sendAnalytics } = useAnalytics();\n\n  const filteredPaymentMethods = useMemo(() => {\n    return paymentMethods.filter(\n      (method) => method.id !== 'APPLE_PAY' || isApplePaySupported(),\n    );\n  }, [paymentMethods]);\n\n  const getPaymentMethodDisabledReason = useCallback(\n    (method: PaymentMethod) => {\n      const amount = Number(fundAmountFiat);\n\n      if (method.minAmount && amount < method.minAmount) {\n        return `Minimum amount of ${formatFiatAmount({\n          amount: method.minAmount,\n          currency: currency,\n          minimumFractionDigits: 0,\n        })} required`;\n      }\n\n      if (method.maxAmount && amount > method.maxAmount) {\n        return `Maximum amount allowed is ${formatFiatAmount({\n          amount: method.maxAmount,\n          currency: currency,\n          minimumFractionDigits: 0,\n        })}`;\n      }\n\n      return undefined;\n    },\n    [fundAmountFiat, currency],\n  );\n\n  const isPaymentMethodDisabled = useCallback(\n    (method: PaymentMethod) => {\n      if (!fundAmountFiat) {\n        return false;\n      }\n\n      return Boolean(getPaymentMethodDisabledReason(method));\n    },\n    [fundAmountFiat, getPaymentMethodDisabledReason],\n  );\n\n  // If current selected method becomes disabled, switch to Coinbase\n  useEffect(() => {\n    if (\n      selectedPaymentMethod &&\n      isPaymentMethodDisabled(selectedPaymentMethod)\n    ) {\n      const coinbaseMethod = paymentMethods.find((m) => m.id === '');\n      if (coinbaseMethod) {\n        setSelectedPaymentMethod(coinbaseMethod);\n      }\n    }\n  }, [\n    selectedPaymentMethod,\n    paymentMethods,\n    setSelectedPaymentMethod,\n    isPaymentMethodDisabled,\n  ]);\n\n  const handlePaymentMethodSelect = useCallback(\n    (paymentMethod: PaymentMethod) => {\n      if (!isPaymentMethodDisabled(paymentMethod)) {\n        sendAnalytics(FundEvent.FundOptionSelected, {\n          option: paymentMethod.id,\n        });\n        setSelectedPaymentMethod(paymentMethod);\n        setIsOpen(false);\n      }\n    },\n    [setSelectedPaymentMethod, isPaymentMethodDisabled, sendAnalytics],\n  );\n\n  const handleToggle = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen]);\n\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const dropdownContainerRef = useRef<HTMLDivElement>(null);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n\n  useOutsideClick(dropdownContainerRef, () => {\n    if (isOpen) {\n      setIsOpen(false);\n    }\n  });\n\n  const handleEscKeyPress = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (event.key === 'Escape') {\n        setIsOpen(false);\n      }\n    },\n    [],\n  );\n\n  const paymentMethod = selectedPaymentMethod || filteredPaymentMethods[0];\n\n  return (\n    <div\n      className={cn('relative py-4', className)}\n      ref={dropdownContainerRef}\n      data-testid=\"ockFundCardPaymentMethodDropdownContainer\"\n      onKeyUp={handleEscKeyPress}\n    >\n      {isPaymentMethodsLoading || !paymentMethod ? (\n        <Skeleton className=\"h-12 w-full\" />\n      ) : (\n        <FundCardPaymentMethodSelectorToggle\n          ref={buttonRef}\n          onClick={handleToggle}\n          isOpen={isOpen}\n          paymentMethod={paymentMethod}\n        />\n      )}\n      {isOpen && (\n        <div\n          ref={dropdownRef}\n          data-testid=\"ockFundCardPaymentMethodDropdown\"\n          className={cn(\n            border.radius,\n            border.lineDefault,\n            'ock-scrollbar absolute z-10 mt-2 flex w-full flex-col overflow-y-hidden',\n          )}\n        >\n          <div className={cn(background.default, 'overflow-y-auto p-2')}>\n            {filteredPaymentMethods.map((paymentMethod) => {\n              const isDisabled = isPaymentMethodDisabled(paymentMethod);\n              return (\n                <FundCardPaymentMethodSelectRow\n                  key={paymentMethod.name}\n                  testId={`ockFundCardPaymentMethodSelectRow__${paymentMethod.id}`}\n                  paymentMethod={paymentMethod}\n                  onClick={handlePaymentMethodSelect}\n                  disabled={isDisabled}\n                  disabledReason={getPaymentMethodDisabledReason(paymentMethod)}\n                />\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":["FundCardPaymentMethodDropdown","className","isOpen","setIsOpen","useState","selectedPaymentMethod","setSelectedPaymentMethod","paymentMethods","fundAmountFiat","isPaymentMethodsLoading","currency","useFundContext","sendAnalytics","useAnalytics","filteredPaymentMethods","useMemo","filter","method","id","isApplePaySupported","getPaymentMethodDisabledReason","useCallback","amount","Number","minAmount","formatFiatAmount","minimumFractionDigits","maxAmount","undefined","isPaymentMethodDisabled","Boolean","useEffect","coinbaseMethod","find","m","handlePaymentMethodSelect","paymentMethod","FundEvent","FundOptionSelected","option","handleToggle","dropdownRef","useRef","dropdownContainerRef","buttonRef","useOutsideClick","handleEscKeyPress","event","key","_jsxs","cn","ref","onKeyUp","children","_jsx","Skeleton","FundCardPaymentMethodSelectorToggle","onClick","border","radius","lineDefault","background","default","map","isDisabled","FundCardPaymentMethodSelectRow","testId","disabled","disabledReason","name"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1729, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1735, "column": 0}, "map": {"version":3,"file":"FundCardPresetAmountInputItem.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/components/FundCardPresetAmountInputItem.tsx"],"sourcesContent":["import { formatFiatAmount } from '@/internal/utils/formatFiatAmount';\nimport { border, cn, color, text } from '@/styles/theme';\nimport { useCallback, useMemo } from 'react';\nimport { useAnalytics } from '../../core/analytics/hooks/useAnalytics';\nimport { FundEvent } from '../../core/analytics/types';\nimport type { PresetAmountInputItemPropsReact } from '../types';\n\nexport function FundCardPresetAmountInputItem({\n  presetAmountInput,\n  currency,\n  onClick,\n}: PresetAmountInputItemPropsReact) {\n  const { sendAnalytics } = useAnalytics();\n\n  const presetAmountInputText = useMemo(() => {\n    return formatFiatAmount({\n      amount: presetAmountInput,\n      currency,\n      minimumFractionDigits: 0,\n    });\n  }, [presetAmountInput, currency]);\n\n  const handleClick = useCallback(() => {\n    sendAnalytics(FundEvent.FundAmountChanged, {\n      amount: Number(presetAmountInput),\n      currency,\n    });\n    onClick(presetAmountInput);\n  }, [presetAmountInput, currency, onClick, sendAnalytics]);\n\n  const handleKeyPress = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === 'Enter' || event.key === ' ') {\n        event.preventDefault();\n        sendAnalytics(FundEvent.FundAmountChanged, {\n          amount: Number(presetAmountInput),\n          currency,\n        });\n        onClick(presetAmountInput);\n      }\n    },\n    [presetAmountInput, currency, onClick, sendAnalytics],\n  );\n\n  if (!presetAmountInput) {\n    return null;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      data-testid=\"ockPresetAmountInput\"\n      className={cn(\n        text.body,\n        color.foreground,\n        border.radius,\n        border.lineDefault,\n        'flex-1',\n        'p-1',\n        'overflow-hidden',\n        'whitespace-nowrap',\n        'text-ellipsis',\n        'hover:bg-[var(--ock-bg-default-hover)]',\n        'focus:outline-none focus:ring-2',\n      )}\n      title={presetAmountInputText}\n      onClick={handleClick}\n      onKeyDown={handleKeyPress}\n    >\n      {presetAmountInputText}\n    </button>\n  );\n}\n"],"names":["FundCardPresetAmountInputItem","presetAmountInput","currency","onClick","sendAnalytics","useAnalytics","presetAmountInputText","useMemo","formatFiatAmount","amount","minimumFractionDigits","handleClick","useCallback","FundEvent","FundAmountChanged","Number","handleKeyPress","event","key","preventDefault","_jsx","type","className","cn","text","body","color","foreground","border","radius","lineDefault","title","onKeyDown","children"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1810, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1816, "column": 0}, "map": {"version":3,"file":"FundCardPresetAmountInputList.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/components/FundCardPresetAmountInputList.tsx"],"sourcesContent":["'use client';\nimport { useAmountInput } from '@/internal/hooks/useAmountInput';\nimport { FundCardPresetAmountInputItem } from './FundCardPresetAmountInputItem';\nimport { useFundContext } from './FundCardProvider';\n\nexport function FundCardPresetAmountInputList() {\n  const {\n    presetAmountInputs,\n    currency,\n    selectedInputType,\n    exchangeRate,\n    setFundAmountFiat,\n    setFundAmountCrypto,\n  } = useFundContext();\n\n  const { handleFiatChange } = useAmountInput({\n    setFiatAmount: setFundAmountFiat,\n    setCryptoAmount: setFundAmountCrypto,\n    selectedInputType,\n    exchangeRate: String(exchangeRate),\n  });\n\n  if (!presetAmountInputs) {\n    return null;\n  }\n\n  return (\n    <div\n      data-testid=\"ockPresetAmountInputList\"\n      className=\"flex w-full flex-wrap items-center justify-between gap-2 pt-8\"\n    >\n      {presetAmountInputs.map((amount, index) => (\n        <FundCardPresetAmountInputItem\n          key={index}\n          presetAmountInput={amount}\n          onClick={handleFiatChange}\n          currency={currency}\n        />\n      ))}\n    </div>\n  );\n}\n"],"names":["FundCardPresetAmountInputList","presetAmountInputs","currency","selectedInputType","exchangeRate","setFundAmountFiat","setFundAmountCrypto","useFundContext","handleFiatChange","useAmountInput","setFiatAmount","setCryptoAmount","String","_jsx","className","children","map","amount","index","FundCardPresetAmountInputItem","presetAmountInput","onClick"],"mappings":";;;;;;;;;;;;AAAA,SAAA,GAAY;IAKL,MAAA,CAASA,iBAAAA,CAAAA,GAAAA,4LAAAA,CAAAA,YAA6BA,KAAAA,CAAG,IAC9C,IAAM,iBAAA,gBAAA,kBAAA,EACJC,WAAAA,OAAkB,SAAA,QAAA,EAClBC,QAAQ,YAAA,gBAAA,iBAAA,EACRC,eAAAA,EAAiB,cAAA,YAAA,EACjBC,YAAY,QAAA,gBAAA,iBAAA,EACZC,iBAAiB,KAAA,gBAAA,mBAAA;IACjBC,EAAAA,IAAAA,kBAAAA,CAAAA,GAAAA,yLAAAA,CAAAA,iBAAAA,EAAAA;QACEC,cAAc,CAAA,CAAE;QAEpB,EAAM,eAAA;QAAEC;QAAqBC,cAAc,CAAC,MAAA;IAC1CC,IACAC,SADa,EAAEN,IACA,EAAEC,EAAAA,SADe,OACfA,CAAmB,eAAA;MACpCH,EAAAA,CAAAA,cAAiB,MAAA;QACjBC,OAAAA,KAAY,EAAEQ,MAAM,CAACR,YAAY;IACnC,CAAC,CAAC;IAEF,IAAI,CAACH,EAAAA,WAAAA,GAAAA,CAAAA,GAAAA,sKAAAA,CAAAA,MAAAA,AAAkB,EAAA,CAAE,MAAA;QACvB,OAAO,IAAI,IAAA;QACb,WAAA;QAEA,UAAA,QACEY,GAAA,CAAA,KAAA,EAAA,GAAA,CAAA,CAAA,QAAA,QAAA,WAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAA,yMAAA,CAAA,gCAAA,EAAA;gBACE,WAAA,EAAY,MAAA,oBAA0B;gBACtCC,OAAS,EAAC,+DAA+D;gBAAAC,MAAA,EAExEd,EAAAA,gBAAkB,CAACe,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACpCL,GAAA,CAACM,6BAA6B,EAAA;YAE5BC,EAAAA,CAAAA,gBAAiB,EAAEH,MAAO;IAC1BI,IAAAA,OAAO,EAAEb,gBAAiB;AAC1BN,MAAAA,QAAQ,EAAEA;;CAEZ,GACC,CAAC,qDAAA","ignoreList":[0]}},
    {"offset": {"line": 1851, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1857, "column": 0}, "map": {"version":3,"file":"useFundCardFundingUrl.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/hooks/useFundCardFundingUrl.ts"],"sourcesContent":["import { useOnchainKit } from '@/useOnchainKit';\nimport { useMemo } from 'react';\nimport { useAccount } from 'wagmi';\nimport { useFundContext } from '../components/FundCardProvider';\nimport { getOnrampBuyUrl } from '../utils/getOnrampBuyUrl';\n\nexport const useFundCardFundingUrl = () => {\n  const { projectId, chain: defaultChain } = useOnchainKit();\n  const { address, chain: accountChain } = useAccount();\n  const {\n    selectedPaymentMethod,\n    selectedInputType,\n    fundAmountFiat,\n    fundAmountCrypto,\n    asset,\n    currency,\n  } = useFundContext();\n\n  const chain = accountChain || defaultChain;\n\n  return useMemo(() => {\n    if (projectId === null || address === undefined) {\n      return undefined;\n    }\n\n    const fundAmount =\n      selectedInputType === 'fiat' ? fundAmountFiat : fundAmountCrypto;\n\n    return getOnrampBuyUrl({\n      projectId,\n      assets: [asset],\n      presetFiatAmount:\n        selectedInputType === 'fiat' ? Number(fundAmount) : undefined,\n      presetCryptoAmount:\n        selectedInputType === 'crypto' ? Number(fundAmount) : undefined,\n      defaultPaymentMethod: selectedPaymentMethod?.id,\n      addresses: { [address]: [chain.name.toLowerCase()] },\n      fiatCurrency: currency,\n      originComponentName: 'FundCard',\n    });\n  }, [\n    asset,\n    fundAmountFiat,\n    fundAmountCrypto,\n    selectedPaymentMethod,\n    selectedInputType,\n    projectId,\n    address,\n    chain,\n    currency,\n  ]);\n};\n"],"names":["useFundCardFundingUrl","projectId","chain","defaultChain","useOnchainKit","address","accountChain","useAccount","selectedPaymentMethod","selectedInputType","fundAmountFiat","fundAmountCrypto","asset","currency","useFundContext","useMemo","undefined","fundAmount","getOnrampBuyUrl","assets","presetFiatAmount","Number","presetCryptoAmount","defaultPaymentMethod","id","addresses","name","toLowerCase","fiatCurrency","originComponentName"],"mappings":";;;;;;;;;;;;;;IAMaA,IAAAA,EAAAA,iBAAAA,CAAAA,GAAAA,mKAAAA,CAAAA,EAAqB,GAAGA,MAAM,KAAA,KACzC,IAAM,QAAA,eAAA,SAAA,EAAEC,SAAS,MAAA,eAAA,KAAA;IAAEC,EAAAA,IAAAA,CAAK,EAAEC,WAAAA,CAAAA,GAAAA,8JAAAA,CAAAA,aAAAA,KAAc,EAAGC,QAAAA,KAAa,EAAE,KAAA,OAAA,EAC1D,IAAM,WAAA,YAAA,KAAA;MAAEC,IAAAA,GAAO,eAAA,CAAA,GAAA,4LAAA,CAAA,iBAAA,KAAEH,KAAK,EAAEI,iBAAAA,gBAAAA,qBAAAA,EAAc,EAAGC,UAAU,EAAE,MAAA,gBAAA,iBAAA,EACrD,IAAM,aAAA,gBAAA,cAAA,EACJC,mBAAAA,EAAqB,cAAA,gBAAA,EACrBC,QAAAA,SAAiB,OAAA,KAAA,EACjBC,WAAAA,GAAc,aAAA,QAAA;MACdC,IAAAA,QAAAA,IAAgB,YAAA;MAChBC,uKAAK,UAAA;yCAAA;YACLC,IAAAA,cAAAA,QAAAA,YAAAA,WAAAA;gBACEC,OAAAA,OAAc,EAAE;YAEpB,IAAMZ,KAAK,GAAGI,YAAY,IAAIH,YAAY;YAE1C,KAAOY,CAAAA,MAAO,CAAC,MAAM,sBAAA,SAAA,iBAAA;YACnB,IAAId,GAAAA,CAAAA,GAAAA,sLAAAA,CAAAA,MAAS,KAAK,OAAA,AAAI,EAAA,GAAII,OAAO,KAAKW,SAAS,EAAE;gBAC/C,OAAOA,SAAS;gBAClB,QAAA;oBAAA;iBAAA;gBAEA,IAAMC,UAAU,GACdR,CAAAA,gBAAiB,KAAK,CAAA,KAAM,GAAGC,CAAAA,OAAAA,MAAc,GAAGC,KAAAA,WAAgB;gBAElE,KAAOO,eAAe,CAAC,qBAAA,WAAA,OAAA,cAAA;gBACrBjB,SAAS,aAAA,uBAAA;gBACTkB,MAAM,EAAE,CAACP,EAAAA,GAAK,CAAC;oBACfQ,CAAAA,QAAAA,EAAAA;wBAAAA,EAAgB,EACdX,EAAAA,IAAAA,CAAAA,UAAiB,CAAA;qBAAA,CAAK,MAAM,GAAGY,MAAM,CAACJ,UAAU,CAAC,GAAGD,SAAS;gBAC/DM,kBAAkB,EAChBb,iBAAiB,KAAK,QAAQ,GAAGY,MAAM,CAACJ,UAAU,CAAC,GAAGD,SAAS;gBACjEO,cAAAA,MAAoB,EAAEf,qBAAqB,EAAEgB,EAAE;gBAC/CC,SAAS,EAAE,UAAA;gBAAE,CAACpB,OAAO,GAAG,CAACH,KAAK,CAACwB,IAAI,CAACC,WAAW,EAAE;;;SAAG;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;KAAA;AACpDC,MAAAA,YAAY,EAAEf,QAAQ;;CAExB,KAAC,CAAC,2CAAA","ignoreList":[0]}},
    {"offset": {"line": 1912, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1918, "column": 0}, "map": {"version":3,"file":"FundCardSubmitButton.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/components/FundCardSubmitButton.tsx"],"sourcesContent":["'use client';\nimport { useCallback, useMemo } from 'react';\nimport { useFundCardFundingUrl } from '../hooks/useFundCardFundingUrl';\nimport { FundButton } from './FundButton';\nimport { useFundContext } from './FundCardProvider';\n\nexport function FundCardSubmitButton() {\n  const {\n    fundAmountFiat,\n    fundAmountCrypto,\n    submitButtonState,\n    setSubmitButtonState,\n    buttonText,\n    currency,\n    updateLifecycleStatus,\n  } = useFundContext();\n\n  const fundingUrl = useFundCardFundingUrl();\n\n  const handleOnClick = useCallback(\n    () => setSubmitButtonState('loading'),\n    [setSubmitButtonState],\n  );\n\n  const handleOnPopupClose = useCallback(() => {\n    updateLifecycleStatus({ statusName: 'exit', statusData: undefined });\n    setSubmitButtonState('default');\n  }, [updateLifecycleStatus, setSubmitButtonState]);\n\n  const isButtonDisabled = useMemo(\n    () =>\n      (!fundAmountFiat || Number(fundAmountCrypto) === 0) &&\n      (!fundAmountCrypto || Number(fundAmountFiat) === 0),\n    [fundAmountCrypto, fundAmountFiat],\n  );\n\n  return (\n    <FundButton\n      disabled={isButtonDisabled}\n      hideIcon={submitButtonState === 'default'}\n      text={buttonText}\n      className=\"w-full\"\n      fundingUrl={fundingUrl}\n      state={submitButtonState}\n      onClick={handleOnClick}\n      onPopupClose={handleOnPopupClose}\n      fiatCurrency={currency}\n    />\n  );\n}\n"],"names":["FundCardSubmitButton","fundAmountFiat","fundAmountCrypto","submitButtonState","setSubmitButtonState","buttonText","currency","updateLifecycleStatus","useFundContext","fundingUrl","useFundCardFundingUrl","handleOnClick","useCallback","handleOnPopupClose","statusName","statusData","undefined","isButtonDisabled","useMemo","Number","_jsx","FundButton","disabled","hideIcon","text","className","state","onClick","onPopupClose","fiatCurrency"],"mappings":";;;;;;;;;;;;;;AAAA,SAAA,GAAY;IAML,MAAA,CAASA,iBAAAA,CAAAA,GAAAA,4LAAAA,CAAAA,GAAoBA,GAAG,WAAA,KACrC,IAAM,aAAA,gBAAA,cAAA,EACJC,cAAc,KAAA,gBAAA,gBAAA,EACdC,gBAAgB,IAAA,gBAAA,iBAAA,EAChBC,iBAAiB,MAAA,gBAAA,oBAAA,EACjBC,aAAAA,OAAoB,SAAA,UAAA,EACpBC,UAAU,CAAA,gBAAA,QAAA,EACVC,QAAQ,gBAAA,gBAAA,qBAAA;IACRC,EAAAA,IAAAA,aAAAA,CAAAA,GAAAA,4LAAAA,CAAAA,wBAAAA;KACD,GAAGC,EAAAA,YAAc,EAAE,EAAA,CAAA,GAAA,6JAAA,CAAA,cAAA;2DAAA,IAAA,qBAAA;0DAAA;QAAA;KAAA;IAEpB,MAAMC,UAAU,GAAGC,QAAAA,CAAAA,GAAAA,6JAAAA,CAAAA,cAAAA;gEAAAA,CAAqB,EAAE;YAE1C,IAAMC,aAAa,GAAGC,EAAAA,SAAW,CAC/B,MAAMR,oBAAoB,CAAC,SAAS,CAAC,EACrC,CAACA,oBAAoB,CACvB,CAAC;gBAED,EAAMS,UAAAA,QAAkB,GAAGD,WAAW,CAAC,MAAM;gBAC3CL,YAAAA,OAAqB,CAAC;YAAEO,EAAAA,UAAU,EAAE,MAAM;YAAEC,EAAAA,UAAU,EAAEC,OAAAA;QAAU;+DAAC;QAAC;QAAA;KAAA;MACpEZ,IAAAA,gBAAoB,CAAC,EAAA,CAAA,GAAA,6JAAA,CAAA,UAAA,AAAS;0DAAC,IAAA,CAAA,CAAA,kBAAA,OAAA,sBAAA,CAAA,KAAA,CAAA,CAAA,oBAAA,OAAA,oBAAA,CAAA;yDAAA;QAAA;QAAA;KAAA;IACjC,CAAC,EAAE,CAACG,GAAAA,WAAAA,GAAAA,CAAAA,GAAAA,sKAAAA,CAAAA,MAAAA,EAAAA,sLAAAA,CAAAA,CAAqB,EAAEH,UAAAA,EAAAA,WAAoB,CAAC,CAAC;QAEjD,IAAMa,MAAAA,UAAgB,GAAGC,OAAO,CAC9B,MACE,CAAC,CAACjB,cAAc,IAAIkB,MAAM,CAACjB,gBAAgB,CAAC,KAAK,CAAC,MACjD,CAACA,gBAAgB,IAAIiB,MAAM,CAAClB,cAAc,CAAC,KAAK,CAAC,CAAC,EACrD,CAACC,gBAAgB,EAAED,cAAc,CACnC,CAAC;QAED,UAAA,QACEmB,GAAA,CAACC,UAAU,EAAA;QACTC,MAAAA,EAAQ,EAAEL,gBAAiB;QAC3BM,QAAQ,EAAEpB,CAAAA,gBAAiB,KAAK,SAAU;QAC1CqB,IAAI,EAAEnB,MAAAA,IAAW;QACjBoB,OAAAA,EAAS,EAAC,QAAQ;QAClBhB,SAAAA,CAAU,EAAEA,UAAW;QACvBiB,KAAK,EAAEvB,OAAAA,UAAkB;QACzBwB,OAAO,EAAEhB,KAAAA,QAAc;IACvBiB,EAAAA,YAAY,EAAEf,kBAAmB;AACjCgB,IAAAA,YAAY,EAAEvB;;CAGpB,gDAAA","ignoreList":[0]}},
    {"offset": {"line": 1972, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1978, "column": 0}, "map": {"version":3,"file":"FundCard.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/components/FundCard.tsx"],"sourcesContent":["'use client';\n\nimport type { ReactNode } from 'react';\nimport { useTheme } from '../../internal/hooks/useTheme';\nimport { background, border, cn, color, text } from '../../styles/theme';\nimport { useFundCardSetupOnrampEventListeners } from '../hooks/useFundCardSetupOnrampEventListeners';\nimport type { FundCardPropsReact } from '../types';\nimport FundCardAmountInput from './FundCardAmountInput';\nimport FundCardAmountInputTypeSwitch from './FundCardAmountInputTypeSwitch';\nimport { FundCardHeader } from './FundCardHeader';\nimport { FundCardPaymentMethodDropdown } from './FundCardPaymentMethodDropdown';\nimport { FundCardPresetAmountInputList } from './FundCardPresetAmountInputList';\nimport { FundCardProvider } from './FundCardProvider';\nimport { FundCardSubmitButton } from './FundCardSubmitButton';\n\nexport function FundCard({\n  assetSymbol,\n  buttonText = 'Buy',\n  headerText,\n  country = 'US',\n  subdivision,\n  currency = 'USD',\n  presetAmountInputs,\n  children = <DefaultFundCardContent />,\n  className,\n  onError,\n  onStatus,\n  onSuccess,\n}: FundCardPropsReact) {\n  const componentTheme = useTheme();\n\n  return (\n    <FundCardProvider\n      asset={assetSymbol}\n      headerText={headerText}\n      buttonText={buttonText}\n      country={country}\n      subdivision={subdivision}\n      currency={currency}\n      onError={onError}\n      onStatus={onStatus}\n      onSuccess={onSuccess}\n      presetAmountInputs={presetAmountInputs}\n    >\n      <div\n        className={cn(\n          componentTheme,\n          background.default,\n          color.foreground,\n          'flex w-full flex-col p-6',\n          text.headline,\n          border.radius,\n          border.lineDefault,\n          className,\n        )}\n      >\n        <FundCardContent>{children}</FundCardContent>\n      </div>\n    </FundCardProvider>\n  );\n}\n\nfunction FundCardContent({ children }: { children: ReactNode }) {\n  // Setup event listeners for the onramp\n  useFundCardSetupOnrampEventListeners();\n  return (\n    <form className=\"w-full\" data-testid=\"ockFundCardForm\">\n      {children}\n    </form>\n  );\n}\n\nfunction DefaultFundCardContent() {\n  return (\n    <>\n      <FundCardHeader />\n      <FundCardAmountInput />\n      <FundCardAmountInputTypeSwitch />\n      <FundCardPresetAmountInputList />\n      <FundCardPaymentMethodDropdown />\n      <FundCardSubmitButton />\n    </>\n  );\n}\n"],"names":["FundCard","assetSymbol","buttonText","headerText","country","subdivision","currency","presetAmountInputs","children","_jsx","DefaultFundCardContent","className","onError","onStatus","onSuccess","componentTheme","useTheme","FundCardProvider","asset","cn","background","default","color","foreground","text","headline","border","radius","lineDefault","FundCardContent","useFundCardSetupOnrampEventListeners","_jsxs","_Fragment","FundCardHeader","FundCardAmountInput","FundCardAmountInputTypeSwitch","FundCardPresetAmountInputList","FundCardPaymentMethodDropdown","FundCardSubmitButton"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2048, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2054, "column": 0}, "map": {"version":3,"file":"fetchOnrampConfig.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/utils/fetchOnrampConfig.ts"],"sourcesContent":["import { convertSnakeToCamelCase } from '@/internal/utils/convertSnakeToCamelCase';\nimport { getApiKey } from '@/internal/utils/getApiKey';\nimport { ONRAMP_API_BASE_URL } from '../constants';\nimport type { OnrampConfigResponseData } from '../types';\n\n/**\n * Returns list of countries supported by Coinbase Onramp, and the payment methods available in each country.\n */\nexport async function fetchOnrampConfig(\n  apiKey?: string,\n): Promise<OnrampConfigResponseData> {\n  const cpdApiKey = apiKey || getApiKey();\n  const response = await fetch(`${ONRAMP_API_BASE_URL}/buy/config`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${cpdApiKey}`,\n    },\n  });\n\n  const responseJson = await response.json();\n\n  return convertSnakeToCamelCase<OnrampConfigResponseData>(responseJson);\n}\n"],"names":["fetchOnrampConfig","apiKey","cpdApiKey","getApiKey","response","fetch","ONRAMP_API_BASE_URL","method","headers","Authorization","responseJson","json","convertSnakeToCamelCase"],"mappings":";;;;;;;;;AAKA;;CAEA,GACO,eAAeA,iBAAiBA,CACrCC,MAAe,EACoB;IACnC,MAAMC,SAAS,GAAGD,MAAM,6LAAIE,YAAAA,AAAS,EAAE;IACvC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,CAAGC,0KAAAA,sBAAmB,CAAA,WAAA,CAAa,EAAE;QAChEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;YACPC,aAAa,EAAE,CAAA,OAAA,EAAUP,SAAS,CAAA,CAAA;QACpC;IACF,CAAC,CAAC;IAEF,MAAMQ,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;IAE1C,8MAAOC,0BAAAA,AAAuB,EAA2BF,YAAY,CAAC;AACxE","ignoreList":[0]}},
    {"offset": {"line": 2078, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2084, "column": 0}, "map": {"version":3,"file":"fetchOnrampTransactionStatus.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/utils/fetchOnrampTransactionStatus.ts"],"sourcesContent":["import { convertSnakeToCamelCase } from '../../internal/utils/convertSnakeToCamelCase';\nimport { getApiKey } from '../../internal/utils/getApiKey';\nimport { ONRAMP_API_BASE_URL } from '../constants';\nimport type { OnrampTransaction } from '../types';\n\ntype OnrampTransactionStatusResponseData = {\n  /** List of `OnrampTransactions` in reverse chronological order. */\n  transactions: OnrampTransaction[];\n  /** A reference to the next page of transactions. */\n  nextPageKey: string;\n  /** The total number of transactions made by the user. */\n  totalCount: string;\n};\n\nexport async function fetchOnrampTransactionStatus({\n  partnerUserId,\n  nextPageKey,\n  pageSize,\n  apiKey,\n}: {\n  partnerUserId: string;\n  nextPageKey: string;\n  pageSize: string;\n  apiKey?: string;\n}): Promise<OnrampTransactionStatusResponseData> {\n  const cpdApiKey = apiKey || getApiKey();\n\n  const response = await fetch(\n    `${ONRAMP_API_BASE_URL}/buy/user/${partnerUserId}/transactions?page_key=${nextPageKey}&page_size=${pageSize}`,\n    {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${cpdApiKey}`,\n      },\n    },\n  );\n\n  const responseJson = await response.json();\n\n  return convertSnakeToCamelCase<OnrampTransactionStatusResponseData>(\n    responseJson,\n  );\n}\n"],"names":["fetchOnrampTransactionStatus","partnerUserId","nextPageKey","pageSize","apiKey","cpdApiKey","getApiKey","response","fetch","ONRAMP_API_BASE_URL","method","headers","Authorization","responseJson","json","convertSnakeToCamelCase"],"mappings":";;;;;;;;;8CAcO,aAAeA,EACpBC,WAAAA,EAAa,AACbC,QAAAA,EACAC,CADW,EAFqCH,CAAC,EAGjDG,EAAQ,AACRC,CAAAA;IAMD,CAAgD,KAAA,YAAA,UAAA,CAAA,GAAA,oLAAA,CAAA,YAAA;IAC/C,MAAMC,SAAS,EAAA,CAAGD,KAAAA,CAAM,IAAIE,CAAAA,GAAAA,uKAAAA,CAAAA,KAAS,EAAE,eAAA,CAAA,UAAA,EAAA,cAAA,uBAAA,EAAA,YAAA,WAAA,EAAA,UAAA,EAAA;QAEvC,IAAMC,IAAAA,IAAQ,GAAG,MAAMC,KAAK,CAC1B,CAAGC,EAAAA,mBAAmB,CAAaR,UAAAA,EAAAA,aAAa,CAA0BC,uBAAAA,EAAAA,WAAW,CAAcC,WAAAA,EAAAA,QAAQ,EAAE,EAC7G;QACEO,MAAM,EAAE,CAAA,IAAK;YACbC,KAAO,EAAE,QAAA,CAAA,OAAA,EAAA,WAAA;UACPC,aAAa,EAAE,UAAUP,SAAS,CAAA;IACpC;IACF,CACF,CAAC,IAAA,eAAA,MAAA,SAAA,IAAA;IAED,MAAMQ,CAAAA,CAAAA,GAAAA,kMAAAA,CAAAA,WAAY,GAAG,MAAMN,MAAAA,EAAAA,IAAQ,CAACO,IAAI,EAAE;EAE1C,OAAOC,uBAAuB,CAC5BF,YACF,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2106, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2112, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/node_modules/%40coinbase/onchainkit/src/fund/index.ts"],"sourcesContent":["// 🌲☀🌲\n// Components\nexport { FundButton } from './components/FundButton';\nexport { FundCard } from './components/FundCard';\nexport { FundCardAmountInput } from './components/FundCardAmountInput';\nexport { FundCardAmountInputTypeSwitch } from './components/FundCardAmountInputTypeSwitch';\nexport { FundCardHeader } from './components/FundCardHeader';\nexport { FundCardPaymentMethodDropdown } from './components/FundCardPaymentMethodDropdown';\nexport { FundCardPresetAmountInputList } from './components/FundCardPresetAmountInputList';\nexport { FundCardProvider } from './components/FundCardProvider';\nexport { FundCardSubmitButton } from './components/FundCardSubmitButton';\n\n// Utils\nexport { fetchOnrampConfig } from './utils/fetchOnrampConfig';\nexport { fetchOnrampOptions } from './utils/fetchOnrampOptions';\nexport { fetchOnrampQuote } from './utils/fetchOnrampQuote';\nexport { fetchOnrampTransactionStatus } from './utils/fetchOnrampTransactionStatus';\nexport { getCoinbaseSmartWalletFundUrl } from './utils/getCoinbaseSmartWalletFundUrl';\nexport { getOnrampBuyUrl } from './utils/getOnrampBuyUrl';\nexport { setupOnrampEventListeners } from './utils/setupOnrampEventListeners';\n\n// Hooks\nexport { useFundContext } from './components/FundCardProvider';\n\n// Types\nexport type {\n  EventMetadata,\n  FundCardPropsReact,\n  GetOnrampUrlWithProjectIdParams,\n  GetOnrampUrlWithSessionTokenParams,\n  OnrampAmount,\n  OnrampConfigCountry,\n  OnrampConfigResponseData,\n  OnrampError,\n  OnrampOptionsResponseData,\n  OnrampPaymentMethod,\n  OnrampPaymentMethodLimit,\n  OnrampPurchaseCurrency,\n  OnrampQuoteResponseData,\n  OnrampTransactionStatusName,\n  SuccessEventData,\n} from './types';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;CAAA,QAAA;CACA,aAAA;CAuBA,QAAA","ignoreList":[0]}},
    {"offset": {"line": 2133, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}