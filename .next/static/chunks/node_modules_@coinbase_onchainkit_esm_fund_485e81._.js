(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push(["static/chunks/node_modules_@coinbase_onchainkit_esm_fund_485e81._.js", {

"[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/getCoinbaseSmartWalletFundUrl.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "getCoinbaseSmartWalletFundUrl": (()=>getCoinbaseSmartWalletFundUrl)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$version$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/version.js [app-client] (ecmascript)");
;
const COINBASE_SMART_WALLET_FUND_URL = 'https://keys.coinbase.com/fund';
/**
 * Builds the URL for the Coinbase Smart Wallet funding page, including parameters to identify the dApp based on the
 * document title and current URL.
 * @returns the URL
 */ function getCoinbaseSmartWalletFundUrl() {
    const currentURL = window.location.href;
    const tabName = document.title;
    const fundUrl = `${COINBASE_SMART_WALLET_FUND_URL}?dappName=${encodeURIComponent(tabName)}&dappUrl=${encodeURIComponent(currentURL)}&version=${encodeURIComponent(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$version$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["version"])}&source=onchainkit`;
    return fundUrl;
}
;
 //# sourceMappingURL=getCoinbaseSmartWalletFundUrl.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/constants.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "DEFAULT_ONRAMP_URL": (()=>DEFAULT_ONRAMP_URL),
    "FUND_BUTTON_RESET_TIMEOUT": (()=>FUND_BUTTON_RESET_TIMEOUT),
    "ONRAMP_API_BASE_URL": (()=>ONRAMP_API_BASE_URL),
    "ONRAMP_BUY_URL": (()=>ONRAMP_BUY_URL),
    "ONRAMP_POPUP_HEIGHT": (()=>ONRAMP_POPUP_HEIGHT),
    "ONRAMP_POPUP_WIDTH": (()=>ONRAMP_POPUP_WIDTH)
});
const DEFAULT_ONRAMP_URL = 'https://pay.coinbase.com';
/** The base URL for the Coinbase Onramp widget */ const ONRAMP_BUY_URL = `${DEFAULT_ONRAMP_URL}/buy`;
/** The recommended height of a Coinbase Onramp popup window */ const ONRAMP_POPUP_HEIGHT = 720;
/** The recommended width of a Coinbase Onramp popup window */ const ONRAMP_POPUP_WIDTH = 460;
/** The base URL for the Coinbase Onramp API */ const ONRAMP_API_BASE_URL = 'https://api.developer.coinbase.com/onramp/v1';
/** Time in milliseconds to wait before resetting the button state to default after a transaction is completed */ const FUND_BUTTON_RESET_TIMEOUT = 3000;
;
 //# sourceMappingURL=constants.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/getOnrampBuyUrl.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "getOnrampBuyUrl": (()=>getOnrampBuyUrl)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$version$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/version.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/constants.js [app-client] (ecmascript)");
const _excluded = [
    "projectId",
    "originComponentName"
];
function _objectWithoutProperties(e, t) {
    if (null == e) return {};
    var o, r, i = _objectWithoutPropertiesLoose(e, t);
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(e);
        for(r = 0; r < n.length; r++)o = n[r], -1 === t.indexOf(o) && ({}).propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
    }
    return i;
}
function _objectWithoutPropertiesLoose(r, e) {
    if (null == r) return {};
    var t = {};
    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {
        if (-1 !== e.indexOf(n)) continue;
        t[n] = r[n];
    }
    return t;
}
;
;
/**
 * Builds a Coinbase Onramp buy URL using the provided parameters.
 * @param projectId a projectId generated in the Coinbase Developer Portal
 * @returns the URL
 */ function getOnrampBuyUrl(_ref) {
    let projectId = _ref.projectId, originComponentName = _ref.originComponentName, props = _objectWithoutProperties(_ref, _excluded);
    const url = new URL(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ONRAMP_BUY_URL"]);
    if (projectId !== undefined) {
        // Coinbase Onramp requires projectId to be passed as appId
        url.searchParams.append('appId', projectId);
    }
    for (const key of Object.keys(props)){
        const value = props[key];
        if (value !== undefined) {
            if ([
                'string',
                'number',
                'boolean'
            ].includes(typeof value)) {
                url.searchParams.append(key, value.toString());
            } else {
                url.searchParams.append(key, JSON.stringify(value));
            }
        }
    }
    if (originComponentName) {
        url.searchParams.append('sdkVersion', `onchainkit@${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$version$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["version"]}:${originComponentName}`);
    } else {
        url.searchParams.append('sdkVersion', `onchainkit@${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$version$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["version"]}`);
    }
    url.searchParams.sort();
    return url.toString();
}
;
 //# sourceMappingURL=getOnrampBuyUrl.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/hooks/useGetFundingUrl.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useGetFundingUrl": (()=>useGetFundingUrl)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$useOnchainKit$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/useOnchainKit.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$wallet$2f$hooks$2f$useIsWalletACoinbaseSmartWallet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/wallet/hooks/useIsWalletACoinbaseSmartWallet.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$getCoinbaseSmartWalletFundUrl$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/getCoinbaseSmartWalletFundUrl.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$getOnrampBuyUrl$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/getOnrampBuyUrl.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$wagmi$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/wagmi/dist/esm/hooks/useAccount.js [app-client] (ecmascript)");
;
;
;
;
;
;
/**
 * Gets the correct funding URL based on the connected wallet. If a Coinbase Smart Wallet is connected it will send the
 * user to keys.coinbase.com, otherwise it will send them to pay.coinbase.com.
 * @returns the funding URL and optional popup dimensions if the URL requires them
 */ function useGetFundingUrl({ fiatCurrency, originComponentName }) {
    const _useOnchainKit = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$useOnchainKit$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useOnchainKit"])(), projectId = _useOnchainKit.projectId, defaultChain = _useOnchainKit.chain;
    const _useAccount = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$wagmi$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAccount"])(), address = _useAccount.address, accountChain = _useAccount.chain;
    const isCoinbaseSmartWallet = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$wallet$2f$hooks$2f$useIsWalletACoinbaseSmartWallet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useIsWalletACoinbaseSmartWallet"])();
    // If the connected wallet's active chain is not included in the Wagmi config, accountChain will be undefined. If this
    // is the case, fall back to the default chain specified in the OnchainKit config.
    const chain = accountChain || defaultChain;
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "useGetFundingUrl.useMemo": ()=>{
            if (isCoinbaseSmartWallet) {
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$getCoinbaseSmartWalletFundUrl$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getCoinbaseSmartWalletFundUrl"])();
            }
            if (projectId === null || address === undefined) {
                return undefined;
            }
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$getOnrampBuyUrl$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOnrampBuyUrl"])({
                projectId,
                addresses: {
                    [address]: [
                        chain.name.toLowerCase()
                    ]
                },
                fiatCurrency,
                originComponentName
            });
        }
    }["useGetFundingUrl.useMemo"], [
        isCoinbaseSmartWallet,
        projectId,
        address,
        chain,
        fiatCurrency,
        originComponentName
    ]);
}
;
 //# sourceMappingURL=useGetFundingUrl.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/getFundingPopupSize.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "getFundingPopupSize": (()=>getFundingPopupSize)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$getWindowDimensions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/utils/getWindowDimensions.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/constants.js [app-client] (ecmascript)");
;
;
/**
 * Gets the appropriate popup dimensions for the given size and funding URL.
 */ function getFundingPopupSize(size, fundingUrl) {
    // The Coinbase Onramp widget is not very responsive, so we need to set a fixed popup size.
    if (fundingUrl?.includes(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ONRAMP_BUY_URL"])) {
        return {
            height: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ONRAMP_POPUP_HEIGHT"],
            width: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ONRAMP_POPUP_WIDTH"]
        };
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$getWindowDimensions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getWindowDimensions"])(size);
}
;
 //# sourceMappingURL=getFundingPopupSize.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundButton.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "FundButton": (()=>FundButton)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$hooks$2f$useTheme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/hooks/useTheme.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/styles/theme.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$buy$2f$hooks$2f$usePopupMonitor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/buy/hooks/usePopupMonitor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$svg$2f$errorSvg$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/svg/errorSvg.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$openPopup$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/utils/openPopup.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$hooks$2f$useAnalytics$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/core/analytics/hooks/useAnalytics.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/core/analytics/types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$components$2f$Spinner$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/components/Spinner.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$svg$2f$addSvg$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/svg/addSvg.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$svg$2f$successSvg$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/svg/successSvg.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$wallet$2f$components$2f$ConnectWallet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/wallet/components/ConnectWallet.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$hooks$2f$useGetFundingUrl$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/hooks/useGetFundingUrl.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$getFundingPopupSize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/getFundingPopupSize.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$wagmi$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/wagmi/dist/esm/hooks/useAccount.js [app-client] (ecmascript)");
'use client';
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
function FundButton({ className, disabled = false, fundingUrl, hideIcon = false, hideText = false, openIn = 'popup', popupSize = 'md', rel, target, text: buttonText = 'Fund', successText: buttonSuccessText = 'Success', errorText: buttonErrorText = 'Something went wrong', state: buttonState = 'default', fiatCurrency = 'USD', onPopupClose, onClick }) {
    const componentTheme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$hooks$2f$useTheme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTheme"])();
    // If the fundingUrl prop is undefined, fallback to our recommended funding URL based on the wallet type
    const fallbackFundingUrl = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$hooks$2f$useGetFundingUrl$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useGetFundingUrl"])({
        fiatCurrency,
        originComponentName: 'FundButton'
    });
    const _useAccount = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$wagmi$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAccount"])(), address = _useAccount.address;
    const fundingUrlToRender = fundingUrl ?? fallbackFundingUrl;
    const isDisabled = disabled || !fundingUrlToRender;
    const shouldShowConnectWallet = !address;
    const _usePopupMonitor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$buy$2f$hooks$2f$usePopupMonitor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["usePopupMonitor"])(onPopupClose), startPopupMonitor = _usePopupMonitor.startPopupMonitor;
    const _useAnalytics = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$hooks$2f$useAnalytics$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAnalytics"])(), sendAnalytics = _useAnalytics.sendAnalytics;
    const handleAnalyticsInitiated = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "FundButton.useCallback[handleAnalyticsInitiated]": ()=>{
            sendAnalytics(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FundEvent"].FundInitiated, {
                currency: fiatCurrency
            });
        }
    }["FundButton.useCallback[handleAnalyticsInitiated]"], [
        sendAnalytics,
        fiatCurrency
    ]);
    const handleAnalyticsFailure = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "FundButton.useCallback[handleAnalyticsFailure]": (error)=>{
            sendAnalytics(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FundEvent"].FundFailure, {
                error,
                metadata: {
                    currency: fiatCurrency
                }
            });
        }
    }["FundButton.useCallback[handleAnalyticsFailure]"], [
        sendAnalytics,
        fiatCurrency
    ]);
    const handleClick = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "FundButton.useCallback[handleClick]": (e)=>{
            e.preventDefault();
            if (fundingUrlToRender) {
                handleAnalyticsInitiated();
                onClick?.();
                const _getFundingPopupSize = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$getFundingPopupSize$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getFundingPopupSize"])(popupSize, fundingUrlToRender), height = _getFundingPopupSize.height, width = _getFundingPopupSize.width;
                const popupWindow = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$openPopup$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["openPopup"])({
                    url: fundingUrlToRender,
                    height,
                    width,
                    target
                });
                if (popupWindow) {
                    startPopupMonitor(popupWindow);
                } else {
                    handleAnalyticsFailure('Failed to open funding popup');
                }
            }
        }
    }["FundButton.useCallback[handleClick]"], [
        fundingUrlToRender,
        popupSize,
        target,
        onClick,
        startPopupMonitor,
        handleAnalyticsInitiated,
        handleAnalyticsFailure
    ]);
    const buttonColorClass = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "FundButton.useMemo[buttonColorClass]": ()=>{
            if (buttonState === 'error') {
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["background"].error;
            }
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pressable"].primary;
        }
    }["FundButton.useMemo[buttonColorClass]"], [
        buttonState
    ]);
    const classNames = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])(componentTheme, buttonColorClass, 'px-4 py-3 inline-flex items-center justify-center space-x-2', {
        [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pressable"].disabled]: isDisabled
    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["text"].headline, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["border"].radius, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["color"].inverse, className);
    const buttonIcon = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "FundButton.useMemo[buttonIcon]": ()=>{
            if (hideIcon) {
                return null;
            }
            switch(buttonState){
                case 'loading':
                    return '';
                case 'success':
                    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$svg$2f$successSvg$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SuccessSvg"], {
                        fill: "#F9FAFB"
                    });
                case 'error':
                    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$svg$2f$errorSvg$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ErrorSvg"], {
                        fill: "#F9FAFB"
                    });
                default:
                    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$svg$2f$addSvg$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AddSvg"], {});
            }
        }
    }["FundButton.useMemo[buttonIcon]"], [
        buttonState,
        hideIcon
    ]);
    const buttonTextContent = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "FundButton.useMemo[buttonTextContent]": ()=>{
            switch(buttonState){
                case 'loading':
                    return '';
                case 'success':
                    return buttonSuccessText;
                case 'error':
                    return buttonErrorText;
                default:
                    return buttonText;
            }
        }
    }["FundButton.useMemo[buttonTextContent]"], [
        buttonState,
        buttonSuccessText,
        buttonErrorText,
        buttonText
    ]);
    const buttonContent = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "FundButton.useMemo[buttonContent]": ()=>{
            if (buttonState === 'loading') {
                return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$components$2f$Spinner$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Spinner"], {});
            }
            return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Fragment"], {
                children: [
                    buttonIcon && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("span", {
                        "data-testid": "ockFundButtonIcon",
                        className: "flex h-6 items-center",
                        children: buttonIcon
                    }),
                    hideText || /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("span", {
                        "data-testid": "ockFundButtonTextContent",
                        children: buttonTextContent
                    })
                ]
            });
        }
    }["FundButton.useMemo[buttonContent]"], [
        buttonState,
        buttonIcon,
        buttonTextContent,
        hideText
    ]);
    if (openIn === 'tab') {
        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("a", {
            className: classNames,
            href: fundingUrlToRender,
            target: target ?? '_blank',
            rel: rel,
            children: buttonContent
        });
    }
    if (shouldShowConnectWallet) {
        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$wallet$2f$components$2f$ConnectWallet$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ConnectWallet"], {
            className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])('w-full', className)
        });
    }
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("button", {
        className: classNames,
        onClick: handleClick,
        type: "button",
        disabled: isDisabled,
        "data-testid": "ockFundButton",
        children: buttonContent
    });
}
;
 //# sourceMappingURL=FundButton.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/hooks/useEmitLifecycleStatus.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useEmitLifecycleStatus": (()=>useEmitLifecycleStatus)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$hooks$2f$useLifecycleStatus$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/hooks/useLifecycleStatus.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
function _slicedToArray(r, e) {
    return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
    if (r) {
        if ("string" == typeof r) return _arrayLikeToArray(r, a);
        var t = ({}).toString.call(r).slice(8, -1);
        return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
    }
}
function _arrayLikeToArray(r, a) {
    (null == a || a > r.length) && (a = r.length);
    for(var e = 0, n = Array(a); e < a; e++)n[e] = r[e];
    return n;
}
function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t) return;
                f = !1;
            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
        } catch (r) {
            o = !0, n = r;
        } finally{
            try {
                if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
            } finally{
                if (o) throw n;
            }
        }
        return a;
    }
}
function _arrayWithHoles(r) {
    if (Array.isArray(r)) return r;
}
;
;
const useEmitLifecycleStatus = ({ onError, onSuccess, onStatus })=>{
    const _useLifecycleStatus = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$hooks$2f$useLifecycleStatus$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useLifecycleStatus"])({
        statusName: 'init',
        statusData: null
    }), _useLifecycleStatus2 = _slicedToArray(_useLifecycleStatus, 2), lifecycleStatus = _useLifecycleStatus2[0], updateLifecycleStatus = _useLifecycleStatus2[1];
    // Lifecycle emitters
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "useEmitLifecycleStatus.useEffect": ()=>{
            // Error
            if (lifecycleStatus.statusName === 'error') {
                onError?.(lifecycleStatus.statusData);
            }
            // Success
            if (lifecycleStatus.statusName === 'transactionSuccess') {
                onSuccess?.(lifecycleStatus.statusData);
            }
            // Emit Status
            onStatus?.(lifecycleStatus);
        }
    }["useEmitLifecycleStatus.useEffect"], [
        onError,
        onStatus,
        onSuccess,
        lifecycleStatus,
        lifecycleStatus.statusData,
        lifecycleStatus.statusName
    ]);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "useEmitLifecycleStatus.useMemo": ()=>({
                lifecycleStatus,
                updateLifecycleStatus
            })
    }["useEmitLifecycleStatus.useMemo"], [
        lifecycleStatus,
        updateLifecycleStatus
    ]);
};
;
 //# sourceMappingURL=useEmitLifecycleStatus.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/fetchOnrampQuote.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "fetchOnrampQuote": (()=>fetchOnrampQuote)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$convertSnakeToCamelCase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/utils/convertSnakeToCamelCase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$getApiKey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/utils/getApiKey.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/constants.js [app-client] (ecmascript)");
;
;
;
/**
 * Provides a quote based on the asset the user would like to purchase, plus the network, the fiat payment, the payment currency, payment method, and country.
 *
 * @param purchaseCurrency ID of the crypto asset the user wants to purchase. Retrieved from the options API. `required`
 * @param purchaseNetwork Name of the network that the purchase currency should be purchased on.
 * Retrieved from the options API. If omitted, the default network for the crypto currency is used.
 * @param paymentCurrency Fiat currency of the payment amount, e.g., `USD`. `required`
 * @param paymentMethod ID of payment method used to complete the purchase. Retrieved from the options API. `required`
 * @param paymentAmount Fiat amount the user wants to spend to purchase the crypto currency, inclusive of fees with two decimals of precision, e.g., `100.00`. `required`
 * @param country ISO 3166-1 two-digit country code string representing the purchasing user’s country of residence, e.g., US. `required`
 * @param subdivision ISO 3166-2 two-digit country subdivision code representing the purchasing user’s subdivision of residence within their country, e.g. `NY`.
 * Required if the `country=“US”` because certain states (e.g., `NY`) have state specific asset restrictions.
 */ async function fetchOnrampQuote({ purchaseCurrency, purchaseNetwork, paymentCurrency, paymentMethod, paymentAmount, country, subdivision, apiKey }) {
    const cpdApiKey = apiKey || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$getApiKey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getApiKey"])();
    const response = await fetch(`${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ONRAMP_API_BASE_URL"]}/buy/quote`, {
        method: 'POST',
        body: JSON.stringify({
            purchase_currency: purchaseCurrency,
            purchase_network: purchaseNetwork,
            payment_currency: paymentCurrency,
            payment_method: paymentMethod,
            payment_amount: paymentAmount,
            country,
            subdivision
        }),
        headers: {
            Authorization: `Bearer ${cpdApiKey}`
        }
    });
    const responseJson = await response.json();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$convertSnakeToCamelCase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["convertSnakeToCamelCase"])(responseJson);
}
;
 //# sourceMappingURL=fetchOnrampQuote.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/hooks/useOnrampExchangeRate.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useOnrampExchangeRate": (()=>useOnrampExchangeRate)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$fetchOnrampQuote$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/fetchOnrampQuote.js [app-client] (ecmascript)");
;
;
const useOnrampExchangeRate = ({ asset, currency, country, subdivision, setExchangeRate, onError })=>{
    const fetchExchangeRate = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "useOnrampExchangeRate.useCallback[fetchExchangeRate]": async ()=>{
            try {
                const quote = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$fetchOnrampQuote$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchOnrampQuote"])({
                    purchaseCurrency: asset,
                    paymentCurrency: currency,
                    paymentAmount: '100',
                    paymentMethod: 'CARD',
                    country,
                    subdivision
                });
                setExchangeRate(Number(quote.purchaseAmount.value) / Number(quote.paymentSubtotal.value));
            } catch (err) {
                if (err instanceof Error) {
                    console.error('Error fetching exchange rate:', err);
                    onError?.({
                        errorType: 'handled_error',
                        code: 'EXCHANGE_RATE_ERROR',
                        debugMessage: err.message
                    });
                } else {
                    console.error('Unknown error fetching exchange rate:', err);
                    onError?.({
                        errorType: 'unknown_error',
                        code: 'EXCHANGE_RATE_ERROR',
                        debugMessage: JSON.stringify(err)
                    });
                }
            }
        }
    }["useOnrampExchangeRate.useCallback[fetchExchangeRate]"], [
        asset,
        country,
        subdivision,
        currency,
        onError,
        setExchangeRate
    ]);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "useOnrampExchangeRate.useMemo": ()=>({
                fetchExchangeRate
            })
    }["useOnrampExchangeRate.useMemo"], [
        fetchExchangeRate
    ]);
};
;
 //# sourceMappingURL=useOnrampExchangeRate.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/buildPaymentMethods.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "buildCoinbasePaymentMethodDescription": (()=>buildCoinbasePaymentMethodDescription),
    "buildPaymentMethods": (()=>buildPaymentMethods)
});
function ownKeys(e, r) {
    var t = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r) {
            return Object.getOwnPropertyDescriptor(e, r).enumerable;
        })), t.push.apply(t, o);
    }
    return t;
}
function _objectSpread(e) {
    for(var r = 1; r < arguments.length; r++){
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {
            _defineProperty(e, r, t[r]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {
            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
        });
    }
    return e;
}
function _defineProperty(e, r, t) {
    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
        value: t,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[r] = t, e;
}
function _toPropertyKey(t) {
    var i = _toPrimitive(t, "string");
    return "symbol" == typeof i ? i : i + "";
}
function _toPrimitive(t, r) {
    if ("object" != typeof t || !t) return t;
    var e = t[Symbol.toPrimitive];
    if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != typeof i) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return ("string" === r ? String : Number)(t);
}
const DEFAULT_MIN_AMOUNT = 2;
const DEFAULT_MAX_AMOUNT = 500;
/**
 * Coinbase payment method description is built using the available payment methods and adding Cash and Crypto Balance to the end of the array.
 * i.e. If the API returns Card and ACH, the description will be "Card, ACH, Cash, Crypto Balance".
 */ const buildCoinbasePaymentMethodDescription = (paymentMethodLimits)=>{
    const availableMethods = [
        // Check API-provided methods
        paymentMethodLimits.some((limit)=>limit.id === 'ACH_BANK_ACCOUNT') && 'ACH',
        paymentMethodLimits.some((limit)=>limit.id === 'CARD') && 'debit',
        // Always include these methods
        'cash',
        'crypto balance'
    ].filter(Boolean); // Remove falsy values
    return availableMethods.join(', ');
};
const buildCoinbasePaymentMethod = ({ limits })=>({
        id: '',
        name: 'Coinbase',
        description: buildCoinbasePaymentMethodDescription(limits),
        icon: 'coinbaseLogo',
        minAmount: Math.min(...limits.map((l)=>Number(l.min))),
        maxAmount: Math.max(...limits.map((l)=>Number(l.max)))
    });
const buildUSPaymentMethods = (paymentCurrency)=>{
    const paymentMethodConfigs = [
        {
            id: 'APPLE_PAY',
            name: 'Apple Pay',
            icon: 'apple'
        },
        {
            id: 'CARD',
            name: 'Debit card',
            icon: 'creditCard'
        }
    ];
    return paymentMethodConfigs.map((config)=>{
        const limit = paymentCurrency.limits.find((limit)=>limit.id === config.id);
        return _objectSpread(_objectSpread({}, config), {}, {
            description: 'Up to $500/week. No sign up required.',
            minAmount: Number(limit?.min) || DEFAULT_MIN_AMOUNT,
            maxAmount: Number(limit?.max) || DEFAULT_MAX_AMOUNT
        });
    });
};
const buildPaymentMethods = (paymentOptions, currency, country)=>{
    const paymentCurrency = paymentOptions.paymentCurrencies.find((paymentCurrency)=>paymentCurrency.id === currency);
    if (!paymentCurrency) {
        return [];
    }
    const coinbasePaymentMethod = buildCoinbasePaymentMethod(paymentCurrency);
    let usPaymentMethods = [];
    if (country === 'US' && currency === 'USD') {
        usPaymentMethods = buildUSPaymentMethods(paymentCurrency);
    }
    return [
        coinbasePaymentMethod,
        ...usPaymentMethods
    ];
};
;
 //# sourceMappingURL=buildPaymentMethods.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/fetchOnrampOptions.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "fetchOnrampOptions": (()=>fetchOnrampOptions)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$convertSnakeToCamelCase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/utils/convertSnakeToCamelCase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$getApiKey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/utils/getApiKey.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/constants.js [app-client] (ecmascript)");
;
;
;
/**
 * Returns supported fiat currencies and available crypto assets that can be passed into the Buy Quote API.
 *
 * @param country ISO 3166-1 two-digit country code string representing the purchasing user’s country of residence, e.g., US. `required`
 * @param subdivision ISO 3166-2 two-digit country subdivision code representing the purchasing user’s subdivision of residence within their country, e.g. `NY`.
 */ async function fetchOnrampOptions({ country, subdivision, apiKey }) {
    const cpdApiKey = apiKey || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$getApiKey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getApiKey"])();
    let queryParams = `?country=${country}`;
    if (subdivision) {
        queryParams = `${queryParams}&subdivision=${subdivision}`;
    }
    const response = await fetch(`${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ONRAMP_API_BASE_URL"]}/buy/options${queryParams}`, {
        method: 'GET',
        headers: {
            Authorization: `Bearer ${cpdApiKey}`
        }
    });
    const responseJson = await response.json();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$convertSnakeToCamelCase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["convertSnakeToCamelCase"])(responseJson);
}
;
 //# sourceMappingURL=fetchOnrampOptions.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/hooks/usePaymentMethods.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "usePaymentMethods": (()=>usePaymentMethods)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$buildPaymentMethods$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/buildPaymentMethods.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$fetchOnrampOptions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/fetchOnrampOptions.js [app-client] (ecmascript)");
;
;
;
const usePaymentMethods = ({ country, subdivision, currency, setPaymentMethods, setIsPaymentMethodsLoading, onError })=>{
    const handleFetchPaymentMethods = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "usePaymentMethods.useCallback[handleFetchPaymentMethods]": async ()=>{
            setIsPaymentMethodsLoading(true);
            try {
                const paymentOptions = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$fetchOnrampOptions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchOnrampOptions"])({
                    country,
                    subdivision
                });
                const paymentMethods = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$buildPaymentMethods$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["buildPaymentMethods"])(paymentOptions, currency, country);
                if (paymentMethods.length === 0) {
                    console.error('No payment methods found for the selected country and currency. See docs for more information: https://docs.cdp.coinbase.com/onramp/docs/api-configurations');
                    onError?.({
                        errorType: 'handled_error',
                        code: 'NO_PAYMENT_METHODS',
                        debugMessage: 'No payment methods found for the selected country and currency. See docs for more information: https://docs.cdp.coinbase.com/onramp/docs/api-configurations'
                    });
                }
                setPaymentMethods(paymentMethods);
            } catch (error) {
                if (error instanceof Error) {
                    console.error('Error fetching payment options:', error);
                    onError?.({
                        errorType: 'handled_error',
                        code: 'PAYMENT_METHODS_ERROR',
                        debugMessage: error.message
                    });
                }
            } finally{
                setIsPaymentMethodsLoading(false);
            }
        }
    }["usePaymentMethods.useCallback[handleFetchPaymentMethods]"], [
        country,
        subdivision,
        currency,
        setPaymentMethods,
        setIsPaymentMethodsLoading,
        onError
    ]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "usePaymentMethods.useEffect": ()=>{
            handleFetchPaymentMethods();
        // eslint-disable-next-line react-hooks/exhaustive-deps
        }
    }["usePaymentMethods.useEffect"], []);
};
;
 //# sourceMappingURL=usePaymentMethods.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardProvider.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "FundCardProvider": (()=>FundCardProvider),
    "useFundContext": (()=>useFundContext)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$hooks$2f$useAnalytics$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/core/analytics/hooks/useAnalytics.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/core/analytics/types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$hooks$2f$useValue$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/hooks/useValue.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$hooks$2f$useEmitLifecycleStatus$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/hooks/useEmitLifecycleStatus.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$hooks$2f$useOnrampExchangeRate$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/hooks/useOnrampExchangeRate.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$hooks$2f$usePaymentMethods$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/hooks/usePaymentMethods.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
'use client';
function _slicedToArray(r, e) {
    return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
    if (r) {
        if ("string" == typeof r) return _arrayLikeToArray(r, a);
        var t = ({}).toString.call(r).slice(8, -1);
        return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
    }
}
function _arrayLikeToArray(r, a) {
    (null == a || a > r.length) && (a = r.length);
    for(var e = 0, n = Array(a); e < a; e++)n[e] = r[e];
    return n;
}
function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t) return;
                f = !1;
            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
        } catch (r) {
            o = !0, n = r;
        } finally{
            try {
                if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
            } finally{
                if (o) throw n;
            }
        }
        return a;
    }
}
function _arrayWithHoles(r) {
    if (Array.isArray(r)) return r;
}
;
;
;
;
;
;
;
;
const FundContext = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createContext"])(undefined);
function FundCardProvider({ children, asset, currency = 'USD', headerText = `Buy ${asset.toUpperCase()}`, buttonText, country, subdivision, inputType, onError, onStatus, onSuccess, presetAmountInputs }) {
    const _useState = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(), _useState2 = _slicedToArray(_useState, 2), selectedPaymentMethod = _useState2[0], setSelectedPaymentMethod = _useState2[1];
    const _useState3 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(inputType || 'fiat'), _useState4 = _slicedToArray(_useState3, 2), selectedInputType = _useState4[0], setSelectedInputType = _useState4[1];
    const _useState5 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(''), _useState6 = _slicedToArray(_useState5, 2), fundAmountFiat = _useState6[0], setFundAmountFiat = _useState6[1];
    const _useState7 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(''), _useState8 = _slicedToArray(_useState7, 2), fundAmountCrypto = _useState8[0], setFundAmountCrypto = _useState8[1];
    const _useState9 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(0), _useState10 = _slicedToArray(_useState9, 2), exchangeRate = _useState10[0], setExchangeRate = _useState10[1];
    const _useState11 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(true), _useState12 = _slicedToArray(_useState11, 2), exchangeRateLoading = _useState12[0], setExchangeRateLoading = _useState12[1];
    const _useState13 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])('default'), _useState14 = _slicedToArray(_useState13, 2), submitButtonState = _useState14[0], setSubmitButtonState = _useState14[1];
    const _useState15 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([]), _useState16 = _slicedToArray(_useState15, 2), paymentMethods = _useState16[0], setPaymentMethods = _useState16[1];
    const _useState17 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(true), _useState18 = _slicedToArray(_useState17, 2), isPaymentMethodsLoading = _useState18[0], setIsPaymentMethodsLoading = _useState18[1];
    const _useEmitLifecycleStat = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$hooks$2f$useEmitLifecycleStatus$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEmitLifecycleStatus"])({
        onError,
        onSuccess,
        onStatus
    }), lifecycleStatus = _useEmitLifecycleStat.lifecycleStatus, updateLifecycleStatus = _useEmitLifecycleStat.updateLifecycleStatus;
    const _useOnrampExchangeRat = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$hooks$2f$useOnrampExchangeRate$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useOnrampExchangeRate"])({
        asset,
        currency,
        country,
        subdivision,
        setExchangeRate,
        onError
    }), fetchExchangeRate = _useOnrampExchangeRat.fetchExchangeRate;
    const _useAnalytics = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$hooks$2f$useAnalytics$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAnalytics"])(), sendAnalytics = _useAnalytics.sendAnalytics;
    const handleAnalyticsAmountChanged = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "FundCardProvider.useCallback[handleAnalyticsAmountChanged]": (amount, currency)=>{
            sendAnalytics(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FundEvent"].FundAmountChanged, {
                amount,
                currency
            });
        }
    }["FundCardProvider.useCallback[handleAnalyticsAmountChanged]"], [
        sendAnalytics
    ]);
    const handleAnalyticsOptionSelected = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "FundCardProvider.useCallback[handleAnalyticsOptionSelected]": (option)=>{
            sendAnalytics(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FundEvent"].FundOptionSelected, {
                option
            });
        }
    }["FundCardProvider.useCallback[handleAnalyticsOptionSelected]"], [
        sendAnalytics
    ]);
    const handleSetFundAmountFiat = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "FundCardProvider.useCallback[handleSetFundAmountFiat]": (amount)=>{
            const newAmount = Number.parseFloat(amount);
            if (!Number.isNaN(newAmount)) {
                handleAnalyticsAmountChanged(newAmount, currency);
            }
            setFundAmountFiat(amount);
        }
    }["FundCardProvider.useCallback[handleSetFundAmountFiat]"], [
        currency,
        handleAnalyticsAmountChanged
    ]);
    const handleSetSelectedPaymentMethod = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "FundCardProvider.useCallback[handleSetSelectedPaymentMethod]": (paymentMethod)=>{
            handleAnalyticsOptionSelected(paymentMethod.id);
            setSelectedPaymentMethod(paymentMethod);
        }
    }["FundCardProvider.useCallback[handleSetSelectedPaymentMethod]"], [
        handleAnalyticsOptionSelected
    ]);
    const handleFetchExchangeRate = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "FundCardProvider.useCallback[handleFetchExchangeRate]": async ()=>{
            setExchangeRateLoading(true);
            await fetchExchangeRate();
            setExchangeRateLoading(false);
        }
    }["FundCardProvider.useCallback[handleFetchExchangeRate]"], [
        fetchExchangeRate
    ]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "FundCardProvider.useEffect": ()=>{
            handleFetchExchangeRate();
        // eslint-disable-next-line react-hooks/exhaustive-deps
        }
    }["FundCardProvider.useEffect"], []);
    // Fetches and sets the payment methods to the context
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$hooks$2f$usePaymentMethods$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["usePaymentMethods"])({
        country,
        subdivision,
        currency,
        setPaymentMethods,
        setIsPaymentMethodsLoading,
        onError
    });
    const value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$hooks$2f$useValue$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useValue"])({
        asset,
        currency,
        selectedPaymentMethod,
        setSelectedPaymentMethod: handleSetSelectedPaymentMethod,
        fundAmountFiat,
        setFundAmountFiat: handleSetFundAmountFiat,
        fundAmountCrypto,
        setFundAmountCrypto,
        selectedInputType,
        setSelectedInputType,
        exchangeRate,
        setExchangeRate,
        exchangeRateLoading,
        setExchangeRateLoading,
        submitButtonState,
        setSubmitButtonState,
        paymentMethods,
        setPaymentMethods,
        isPaymentMethodsLoading,
        setIsPaymentMethodsLoading,
        headerText,
        buttonText,
        country,
        subdivision,
        lifecycleStatus,
        updateLifecycleStatus,
        presetAmountInputs,
        onError
    });
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(FundContext.Provider, {
        value: value,
        children: children
    });
}
function useFundContext() {
    const context = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useContext"])(FundContext);
    if (!context) {
        throw new Error('useFundContext must be used within a FundCardProvider');
    }
    return context;
}
;
 //# sourceMappingURL=FundCardProvider.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/subscribeToWindowMessage.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "MessageCodes": (()=>MessageCodes),
    "subscribeToWindowMessage": (()=>subscribeToWindowMessage)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/constants.js [app-client] (ecmascript)");
;
let MessageCodes = /*#__PURE__*/ function(MessageCodes) {
    MessageCodes["AppParams"] = "app_params";
    MessageCodes["PaymentLinkSuccess"] = "payment_link_success";
    MessageCodes["PaymentLinkClosed"] = "payment_link_closed";
    MessageCodes["GuestCheckoutRedirectSuccess"] = "guest_checkout_redirect_success";
    MessageCodes["Success"] = "success";
    MessageCodes["Event"] = "event";
    return MessageCodes;
}({});
/**
 * Subscribes to a message from the parent window.
 * @param messageCode A message code to subscribe to.
 * @param onMessage Callback for when the message is received.
 * @param allowedOrigin The origin to allow messages from.
 * @param onValidateOrigin Callback to validate the origin of the message.
 * @returns
 */ function subscribeToWindowMessage({ onMessage, allowedOrigin = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DEFAULT_ONRAMP_URL"], onValidateOrigin = ()=>Promise.resolve(true) }) {
    const handleMessage = (event)=>{
        if (!isAllowedOrigin({
            event,
            allowedOrigin
        })) {
            return;
        }
        const _JSON$parse = JSON.parse(event.data), eventName = _JSON$parse.eventName, data = _JSON$parse.data;
        if (eventName === 'event') {
            (async ()=>{
                if (await onValidateOrigin(event.origin)) {
                    onMessage(data);
                }
            })();
        }
    };
    window.addEventListener('message', handleMessage);
    // Unsubscribe
    return ()=>{
        window.removeEventListener('message', handleMessage);
    };
}
function isAllowedOrigin({ event, allowedOrigin }) {
    const isOriginAllowed = !allowedOrigin || event.origin === allowedOrigin;
    return isOriginAllowed;
}
;
 //# sourceMappingURL=subscribeToWindowMessage.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/setupOnrampEventListeners.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "setupOnrampEventListeners": (()=>setupOnrampEventListeners)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$subscribeToWindowMessage$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/subscribeToWindowMessage.js [app-client] (ecmascript)");
;
;
/**
 * Subscribes to events from the Coinbase Onramp widget.
 * @param onEvent - Callback for when any event is received.
 * @param onExit - Callback for when an exit event is received.
 * @param onSuccess - Callback for when a success event is received.
 * @returns a function to unsubscribe from the event listener.
 */ function setupOnrampEventListeners({ onEvent, onExit, onSuccess, host = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["DEFAULT_ONRAMP_URL"] }) {
    const unsubscribe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$subscribeToWindowMessage$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["subscribeToWindowMessage"])({
        allowedOrigin: host,
        onMessage: (data)=>{
            const metadata = data;
            if (metadata.eventName === 'success') {
                onSuccess?.(metadata.data);
            }
            if (metadata.eventName === 'exit') {
                onExit?.(metadata.error);
            }
            onEvent?.(metadata);
        }
    });
    return unsubscribe;
}
;
 //# sourceMappingURL=setupOnrampEventListeners.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/hooks/useFundCardSetupOnrampEventListeners.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useFundCardSetupOnrampEventListeners": (()=>useFundCardSetupOnrampEventListeners)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/constants.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$setupOnrampEventListeners$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/setupOnrampEventListeners.js [app-client] (ecmascript)");
;
;
;
;
const useFundCardSetupOnrampEventListeners = ()=>{
    const _useFundContext = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useFundContext"])(), setSubmitButtonState = _useFundContext.setSubmitButtonState, updateLifecycleStatus = _useFundContext.updateLifecycleStatus;
    const handleOnrampEvent = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "useFundCardSetupOnrampEventListeners.useCallback[handleOnrampEvent]": (data)=>{
            if (data.eventName === 'transition_view') {
                updateLifecycleStatus({
                    statusName: 'transactionPending',
                    statusData: undefined
                });
            } else if (data.eventName === 'error') {
                updateLifecycleStatus({
                    statusName: 'error',
                    statusData: data.error
                });
                setSubmitButtonState('error');
                setTimeout({
                    "useFundCardSetupOnrampEventListeners.useCallback[handleOnrampEvent]": ()=>{
                        setSubmitButtonState('default');
                    }
                }["useFundCardSetupOnrampEventListeners.useCallback[handleOnrampEvent]"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FUND_BUTTON_RESET_TIMEOUT"]);
            }
        }
    }["useFundCardSetupOnrampEventListeners.useCallback[handleOnrampEvent]"], [
        updateLifecycleStatus,
        setSubmitButtonState
    ]);
    const handleOnrampSuccess = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "useFundCardSetupOnrampEventListeners.useCallback[handleOnrampSuccess]": (data)=>{
            updateLifecycleStatus({
                statusName: 'transactionSuccess',
                statusData: data
            });
            setSubmitButtonState('success');
            setTimeout({
                "useFundCardSetupOnrampEventListeners.useCallback[handleOnrampSuccess]": ()=>{
                    setSubmitButtonState('default');
                }
            }["useFundCardSetupOnrampEventListeners.useCallback[handleOnrampSuccess]"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FUND_BUTTON_RESET_TIMEOUT"]);
        }
    }["useFundCardSetupOnrampEventListeners.useCallback[handleOnrampSuccess]"], [
        updateLifecycleStatus,
        setSubmitButtonState
    ]);
    const handleOnrampExit = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "useFundCardSetupOnrampEventListeners.useCallback[handleOnrampExit]": ()=>{
            setSubmitButtonState('default');
            updateLifecycleStatus({
                statusName: 'exit',
                statusData: undefined
            });
        }
    }["useFundCardSetupOnrampEventListeners.useCallback[handleOnrampExit]"], [
        updateLifecycleStatus,
        setSubmitButtonState
    ]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "useFundCardSetupOnrampEventListeners.useEffect": ()=>{
            const unsubscribe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$setupOnrampEventListeners$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["setupOnrampEventListeners"])({
                onEvent: handleOnrampEvent,
                onExit: handleOnrampExit,
                onSuccess: handleOnrampSuccess
            });
            return ({
                "useFundCardSetupOnrampEventListeners.useEffect": ()=>{
                    unsubscribe();
                }
            })["useFundCardSetupOnrampEventListeners.useEffect"];
        // eslint-disable-next-line react-hooks/exhaustive-deps
        }
    }["useFundCardSetupOnrampEventListeners.useEffect"], []);
};
;
 //# sourceMappingURL=useFundCardSetupOnrampEventListeners.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardAmountInput.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "FundCardAmountInput": (()=>FundCardAmountInput),
    "default": (()=>FundCardAmountInput)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$components$2f$amount$2d$input$2f$AmountInput$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/components/amount-input/AmountInput.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$hooks$2f$useThrottle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/hooks/useThrottle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$hooks$2f$useAnalytics$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/core/analytics/hooks/useAnalytics.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/core/analytics/types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$hooks$2f$useOnrampExchangeRate$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/hooks/useOnrampExchangeRate.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
'use client';
;
;
;
;
;
;
;
;
const THROTTLE_DELAY_MS = 5000;
const FundCardAmountInput = ({ className })=>{
    const _useFundContext = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useFundContext"])(), fundAmountFiat = _useFundContext.fundAmountFiat, fundAmountCrypto = _useFundContext.fundAmountCrypto, asset = _useFundContext.asset, selectedInputType = _useFundContext.selectedInputType, currency = _useFundContext.currency, exchangeRate = _useFundContext.exchangeRate, setFundAmountFiat = _useFundContext.setFundAmountFiat, setFundAmountCrypto = _useFundContext.setFundAmountCrypto, country = _useFundContext.country, subdivision = _useFundContext.subdivision, setExchangeRate = _useFundContext.setExchangeRate, onError = _useFundContext.onError;
    const _useOnrampExchangeRat = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$hooks$2f$useOnrampExchangeRate$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useOnrampExchangeRate"])({
        asset,
        currency,
        country,
        subdivision,
        setExchangeRate,
        onError
    }), fetchExchangeRate = _useOnrampExchangeRat.fetchExchangeRate;
    const throttledFetchExchangeRate = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$hooks$2f$useThrottle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useThrottle"])(fetchExchangeRate, THROTTLE_DELAY_MS);
    const _useAnalytics = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$hooks$2f$useAnalytics$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAnalytics"])(), sendAnalytics = _useAnalytics.sendAnalytics;
    /**
   * Handle amount changes with throttled updates
   *
   * Both setFiatAmount and setCryptoAmount on the AmountInput component are called with the new amount so we only need to fetch exchange rate when either is called.
   */ const handleFiatAmountChange = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "FundCardAmountInput.useCallback[handleFiatAmountChange]": (amount)=>{
            setFundAmountFiat(amount);
            throttledFetchExchangeRate();
            sendAnalytics(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FundEvent"].FundAmountChanged, {
                amount: Number(amount),
                currency
            });
        }
    }["FundCardAmountInput.useCallback[handleFiatAmountChange]"], [
        currency,
        sendAnalytics,
        setFundAmountFiat,
        throttledFetchExchangeRate
    ]);
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$components$2f$amount$2d$input$2f$AmountInput$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AmountInput"], {
        fiatAmount: fundAmountFiat,
        cryptoAmount: fundAmountCrypto,
        asset: asset,
        selectedInputType: selectedInputType,
        currency: currency,
        className: className,
        setFiatAmount: handleFiatAmountChange,
        setCryptoAmount: setFundAmountCrypto,
        exchangeRate: String(exchangeRate)
    });
};
;
 //# sourceMappingURL=FundCardAmountInput.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardAmountInputTypeSwitch.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "FundCardAmountInputTypeSwitch": (()=>FundCardAmountInputTypeSwitch),
    "default": (()=>FundCardAmountInputTypeSwitch)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$components$2f$amount$2d$input$2f$AmountInputTypeSwitch$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/components/amount-input/AmountInputTypeSwitch.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
'use client';
;
;
;
const FundCardAmountInputTypeSwitch = ({ className })=>{
    const _useFundContext = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useFundContext"])(), selectedInputType = _useFundContext.selectedInputType, setSelectedInputType = _useFundContext.setSelectedInputType, asset = _useFundContext.asset, fundAmountFiat = _useFundContext.fundAmountFiat, fundAmountCrypto = _useFundContext.fundAmountCrypto, exchangeRate = _useFundContext.exchangeRate, exchangeRateLoading = _useFundContext.exchangeRateLoading, currency = _useFundContext.currency;
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$components$2f$amount$2d$input$2f$AmountInputTypeSwitch$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["AmountInputTypeSwitch"], {
        selectedInputType: selectedInputType,
        setSelectedInputType: setSelectedInputType,
        asset: asset,
        fiatAmount: fundAmountFiat,
        cryptoAmount: fundAmountCrypto,
        exchangeRate: exchangeRate,
        exchangeRateLoading: exchangeRateLoading,
        currency: currency,
        className: className
    });
};
;
 //# sourceMappingURL=FundCardAmountInputTypeSwitch.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardHeader.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "FundCardHeader": (()=>FundCardHeader)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/styles/theme.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
'use client';
;
;
;
function FundCardHeader({ className }) {
    const _useFundContext = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useFundContext"])(), headerText = _useFundContext.headerText;
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("div", {
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["text"].headline, className),
        "data-testid": "ockFundCardHeader",
        children: headerText
    });
}
;
 //# sourceMappingURL=FundCardHeader.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardPaymentMethodImage.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "FundCardPaymentMethodImage": (()=>FundCardPaymentMethodImage)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$hooks$2f$useIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/hooks/useIcon.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/styles/theme.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
;
;
;
function FundCardPaymentMethodImage({ className, paymentMethod }) {
    const icon = paymentMethod.icon;
    const iconSvg = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$hooks$2f$useIcon$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useIcon"])({
        icon
    });
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("div", {
        "data-testid": "ockFundCardPaymentMethodImage__iconContainer",
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])('flex items-center justify-center overflow-hidden rounded-[50%]', className),
        children: iconSvg
    });
}
;
 //# sourceMappingURL=FundCardPaymentMethodImage.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardPaymentMethodSelectRow.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "FundCardPaymentMethodSelectRow": (()=>FundCardPaymentMethodSelectRow)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$hooks$2f$useAnalytics$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/core/analytics/hooks/useAnalytics.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/core/analytics/types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/styles/theme.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardPaymentMethodImage$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardPaymentMethodImage.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
;
;
;
;
;
;
const FundCardPaymentMethodSelectRow = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["memo"])(({ paymentMethod, onClick, hideImage, hideDescription, disabled, disabledReason, testId })=>{
    const _useAnalytics = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$hooks$2f$useAnalytics$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAnalytics"])(), sendAnalytics = _useAnalytics.sendAnalytics;
    const handleOnClick = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "FundCardPaymentMethodSelectRow.useCallback[handleOnClick]": ()=>{
            if (!disabled) {
                onClick?.(paymentMethod);
                sendAnalytics(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FundEvent"].FundOptionSelected, {
                    option: paymentMethod.id
                });
            }
        }
    }["FundCardPaymentMethodSelectRow.useCallback[handleOnClick]"], [
        disabled,
        onClick,
        paymentMethod,
        sendAnalytics
    ]);
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("button", {
        "data-testid": testId,
        type: "button",
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pressable"].default, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["border"].radius, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["background"].default, 'flex w-full items-center justify-between px-4 py-2', {
            [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pressable"].disabled]: disabled
        }),
        onClick: handleOnClick,
        disabled: disabled,
        title: disabledReason,
        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])("span", {
            className: "flex items-center gap-3",
            children: [
                !hideImage && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardPaymentMethodImage$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FundCardPaymentMethodImage"], {
                    paymentMethod: paymentMethod,
                    className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])('h-4 w-4', {
                        [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pressable"].disabled]: disabled
                    })
                }),
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])("span", {
                    className: "flex flex-col items-start",
                    children: [
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("span", {
                            className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["text"].headline),
                            children: paymentMethod.name
                        }),
                        !hideDescription && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("span", {
                            className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["text"].label2, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["color"].foregroundMuted, 'font-normal'),
                            children: disabledReason || paymentMethod.description
                        })
                    ]
                })
            ]
        })
    });
});
FundCardPaymentMethodSelectRow.displayName = 'FundCardPaymentMethodSelectRow';
;
 //# sourceMappingURL=FundCardPaymentMethodSelectRow.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardPaymentMethodSelectorToggle.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "FundCardPaymentMethodSelectorToggle": (()=>FundCardPaymentMethodSelectorToggle)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$svg$2f$caretUpSvg$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/svg/caretUpSvg.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/styles/theme.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardPaymentMethodImage$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardPaymentMethodImage.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
;
;
;
;
;
const FundCardPaymentMethodSelectorToggle = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(({ onClick, paymentMethod, isOpen, className }, ref)=>{
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])("button", {
        type: "button",
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["pressable"].default, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["border"].radius, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["border"].lineDefault, 'flex h-12 w-full items-center gap-2 px-3 py-1', className),
        onClick: onClick,
        ref: ref,
        "data-testid": "ockFundCardPaymentMethodSelectorToggle",
        children: [
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("div", {
                className: "w-4",
                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardPaymentMethodImage$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FundCardPaymentMethodImage"], {
                    paymentMethod: paymentMethod,
                    className: "h-4 w-4"
                })
            }),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("span", {
                className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["text"].headline, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["color"].foreground, 'flex w-full'),
                "data-testid": "ockFundCardPaymentMethodSelectorToggle__paymentMethodName",
                children: paymentMethod.name
            }),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("span", {
                className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])('rotate-90 transition-transform duration-200', isOpen && 'rotate-180'),
                children: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$svg$2f$caretUpSvg$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["caretUpSvg"]
            })
        ]
    });
});
FundCardPaymentMethodSelectorToggle.displayName = 'FundCardPaymentMethodSelectorToggle';
;
 //# sourceMappingURL=FundCardPaymentMethodSelectorToggle.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardPaymentMethodDropdown.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "FundCardPaymentMethodDropdown": (()=>FundCardPaymentMethodDropdown)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$buy$2f$utils$2f$isApplePaySupported$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/buy/utils/isApplePaySupported.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$components$2f$Skeleton$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/components/Skeleton.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$hooks$2f$useOutsideClick$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/hooks/useOutsideClick.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$formatFiatAmount$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/utils/formatFiatAmount.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$hooks$2f$useAnalytics$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/core/analytics/hooks/useAnalytics.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/core/analytics/types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/styles/theme.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardPaymentMethodSelectRow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardPaymentMethodSelectRow.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardPaymentMethodSelectorToggle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardPaymentMethodSelectorToggle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
'use client';
function _slicedToArray(r, e) {
    return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
    if (r) {
        if ("string" == typeof r) return _arrayLikeToArray(r, a);
        var t = ({}).toString.call(r).slice(8, -1);
        return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
    }
}
function _arrayLikeToArray(r, a) {
    (null == a || a > r.length) && (a = r.length);
    for(var e = 0, n = Array(a); e < a; e++)n[e] = r[e];
    return n;
}
function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
        var e, n, i, u, a = [], f = !0, o = !1;
        try {
            if (i = (t = t.call(r)).next, 0 === l) {
                if (Object(t) !== t) return;
                f = !1;
            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
        } catch (r) {
            o = !0, n = r;
        } finally{
            try {
                if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
            } finally{
                if (o) throw n;
            }
        }
        return a;
    }
}
function _arrayWithHoles(r) {
    if (Array.isArray(r)) return r;
}
;
;
;
;
;
;
;
;
;
;
;
;
function FundCardPaymentMethodDropdown({ className }) {
    const _useState = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false), _useState2 = _slicedToArray(_useState, 2), isOpen = _useState2[0], setIsOpen = _useState2[1];
    const _useFundContext = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useFundContext"])(), selectedPaymentMethod = _useFundContext.selectedPaymentMethod, setSelectedPaymentMethod = _useFundContext.setSelectedPaymentMethod, paymentMethods = _useFundContext.paymentMethods, fundAmountFiat = _useFundContext.fundAmountFiat, isPaymentMethodsLoading = _useFundContext.isPaymentMethodsLoading, currency = _useFundContext.currency;
    const _useAnalytics = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$hooks$2f$useAnalytics$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAnalytics"])(), sendAnalytics = _useAnalytics.sendAnalytics;
    const filteredPaymentMethods = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "FundCardPaymentMethodDropdown.useMemo[filteredPaymentMethods]": ()=>{
            return paymentMethods.filter({
                "FundCardPaymentMethodDropdown.useMemo[filteredPaymentMethods]": (method)=>method.id !== 'APPLE_PAY' || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$buy$2f$utils$2f$isApplePaySupported$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isApplePaySupported"])()
            }["FundCardPaymentMethodDropdown.useMemo[filteredPaymentMethods]"]);
        }
    }["FundCardPaymentMethodDropdown.useMemo[filteredPaymentMethods]"], [
        paymentMethods
    ]);
    const getPaymentMethodDisabledReason = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "FundCardPaymentMethodDropdown.useCallback[getPaymentMethodDisabledReason]": (method)=>{
            const amount = Number(fundAmountFiat);
            if (method.minAmount && amount < method.minAmount) {
                return `Minimum amount of ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$formatFiatAmount$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatFiatAmount"])({
                    amount: method.minAmount,
                    currency: currency,
                    minimumFractionDigits: 0
                })} required`;
            }
            if (method.maxAmount && amount > method.maxAmount) {
                return `Maximum amount allowed is ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$formatFiatAmount$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatFiatAmount"])({
                    amount: method.maxAmount,
                    currency: currency,
                    minimumFractionDigits: 0
                })}`;
            }
            return undefined;
        }
    }["FundCardPaymentMethodDropdown.useCallback[getPaymentMethodDisabledReason]"], [
        fundAmountFiat,
        currency
    ]);
    const isPaymentMethodDisabled = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "FundCardPaymentMethodDropdown.useCallback[isPaymentMethodDisabled]": (method)=>{
            if (!fundAmountFiat) {
                return false;
            }
            return Boolean(getPaymentMethodDisabledReason(method));
        }
    }["FundCardPaymentMethodDropdown.useCallback[isPaymentMethodDisabled]"], [
        fundAmountFiat,
        getPaymentMethodDisabledReason
    ]);
    // If current selected method becomes disabled, switch to Coinbase
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "FundCardPaymentMethodDropdown.useEffect": ()=>{
            if (selectedPaymentMethod && isPaymentMethodDisabled(selectedPaymentMethod)) {
                const coinbaseMethod = paymentMethods.find({
                    "FundCardPaymentMethodDropdown.useEffect.coinbaseMethod": (m)=>m.id === ''
                }["FundCardPaymentMethodDropdown.useEffect.coinbaseMethod"]);
                if (coinbaseMethod) {
                    setSelectedPaymentMethod(coinbaseMethod);
                }
            }
        }
    }["FundCardPaymentMethodDropdown.useEffect"], [
        selectedPaymentMethod,
        paymentMethods,
        setSelectedPaymentMethod,
        isPaymentMethodDisabled
    ]);
    const handlePaymentMethodSelect = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "FundCardPaymentMethodDropdown.useCallback[handlePaymentMethodSelect]": (paymentMethod)=>{
            if (!isPaymentMethodDisabled(paymentMethod)) {
                sendAnalytics(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FundEvent"].FundOptionSelected, {
                    option: paymentMethod.id
                });
                setSelectedPaymentMethod(paymentMethod);
                setIsOpen(false);
            }
        }
    }["FundCardPaymentMethodDropdown.useCallback[handlePaymentMethodSelect]"], [
        setSelectedPaymentMethod,
        isPaymentMethodDisabled,
        sendAnalytics
    ]);
    const handleToggle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "FundCardPaymentMethodDropdown.useCallback[handleToggle]": ()=>{
            setIsOpen(!isOpen);
        }
    }["FundCardPaymentMethodDropdown.useCallback[handleToggle]"], [
        isOpen
    ]);
    const dropdownRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const dropdownContainerRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const buttonRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$hooks$2f$useOutsideClick$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useOutsideClick"])(dropdownContainerRef, {
        "FundCardPaymentMethodDropdown.useOutsideClick": ()=>{
            if (isOpen) {
                setIsOpen(false);
            }
        }
    }["FundCardPaymentMethodDropdown.useOutsideClick"]);
    const handleEscKeyPress = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "FundCardPaymentMethodDropdown.useCallback[handleEscKeyPress]": (event)=>{
            if (event.key === 'Escape') {
                setIsOpen(false);
            }
        }
    }["FundCardPaymentMethodDropdown.useCallback[handleEscKeyPress]"], []);
    const paymentMethod = selectedPaymentMethod || filteredPaymentMethods[0];
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])("div", {
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])('relative py-4', className),
        ref: dropdownContainerRef,
        "data-testid": "ockFundCardPaymentMethodDropdownContainer",
        onKeyUp: handleEscKeyPress,
        children: [
            isPaymentMethodsLoading || !paymentMethod ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$components$2f$Skeleton$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Skeleton"], {
                className: "h-12 w-full"
            }) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardPaymentMethodSelectorToggle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FundCardPaymentMethodSelectorToggle"], {
                ref: buttonRef,
                onClick: handleToggle,
                isOpen: isOpen,
                paymentMethod: paymentMethod
            }),
            isOpen && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("div", {
                ref: dropdownRef,
                "data-testid": "ockFundCardPaymentMethodDropdown",
                className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["border"].radius, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["border"].lineDefault, 'ock-scrollbar absolute z-10 mt-2 flex w-full flex-col overflow-y-hidden'),
                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("div", {
                    className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["background"].default, 'overflow-y-auto p-2'),
                    children: filteredPaymentMethods.map((paymentMethod)=>{
                        const isDisabled = isPaymentMethodDisabled(paymentMethod);
                        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardPaymentMethodSelectRow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FundCardPaymentMethodSelectRow"], {
                            testId: `ockFundCardPaymentMethodSelectRow__${paymentMethod.id}`,
                            paymentMethod: paymentMethod,
                            onClick: handlePaymentMethodSelect,
                            disabled: isDisabled,
                            disabledReason: getPaymentMethodDisabledReason(paymentMethod)
                        }, paymentMethod.name);
                    })
                })
            })
        ]
    });
}
;
 //# sourceMappingURL=FundCardPaymentMethodDropdown.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardPresetAmountInputItem.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "FundCardPresetAmountInputItem": (()=>FundCardPresetAmountInputItem)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$formatFiatAmount$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/utils/formatFiatAmount.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/styles/theme.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$hooks$2f$useAnalytics$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/core/analytics/hooks/useAnalytics.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/core/analytics/types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
;
;
;
;
;
;
function FundCardPresetAmountInputItem({ presetAmountInput, currency, onClick }) {
    const _useAnalytics = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$hooks$2f$useAnalytics$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAnalytics"])(), sendAnalytics = _useAnalytics.sendAnalytics;
    const presetAmountInputText = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "FundCardPresetAmountInputItem.useMemo[presetAmountInputText]": ()=>{
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$formatFiatAmount$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["formatFiatAmount"])({
                amount: presetAmountInput,
                currency,
                minimumFractionDigits: 0
            });
        }
    }["FundCardPresetAmountInputItem.useMemo[presetAmountInputText]"], [
        presetAmountInput,
        currency
    ]);
    const handleClick = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "FundCardPresetAmountInputItem.useCallback[handleClick]": ()=>{
            sendAnalytics(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FundEvent"].FundAmountChanged, {
                amount: Number(presetAmountInput),
                currency
            });
            onClick(presetAmountInput);
        }
    }["FundCardPresetAmountInputItem.useCallback[handleClick]"], [
        presetAmountInput,
        currency,
        onClick,
        sendAnalytics
    ]);
    const handleKeyPress = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "FundCardPresetAmountInputItem.useCallback[handleKeyPress]": (event)=>{
            if (event.key === 'Enter' || event.key === ' ') {
                event.preventDefault();
                sendAnalytics(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$core$2f$analytics$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FundEvent"].FundAmountChanged, {
                    amount: Number(presetAmountInput),
                    currency
                });
                onClick(presetAmountInput);
            }
        }
    }["FundCardPresetAmountInputItem.useCallback[handleKeyPress]"], [
        presetAmountInput,
        currency,
        onClick,
        sendAnalytics
    ]);
    if (!presetAmountInput) {
        return null;
    }
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("button", {
        type: "button",
        "data-testid": "ockPresetAmountInput",
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["text"].body, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["color"].foreground, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["border"].radius, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["border"].lineDefault, 'flex-1', 'p-1', 'overflow-hidden', 'whitespace-nowrap', 'text-ellipsis', 'hover:bg-[var(--ock-bg-default-hover)]', 'focus:outline-none focus:ring-2'),
        title: presetAmountInputText,
        onClick: handleClick,
        onKeyDown: handleKeyPress,
        children: presetAmountInputText
    });
}
;
 //# sourceMappingURL=FundCardPresetAmountInputItem.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardPresetAmountInputList.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "FundCardPresetAmountInputList": (()=>FundCardPresetAmountInputList)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$hooks$2f$useAmountInput$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/hooks/useAmountInput.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardPresetAmountInputItem$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardPresetAmountInputItem.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
'use client';
;
;
;
;
function FundCardPresetAmountInputList() {
    const _useFundContext = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useFundContext"])(), presetAmountInputs = _useFundContext.presetAmountInputs, currency = _useFundContext.currency, selectedInputType = _useFundContext.selectedInputType, exchangeRate = _useFundContext.exchangeRate, setFundAmountFiat = _useFundContext.setFundAmountFiat, setFundAmountCrypto = _useFundContext.setFundAmountCrypto;
    const _useAmountInput = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$hooks$2f$useAmountInput$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAmountInput"])({
        setFiatAmount: setFundAmountFiat,
        setCryptoAmount: setFundAmountCrypto,
        selectedInputType,
        exchangeRate: String(exchangeRate)
    }), handleFiatChange = _useAmountInput.handleFiatChange;
    if (!presetAmountInputs) {
        return null;
    }
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("div", {
        "data-testid": "ockPresetAmountInputList",
        className: "flex w-full flex-wrap items-center justify-between gap-2 pt-8",
        children: presetAmountInputs.map((amount, index)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardPresetAmountInputItem$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FundCardPresetAmountInputItem"], {
                presetAmountInput: amount,
                onClick: handleFiatChange,
                currency: currency
            }, index))
    });
}
;
 //# sourceMappingURL=FundCardPresetAmountInputList.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/hooks/useFundCardFundingUrl.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useFundCardFundingUrl": (()=>useFundCardFundingUrl)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$useOnchainKit$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/useOnchainKit.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$getOnrampBuyUrl$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/getOnrampBuyUrl.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$wagmi$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/wagmi/dist/esm/hooks/useAccount.js [app-client] (ecmascript)");
;
;
;
;
;
const useFundCardFundingUrl = ()=>{
    const _useOnchainKit = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$useOnchainKit$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useOnchainKit"])(), projectId = _useOnchainKit.projectId, defaultChain = _useOnchainKit.chain;
    const _useAccount = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$wagmi$2f$dist$2f$esm$2f$hooks$2f$useAccount$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAccount"])(), address = _useAccount.address, accountChain = _useAccount.chain;
    const _useFundContext = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useFundContext"])(), selectedPaymentMethod = _useFundContext.selectedPaymentMethod, selectedInputType = _useFundContext.selectedInputType, fundAmountFiat = _useFundContext.fundAmountFiat, fundAmountCrypto = _useFundContext.fundAmountCrypto, asset = _useFundContext.asset, currency = _useFundContext.currency;
    const chain = accountChain || defaultChain;
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "useFundCardFundingUrl.useMemo": ()=>{
            if (projectId === null || address === undefined) {
                return undefined;
            }
            const fundAmount = selectedInputType === 'fiat' ? fundAmountFiat : fundAmountCrypto;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$getOnrampBuyUrl$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOnrampBuyUrl"])({
                projectId,
                assets: [
                    asset
                ],
                presetFiatAmount: selectedInputType === 'fiat' ? Number(fundAmount) : undefined,
                presetCryptoAmount: selectedInputType === 'crypto' ? Number(fundAmount) : undefined,
                defaultPaymentMethod: selectedPaymentMethod?.id,
                addresses: {
                    [address]: [
                        chain.name.toLowerCase()
                    ]
                },
                fiatCurrency: currency,
                originComponentName: 'FundCard'
            });
        }
    }["useFundCardFundingUrl.useMemo"], [
        asset,
        fundAmountFiat,
        fundAmountCrypto,
        selectedPaymentMethod,
        selectedInputType,
        projectId,
        address,
        chain,
        currency
    ]);
};
;
 //# sourceMappingURL=useFundCardFundingUrl.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardSubmitButton.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "FundCardSubmitButton": (()=>FundCardSubmitButton)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$hooks$2f$useFundCardFundingUrl$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/hooks/useFundCardFundingUrl.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundButton$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundButton.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
'use client';
;
;
;
;
;
function FundCardSubmitButton() {
    const _useFundContext = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useFundContext"])(), fundAmountFiat = _useFundContext.fundAmountFiat, fundAmountCrypto = _useFundContext.fundAmountCrypto, submitButtonState = _useFundContext.submitButtonState, setSubmitButtonState = _useFundContext.setSubmitButtonState, buttonText = _useFundContext.buttonText, currency = _useFundContext.currency, updateLifecycleStatus = _useFundContext.updateLifecycleStatus;
    const fundingUrl = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$hooks$2f$useFundCardFundingUrl$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useFundCardFundingUrl"])();
    const handleOnClick = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "FundCardSubmitButton.useCallback[handleOnClick]": ()=>setSubmitButtonState('loading')
    }["FundCardSubmitButton.useCallback[handleOnClick]"], [
        setSubmitButtonState
    ]);
    const handleOnPopupClose = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "FundCardSubmitButton.useCallback[handleOnPopupClose]": ()=>{
            updateLifecycleStatus({
                statusName: 'exit',
                statusData: undefined
            });
            setSubmitButtonState('default');
        }
    }["FundCardSubmitButton.useCallback[handleOnPopupClose]"], [
        updateLifecycleStatus,
        setSubmitButtonState
    ]);
    const isButtonDisabled = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "FundCardSubmitButton.useMemo[isButtonDisabled]": ()=>(!fundAmountFiat || Number(fundAmountCrypto) === 0) && (!fundAmountCrypto || Number(fundAmountFiat) === 0)
    }["FundCardSubmitButton.useMemo[isButtonDisabled]"], [
        fundAmountCrypto,
        fundAmountFiat
    ]);
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundButton$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FundButton"], {
        disabled: isButtonDisabled,
        hideIcon: submitButtonState === 'default',
        text: buttonText,
        className: "w-full",
        fundingUrl: fundingUrl,
        state: submitButtonState,
        onClick: handleOnClick,
        onPopupClose: handleOnPopupClose,
        fiatCurrency: currency
    });
}
;
 //# sourceMappingURL=FundCardSubmitButton.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCard.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "FundCard": (()=>FundCard)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$hooks$2f$useTheme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/hooks/useTheme.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/styles/theme.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$hooks$2f$useFundCardSetupOnrampEventListeners$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/hooks/useFundCardSetupOnrampEventListeners.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardAmountInput$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardAmountInput.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardAmountInputTypeSwitch$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardAmountInputTypeSwitch.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardHeader$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardHeader.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardPaymentMethodDropdown$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardPaymentMethodDropdown.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardPresetAmountInputList$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardPresetAmountInputList.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardSubmitButton$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardSubmitButton.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
'use client';
;
;
;
;
;
;
;
;
;
;
;
function FundCard({ assetSymbol, buttonText = 'Buy', headerText, country = 'US', subdivision, currency = 'USD', presetAmountInputs, children = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(DefaultFundCardContent, {}), className, onError, onStatus, onSuccess }) {
    const componentTheme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$hooks$2f$useTheme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTheme"])();
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FundCardProvider"], {
        asset: assetSymbol,
        headerText: headerText,
        buttonText: buttonText,
        country: country,
        subdivision: subdivision,
        currency: currency,
        onError: onError,
        onStatus: onStatus,
        onSuccess: onSuccess,
        presetAmountInputs: presetAmountInputs,
        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("div", {
            className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])(componentTheme, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["background"].default, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["color"].foreground, 'flex w-full flex-col p-6', __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["text"].headline, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["border"].radius, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$styles$2f$theme$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["border"].lineDefault, className),
            children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(FundCardContent, {
                children: children
            })
        })
    });
}
function FundCardContent({ children }) {
    // Setup event listeners for the onramp
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$hooks$2f$useFundCardSetupOnrampEventListeners$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useFundCardSetupOnrampEventListeners"])();
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])("form", {
        className: "w-full",
        "data-testid": "ockFundCardForm",
        children: children
    });
}
function DefaultFundCardContent() {
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Fragment"], {
        children: [
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardHeader$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FundCardHeader"], {}),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardAmountInput$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FundCardAmountInput"], {}),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardAmountInputTypeSwitch$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FundCardAmountInputTypeSwitch"], {}),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardPresetAmountInputList$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FundCardPresetAmountInputList"], {}),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardPaymentMethodDropdown$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FundCardPaymentMethodDropdown"], {}),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardSubmitButton$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FundCardSubmitButton"], {})
        ]
    });
}
;
 //# sourceMappingURL=FundCard.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/fetchOnrampConfig.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "fetchOnrampConfig": (()=>fetchOnrampConfig)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$convertSnakeToCamelCase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/utils/convertSnakeToCamelCase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$getApiKey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/utils/getApiKey.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/constants.js [app-client] (ecmascript)");
;
;
;
/**
 * Returns list of countries supported by Coinbase Onramp, and the payment methods available in each country.
 */ async function fetchOnrampConfig(apiKey) {
    const cpdApiKey = apiKey || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$getApiKey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getApiKey"])();
    const response = await fetch(`${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ONRAMP_API_BASE_URL"]}/buy/config`, {
        method: 'GET',
        headers: {
            Authorization: `Bearer ${cpdApiKey}`
        }
    });
    const responseJson = await response.json();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$convertSnakeToCamelCase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["convertSnakeToCamelCase"])(responseJson);
}
;
 //# sourceMappingURL=fetchOnrampConfig.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/fetchOnrampTransactionStatus.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "fetchOnrampTransactionStatus": (()=>fetchOnrampTransactionStatus)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$convertSnakeToCamelCase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/utils/convertSnakeToCamelCase.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$getApiKey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/internal/utils/getApiKey.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/constants.js [app-client] (ecmascript)");
;
;
;
async function fetchOnrampTransactionStatus({ partnerUserId, nextPageKey, pageSize, apiKey }) {
    const cpdApiKey = apiKey || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$getApiKey$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getApiKey"])();
    const response = await fetch(`${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$constants$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ONRAMP_API_BASE_URL"]}/buy/user/${partnerUserId}/transactions?page_key=${nextPageKey}&page_size=${pageSize}`, {
        method: 'GET',
        headers: {
            Authorization: `Bearer ${cpdApiKey}`
        }
    });
    const responseJson = await response.json();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$internal$2f$utils$2f$convertSnakeToCamelCase$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["convertSnakeToCamelCase"])(responseJson);
}
;
 //# sourceMappingURL=fetchOnrampTransactionStatus.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
 // 🌲☀🌲
 // Components
 // Types
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@coinbase/onchainkit/esm/fund/index.js [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: __turbopack_require_real__ } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundButton$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundButton.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCard$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCard.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardAmountInput$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardAmountInput.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardAmountInputTypeSwitch$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardAmountInputTypeSwitch.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardHeader$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardHeader.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardPaymentMethodDropdown$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardPaymentMethodDropdown.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardPresetAmountInputList$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardPresetAmountInputList.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$components$2f$FundCardSubmitButton$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/components/FundCardSubmitButton.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$fetchOnrampConfig$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/fetchOnrampConfig.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$fetchOnrampOptions$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/fetchOnrampOptions.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$fetchOnrampQuote$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/fetchOnrampQuote.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$fetchOnrampTransactionStatus$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/fetchOnrampTransactionStatus.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$getCoinbaseSmartWalletFundUrl$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/getCoinbaseSmartWalletFundUrl.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$getOnrampBuyUrl$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/getOnrampBuyUrl.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$utils$2f$setupOnrampEventListeners$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/utils/setupOnrampEventListeners.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$coinbase$2f$onchainkit$2f$esm$2f$fund$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@coinbase/onchainkit/esm/fund/index.js [app-client] (ecmascript) <locals>");
}}),
}]);

//# sourceMappingURL=node_modules_%40coinbase_onchainkit_esm_fund_485e81._.js.map