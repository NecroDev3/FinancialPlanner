{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/src/app/hooks/store.ts"],"sourcesContent":["declare global {\n    interface WindowEventMap {\n      \"eip6963:announceProvider\": CustomEvent\n    }\n  }\n  \n  // An array to store the detected wallet providers.\n  let providers: EIP6963ProviderDetail[] = []\n  \n  export const store = {\n    value: () => providers,\n    subscribe: (callback: () => void) => {\n      function onAnnouncement(event: EIP6963AnnounceProviderEvent) {\n        if (providers.map((p) => p.info.uuid).includes(event.detail.info.uuid))\n          return\n        providers = [...providers, event.detail]\n        callback()\n      }\n  \n      // Listen for eip6963:announceProvider and call onAnnouncement when the event is triggered.\n      window.addEventListener(\"eip6963:announceProvider\", onAnnouncement)\n  \n      // Dispatch the event, which triggers the event listener in the MetaMask wallet.\n      window.dispatchEvent(new Event(\"eip6963:requestProvider\"))\n  \n      // Return a function that removes the event listener.\n      return () =>\n        window.removeEventListener(\"eip6963:announceProvider\", onAnnouncement)\n    },\n  }"],"names":[],"mappings":";;;AAME,mDAAmD;AACnD,IAAI,YAAqC,EAAE;AAEpC,MAAM,QAAQ;IACnB,OAAO,IAAM;IACb,WAAW,CAAC;QACV,SAAS,eAAe,KAAmC;YACzD,IAAI,UAAU,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,MAAM,MAAM,CAAC,IAAI,CAAC,IAAI,GACnE;YACF,YAAY;mBAAI;gBAAW,MAAM,MAAM;aAAC;YACxC;QACF;QAEA,2FAA2F;QAC3F,OAAO,gBAAgB,CAAC,4BAA4B;QAEpD,gFAAgF;QAChF,OAAO,aAAa,CAAC,IAAI,MAAM;QAE/B,qDAAqD;QACrD,OAAO,IACL,OAAO,mBAAmB,CAAC,4BAA4B;IAC3D;AACF"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/src/app/hooks/useSyncProviders.ts"],"sourcesContent":["import { useSyncExternalStore } from \"react\"\nimport { store } from \"./store\"\n\nexport const useSyncProviders = () =>\n  useSyncExternalStore(store.subscribe, store.value, store.value)"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,mBAAmB,IAC9B,CAAA,GAAA,qMAAA,CAAA,uBAAoB,AAAD,EAAE,4HAAA,CAAA,QAAK,CAAC,SAAS,EAAE,4HAAA,CAAA,QAAK,CAAC,KAAK,EAAE,4HAAA,CAAA,QAAK,CAAC,KAAK"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///Users/linumlabs/Desktop/FinancialPlanner/FinancialPlanner/src/app/monitor/page.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect } from 'react';\nimport { ArrowRight, Clock, AlertCircle, Moon, LogOut } from 'lucide-react';\nimport Link from 'next/link';\nimport { useSyncProviders } from \"../hooks/useSyncProviders\";\nimport {\n  ConnectWallet,\n  Wallet as BaseWallet,\n  WalletDropdown,\n  WalletAdvancedAddressDetails,\n  WalletAdvancedTokenHoldings,\n  WalletAdvancedTransactionActions,\n  WalletAdvancedWalletActions,\n} from '@coinbase/onchainkit/wallet';\nimport { Avatar, Name } from '@coinbase/onchainkit/identity';\nimport { Wallet } from 'lucide-react';\n\n// Types\ninterface ValidationErrors {\n  walletAddress?: string;\n  timeframe?: string;\n  analysisType?: string;\n  network?: string;\n}\n\ninterface NetworkOption {\n  id: string;\n  name: string;\n  chainId: number;\n}\n\ninterface WalletPermission {\n  invoker: string;\n  parentCapability: string;\n  caveats: unknown[];\n}\n\ninterface EIP6963ProviderDetail {\n  info: {\n    uuid: string;\n    name: string;\n    icon: string;\n  };\n  provider: any;\n}\n\nconst SUPPORTED_NETWORKS: NetworkOption[] = [\n  { id: 'eth', name: 'Ethereum', chainId: 1 },\n  { id: 'base', name: 'Base', chainId: 8453 },\n  { id: 'arbitrum', name: 'Arbitrum', chainId: 42161 }\n];\n\nconst Monitor = () => {\n  // State management\n  const [hasPermissions, setHasPermissions] = useState(false);\n  const [walletAddress, setWalletAddress] = useState('');\n  const [selectedTimeframe, setSelectedTimeframe] = useState('year');\n  const [selectedNetwork, setSelectedNetwork] = useState<string>('eth');\n  const [currentChainId, setCurrentChainId] = useState<string | null>(null);\n  const [selectedWallet, setSelectedWallet] = useState<EIP6963ProviderDetail>();\n  const [userAccount, setUserAccount] = useState<string>('');\n  const [errors, setErrors] = useState<ValidationErrors>({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const providers = useSyncProviders();\n  const [agentName, setAgentName] = useState('');\n  \n  // Base Wallet Connect integration\n  const [baseWalletConnected, setBaseWalletConnected] = useState(false);\n  \n  // Handle Base wallet connection\n  const handleBaseWalletConnection = (address: string) => {\n    if (address) {\n      setWalletAddress(address);\n      setUserAccount(address);\n      setBaseWalletConnected(true);\n      \n      // Store the wallet address in localStorage\n      localStorage.setItem('walletAddress', address);\n      \n      // Check if user has an agent\n      fetch('https://localhost5000/agent/has_agent/' + address)\n        .then(response => response.json())\n        .then(data => {\n          if (data.result === 'ok') {\n            setAgentName(data.name);\n          }\n        })\n        .catch(error => console.error('Error fetching agent data:', error));\n    } else {\n      if (baseWalletConnected) {\n        handleDisconnect();\n        setBaseWalletConnected(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (selectedWallet) {\n      // Initial chain detection\n      detectCurrentChain(selectedWallet.provider);\n      \n      // Set up chain change listener\n      const handleChainChanged = (chainId: string) => {\n        console.log('Chain changed to:', chainId);\n        setCurrentChainId(chainId);\n        \n        // Check if the new chain is supported\n        const newChainIdDecimal = parseInt(chainId, 16);\n        const network = SUPPORTED_NETWORKS.find(n => n.chainId === newChainIdDecimal);\n        \n        if (network) {\n          setSelectedNetwork(network.id);\n        } else {\n          setErrors(prev => ({\n            ...prev,\n            network: 'Unsupported network detected. Please switch to a supported network.'\n          }));\n        }\n      };\n\n      selectedWallet.provider.on(\"chainChanged\", handleChainChanged);\n\n      // Cleanup\n      return () => {\n        selectedWallet.provider.removeListener(\"chainChanged\", handleChainChanged);\n      };\n    }\n  }, [selectedWallet]);\n\n  // Add permission management functions\n  const checkPermissions = async (provider: any): Promise<boolean> => {\n    try {\n      const permissions = await provider.request({\n        method: \"wallet_getPermissions\"\n      }) as WalletPermission[];\n\n      const hasAccountPermission = permissions.some(\n        permission => permission.parentCapability === \"eth_accounts\"\n      );\n\n      setHasPermissions(hasAccountPermission);\n      return hasAccountPermission;\n    } catch (error) {\n      console.error(\"Error checking permissions:\", error);\n      return false;\n    }\n  };\n\n  const requestPermissions = async (provider: any): Promise<boolean> => {\n    try {\n      const permissions = await provider.request({\n        method: \"wallet_requestPermissions\",\n        params: [{ eth_accounts: {} }]\n      }) as WalletPermission[];\n\n      const hasAccountPermission = permissions.some(\n        permission => permission.parentCapability === \"eth_accounts\"\n      );\n\n      setHasPermissions(hasAccountPermission);\n      return hasAccountPermission;\n    } catch (error: any) {\n      if (error.code === 4001) {\n        setErrors(prev => ({\n          ...prev,\n          permissions: \"Permissions needed to continue.\"\n        }));\n      } else {\n        setErrors(prev => ({\n          ...prev,\n          permissions: \"Failed to request permissions\"\n        }));\n      }\n      return false;\n    }\n  };\n\n  const revokePermissions = async () => {\n    if (baseWalletConnected) {\n      handleDisconnect();\n      setBaseWalletConnected(false);\n      return;\n    }\n    \n    if (!selectedWallet?.provider) return;\n\n    try {\n      await selectedWallet.provider.request({\n        method: \"wallet_revokePermissions\",\n        params: [{ eth_accounts: {} }]\n      });\n\n      handleDisconnect();\n      console.log(\"Permissions revoked successfully\");\n    } catch (error) {\n      console.error(\"Error revoking permissions:\", error);\n    }\n  };\n  \n  const handleDisconnect = () => {\n    // Reset states\n    setHasPermissions(false);\n    setWalletAddress('');\n    setUserAccount('');\n    setSelectedWallet(undefined);\n    setCurrentChainId(null);\n    localStorage.removeItem('walletAddress');\n  };\n\n  const detectCurrentChain = async (provider: any) => {\n    try {\n      const chainId = await provider.request({ method: \"eth_chainId\" });\n      setCurrentChainId(chainId);\n      \n      // Update selected network based on detected chain\n      const chainIdDecimal = parseInt(chainId, 16);\n      const network = SUPPORTED_NETWORKS.find(n => n.chainId === chainIdDecimal);\n      \n      if (network) {\n        setSelectedNetwork(network.id);\n      } else {\n        setErrors(prev => ({\n          ...prev,\n          network: 'Unsupported network detected. Please switch to a supported network.'\n        }));\n      }\n    } catch (error) {\n      console.error('Error detecting chain:', error);\n      setErrors(prev => ({\n        ...prev,\n        network: 'Failed to detect current network'\n      }));\n    }\n  };\n\n  // Validation functions\n  const validateWalletAddress = (address: string): boolean => {\n    const ethAddressRegex = /^0x[a-fA-F0-9]{40}$/;\n    return ethAddressRegex.test(address);\n  };\n\n  const validateForm = (): boolean => {\n    const newErrors: ValidationErrors = {};\n\n    if (!walletAddress) {\n      newErrors.walletAddress = 'Wallet address is required';\n    } else if (!validateWalletAddress(walletAddress)) {\n      newErrors.walletAddress = 'Invalid wallet address';\n    }\n\n    if (!selectedNetwork) {\n      newErrors.network = 'Please select a network';\n    }\n\n    // Validate that current chain matches selected network\n    if (currentChainId) {\n      const currentChainIdDecimal = parseInt(currentChainId, 16);\n      const selectedChainId = SUPPORTED_NETWORKS.find(n => n.id === selectedNetwork)?.chainId;\n      \n      if (currentChainIdDecimal !== selectedChainId) {\n        newErrors.network = 'Selected network does not match connected network';\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const switchNetwork = async (chainId: number) => {\n    if (!selectedWallet?.provider) return;\n    \n    try {\n      await (window as any).ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: `0x${chainId.toString(16)}` }],\n      });\n\n      // Network switch successful, update UI\n      setCurrentChainId(`0x${chainId.toString(16)}`);\n      const network = SUPPORTED_NETWORKS.find(n => n.chainId === chainId);\n      if (network) {\n        setSelectedNetwork(network.id);\n      }\n\n    } catch (error: any) {\n      if (error.code === 4902) {\n        setErrors(prev => ({\n          ...prev,\n          network: 'Network not added to wallet. Please add it first.'\n        }));\n      } else {\n        setErrors(prev => ({\n          ...prev,\n          network: 'Failed to switch network'\n        }));\n      }\n      throw error;\n    }\n  };\n\n  // Update the handleConnect function\n  const handleConnect = async (providerWithInfo: EIP6963ProviderDetail) => {\n    try {\n      setErrors({});\n\n      // First check existing permissions\n      const hasExistingPermissions = await checkPermissions(providerWithInfo.provider);\n      \n      // If no permissions, request them\n      if (!hasExistingPermissions) {\n        const permissionsGranted = await requestPermissions(providerWithInfo.provider);\n        if (!permissionsGranted) {\n          throw new Error('Required permissions not granted');\n        }\n      }\n\n      // Detect current chain\n      await detectCurrentChain(providerWithInfo.provider);\n      \n      // Switch network if needed\n      const network = SUPPORTED_NETWORKS.find(n => n.id === selectedNetwork);\n      if (!network) {\n        throw new Error('Invalid network selected');\n      }\n\n      await switchNetwork(network.chainId);\n\n      const accounts = await providerWithInfo.provider.request({\n        method: \"eth_requestAccounts\"\n      });\n      \n      if (!accounts || !Array.isArray(accounts)) {\n        throw new Error('No accounts returned');\n      }\n\n      const address = accounts[0];\n      if (!validateWalletAddress(address)) {\n        throw new Error('Invalid wallet address format');\n      }\n\n      // Store the wallet address in localStorage\n      localStorage.setItem('walletAddress', address);\n\n      setSelectedWallet(providerWithInfo);\n      setUserAccount(address);\n      setWalletAddress(address);\n\n      fetch('https://localhost5000/agent/has_agent/' + address)\n        .then(response => response.json())\n        .then(data => {\n          if (data.result === 'ok') {\n            setAgentName(data.name);\n          }\n        })\n        .catch(error => console.error('Error fetching agent data:', error));\n    } catch (error) {\n      console.error(error);\n      setErrors(prev => ({\n        ...prev,\n        walletAddress: error instanceof Error ? error.message : 'Failed to connect wallet'\n      }));\n    }\n  };\n\n  const handleSubmit = async () => {\n    setIsSubmitting(true);\n    try {\n      if (!validateForm()) {\n        throw new Error('Please fix validation errors before submitting');\n      }\n\n      // Prepare the analysis data\n      const analysisData = {\n        walletAddress,\n        network: selectedNetwork,\n        chainId: currentChainId,\n        timeframe: selectedTimeframe,\n        analysisTypes: {\n          portfolioAnalysis: (document.getElementById('portfolioAnalysis') as HTMLInputElement)?.checked,\n          riskAssessment: (document.getElementById('riskAssessment') as HTMLInputElement)?.checked,\n          investmentYield: (document.getElementById('investmentYield') as HTMLInputElement)?.checked,\n        },\n        investmentStrategy: (document.getElementById('investmentStrategy') as HTMLSelectElement)?.value,\n        allocationMethod: (document.getElementById('allocationMethod') as HTMLSelectElement)?.value\n      };\n\n      console.log('Submitting analysis:', analysisData);\n      \n      // Check if we need to deploy an agent first\n      if (agentName === '') {\n        console.log('No agent found, deploying new agent...');\n        // Create a name for the agent\n        const agentNameToUse = `FinAdvisor_${walletAddress.slice(0, 6)}`;\n        \n        // Deploy agent\n        const deployResponse = await fetch(`https://localhost5000/agent/deploy/${walletAddress}/${agentNameToUse}`);\n        \n        const deployData = await deployResponse.json();\n        if (deployData.result === 'ok') {\n          console.log('Agent deployed successfully:', deployData.name);\n          setAgentName(deployData.name);\n          // Wait a moment for the agent to be fully deployed\n          await new Promise(resolve => setTimeout(resolve, 2000));\n        } else {\n          throw new Error(deployData.error || 'Failed to deploy agent');\n        }\n      }\n      // Navigate to results\n      window.location.href = '/insights';\n    } catch (error) {\n      console.error(error);\n      setErrors(prev => ({\n        ...prev,\n        submit: error instanceof Error ? error.message : 'Failed to submit analysis'\n      }));\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-blue-900 to-blue-950 text-white p-8 pb-20 sm:p-20\">\n      <header className=\"flex items-center justify-between mb-16\">\n        <div className=\"flex items-center gap-2\">\n          <Moon className=\"w-8 h-8 text-white\" />\n          <span className=\"text-2xl font-bold\">MOON.ai</span>\n        </div>\n        <nav className=\"hidden sm:flex gap-8\">\n          <Link href=\"/home\" className=\"hover:text-blue-300 transition-colors\">Moon</Link>\n          <Link href=\"/about\" className=\"hover:text-blue-300 transition-colors\">About</Link>\n          <Link href=\"/features\" className=\"hover:text-blue-300 transition-colors\">Features</Link>\n        </nav>\n      </header>\n\n      <div className=\"max-w-4xl mx-auto\">\n        <div className=\"bg-white/10 backdrop-blur-lg rounded-lg overflow-hidden border border-blue-800/50\">\n          <div className=\"bg-gradient-to-r from-blue-800 to-blue-900 p-6\">\n            <div className=\"text-2xl font-bold flex items-center gap-2\">\n              <Wallet className=\"w-6 h-6\" />\n              Investment Portfolio Analysis\n            </div>\n            <p className=\"text-blue-200\">Get personalized insights for your investment strategy</p>\n          </div>\n\n          <div className=\"p-6 space-y-6\">\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">Wallet Address</label>\n              <div className=\"flex flex-col sm:flex-row gap-4\">\n                <input\n                  type=\"text\"\n                  value={walletAddress}\n                  readOnly\n                  placeholder=\"Connect your wallet to begin analysis\"\n                  className={`flex-1 p-3 rounded-lg bg-white/5 border ${errors.walletAddress ? 'border-red-500' : 'border-blue-800/50'} text-white placeholder:text-gray-400`}\n                />\n                <div className=\"flex gap-2\">\n                  <select\n                    value={selectedNetwork}\n                    onChange={(e) => setSelectedNetwork(e.target.value)}\n                    disabled={true}\n                    className={`p-3 rounded-lg bg-white/5 border border-blue-800/50 text-white ${\n                      !walletAddress ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'\n                    } appearance-none`}\n                  >\n                    {SUPPORTED_NETWORKS.map((network) => (\n                      <option key={network.id} value={network.id}>\n                        {network.name}\n                      </option>\n                    ))}\n                  </select>\n                  \n                  <div className=\"flex flex-wrap gap-2\">\n                    {walletAddress ? (\n                      <button\n                        onClick={revokePermissions}\n                        className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-3 rounded-lg flex items-center gap-2\"\n                      >\n                        <LogOut className=\"w-5 h-5\" />\n                        Disconnect\n                      </button>\n                    ) : (\n                      <>\n                        {/* Base Wallet Connect Component */}\n                        <div className=\"bg-blue-500 hover:bg-blue-600 text-white rounded-lg transition-colors\">\n                          <BaseWallet onAddressChange={handleBaseWalletConnection}>\n                            <ConnectWallet className=\"px-6 py-3 flex items-center gap-2\">\n                              <img \n                                src=\"https://assets-global.website-files.com/65425b197bd85d362d28771a/65cc4ed3cc0dd5b9ad9f0205_Base-Symbol.svg\" \n                                alt=\"Base\" \n                                className=\"w-6 h-6\" \n                              />\n                              <span>Base Wallet</span>\n                            </ConnectWallet>\n                            <WalletDropdown>\n                              <div className=\"p-4 bg-slate-900 rounded-lg\">\n                                <WalletAdvancedAddressDetails />\n                                <WalletAdvancedWalletActions />\n                                <WalletAdvancedTransactionActions />\n                                <WalletAdvancedTokenHoldings />\n                              </div>\n                            </WalletDropdown>\n                          </BaseWallet>\n                        </div>\n                        \n                        {/* Traditional EIP-6963 Wallet Connect */}\n                        {providers.length > 0 ? providers?.map((provider: EIP6963ProviderDetail) => (\n                          <button \n                            className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg flex items-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                            key={provider.info.uuid} \n                            onClick={() => handleConnect(provider)}\n                            disabled={isSubmitting}\n                          >\n                            <img src={provider.info.icon} alt={provider.info.name} className=\"w-6 h-6\" />\n                            <span>Connect</span>\n                          </button>\n                        )) : (\n                          <div className=\"text-blue-500\">\n                            No Announced Wallet Providers\n                          </div>\n                        )}\n                      </>\n                    )}\n                  </div>\n                </div>\n              </div>\n              {errors.walletAddress && (\n                <p className=\"mt-2 text-red-500 text-sm\">{errors.walletAddress}</p>\n              )}\n              {errors.network && (\n                <p className=\"mt-2 text-red-500 text-sm\">{errors.network}</p>\n              )}\n              {currentChainId && (\n                <p className=\"mt-2 text-gray-400 text-sm\">\n                  Connected to chain: {parseInt(currentChainId, 16)} \n                  ({SUPPORTED_NETWORKS.find(n => n.chainId === parseInt(currentChainId, 16))?.name || 'Unknown'})\n                </p>\n              )}\n            </div>\n\n            {/* Rest of the form components */}\n            <div className=\"grid md:grid-cols-3 gap-4\">\n              <div className=\"p-4 bg-white/5 rounded-lg border border-blue-800/50\">\n                <h3 className=\"font-medium mb-2\">Time Period</h3>\n                <select\n                  value={selectedTimeframe}\n                  onChange={(e) => setSelectedTimeframe(e.target.value)}\n                  className=\"w-full p-2 rounded bg-white/5 border border-blue-800/50 text-white\"\n                >\n                  <option value=\"year\">Past Year</option>\n                  <option value=\"quarter\">Past Quarter</option>\n                  <option value=\"month\">Past Month</option>\n                  <option value=\"custom\">Custom Range</option>\n                </select>\n              </div>\n\n              <div className=\"p-4 bg-white/5 rounded-lg border border-blue-800/50\">\n                <h3 className=\"font-medium mb-2\">Analysis Type</h3>\n                <div className=\"space-y-2\">\n                  <label className=\"flex items-center\">\n                    <input id=\"portfolioAnalysis\" type=\"checkbox\" className=\"mr-2\" defaultChecked />\n                    Portfolio Analysis\n                  </label>\n                  <label className=\"flex items-center\">\n                    <input id=\"riskAssessment\" type=\"checkbox\" className=\"mr-2\" defaultChecked />\n                    Risk Assessment\n                  </label>\n                  <label className=\"flex items-center\">\n                    <input id=\"investmentYield\" type=\"checkbox\" className=\"mr-2\" defaultChecked />\n                    Investment Yield\n                  </label>\n                </div>\n              </div>\n\n              <div className=\"p-4 bg-white/5 rounded-lg border border-blue-800/50\">\n                <h3 className=\"font-medium mb-2\">Investment Strategy</h3>\n                <select id=\"investmentStrategy\" className=\"w-full p-2 rounded bg-white/5 border border-blue-800/50 text-white mb-2\">\n                  <option value=\"growth\">Growth Investing</option>\n                  <option value=\"value\">Value Investing</option>\n                  <option value=\"income\">Income Generation</option>\n                  <option value=\"balanced\">Balanced Approach</option>\n                </select>\n\n                <h3 className=\"font-medium mb-2 mt-4\">Allocation Method</h3>\n                <select id=\"allocationMethod\" className=\"w-full p-2 rounded bg-white/5 border border-blue-800/50 text-white\">\n                  <option value=\"modernPortfolio\">Modern Portfolio Theory</option>\n                  <option value=\"strategicAsset\">Strategic Asset Allocation</option>\n                  <option value=\"tacticalAsset\">Tactical Asset Allocation</option>\n                  <option value=\"riskParity\">Risk Parity</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"flex items-start gap-2 text-sm bg-white/5 p-4 rounded-lg border border-blue-800/50\">\n              <AlertCircle className=\"w-5 h-5 text-blue-400 flex-shrink-0 mt-0.5\" />\n              <p className=\"text-gray-300 flex-1\">\n                This tool provides personalized investment insights for informational purposes only. \n                Please consult with a qualified financial advisor for professional investment advice. \n                Your data is processed securely and never stored on our servers.\n              </p>\n              <button\n                onClick={handleSubmit}\n                disabled={isSubmitting || !walletAddress}\n                className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg flex items-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n              >\n                {isSubmitting ? (\n                  <>\n                    <Clock className=\"w-5 h-5 animate-spin\" />\n                    Processing...\n                  </>\n                ) : (\n                  <>\n                    {agentName === '' ? \"Create Financial Plan\" : (\"View \"+ agentName+\" Insights\")}\n                    <ArrowRight className=\"w-5 h-5\" />\n                  </>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Monitor;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1211, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}