{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///mnt/c/D/ethbuch/planner/FinancialPlanner/src/app/results/page.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect } from 'react';\nimport { Download, Filter, PieChart, ArrowUpRight, Moon, Wallet, LineChart as LineChartIcon, TrendingUp } from 'lucide-react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport Link from 'next/link';\n\nconst Results = () => {\n  const [activeTab, setActiveTab] = useState('summary');\n  const [timeFilter, setTimeFilter] = useState('yearly');\n  const [financialYear, setFinancialYear] = useState('2024');\n  const [analysisData, setAnalysisData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isDemo, setIsDemo] = useState(false);\n\n  // Generate demo data based on current date\n  const generateDemoData = () => {\n    // Create an array of dates covering a full month\n    const currentDate = new Date();\n    const currentMonth = currentDate.getMonth();\n    const currentYear = currentDate.getFullYear();\n    \n    // Generate multiple entries for different days in the month\n    const financialEvents = [];\n    \n    // Salary - beginning of month\n    financialEvents.push({\n      accountId: \"checking-demo\",\n      transactionType: \"income\",\n      category: \"salary\",\n      amount: 5000,\n      date: `${currentYear}-${String(currentMonth + 1).padStart(2, '0')}-05`,\n      budgetAllocation: 0,\n      variance: 0,\n      monthlyTrend: \"stable\"\n    });\n    \n    // Regular expenses throughout month\n    financialEvents.push({\n      accountId: \"checking-demo\",\n      transactionType: \"expense\",\n      category: \"housing\",\n      amount: 1500,\n      date: `${currentYear}-${String(currentMonth + 1).padStart(2, '0')}-06`,\n      budgetAllocation: 1550,\n      variance: 50,\n      monthlyTrend: \"stable\"\n    });\n    \n    financialEvents.push({\n      accountId: \"checking-demo\",\n      transactionType: \"expense\",\n      category: \"groceries\",\n      amount: 120,\n      date: `${currentYear}-${String(currentMonth + 1).padStart(2, '0')}-08`,\n      budgetAllocation: 150,\n      variance: 30,\n      monthlyTrend: \"decreasing\"\n    });\n    \n    financialEvents.push({\n      accountId: \"checking-demo\",\n      transactionType: \"expense\",\n      category: \"groceries\",\n      amount: 85,\n      date: `${currentYear}-${String(currentMonth + 1).padStart(2, '0')}-15`,\n      budgetAllocation: 150,\n      variance: 65,\n      monthlyTrend: \"decreasing\"\n    });\n    \n    financialEvents.push({\n      accountId: \"checking-demo\",\n      transactionType: \"expense\",\n      category: \"groceries\",\n      amount: 110,\n      date: `${currentYear}-${String(currentMonth + 1).padStart(2, '0')}-22`,\n      budgetAllocation: 150,\n      variance: 40,\n      monthlyTrend: \"decreasing\"\n    });\n    \n    financialEvents.push({\n      accountId: \"checking-demo\",\n      transactionType: \"expense\",\n      category: \"utilities\",\n      amount: 180,\n      date: `${currentYear}-${String(currentMonth + 1).padStart(2, '0')}-10`,\n      budgetAllocation: 200,\n      variance: 20,\n      monthlyTrend: \"stable\"\n    });\n    \n    financialEvents.push({\n      accountId: \"checking-demo\",\n      transactionType: \"expense\",\n      category: \"dining\",\n      amount: 75,\n      date: `${currentYear}-${String(currentMonth + 1).padStart(2, '0')}-12`,\n      budgetAllocation: 300,\n      variance: 225,\n      monthlyTrend: \"decreasing\"\n    });\n    \n    financialEvents.push({\n      accountId: \"checking-demo\",\n      transactionType: \"expense\",\n      category: \"dining\",\n      amount: 95,\n      date: `${currentYear}-${String(currentMonth + 1).padStart(2, '0')}-19`,\n      budgetAllocation: 300,\n      variance: 205,\n      monthlyTrend: \"decreasing\"\n    });\n    \n    // Interest - mid-month\n    financialEvents.push({\n      accountId: \"savings-demo\",\n      transactionType: \"income\",\n      category: \"interest\",\n      amount: 25,\n      date: `${currentYear}-${String(currentMonth + 1).padStart(2, '0')}-15`,\n      budgetAllocation: 0,\n      variance: 0,\n      monthlyTrend: \"increasing\"\n    });\n    \n    // Transportation\n    financialEvents.push({\n      accountId: \"checking-demo\",\n      transactionType: \"expense\",\n      category: \"transportation\",\n      amount: 140,\n      date: `${currentYear}-${String(currentMonth + 1).padStart(2, '0')}-20`,\n      budgetAllocation: 150,\n      variance: 10,\n      monthlyTrend: \"stable\"\n    });\n    \n    // Entertainment\n    financialEvents.push({\n      accountId: \"checking-demo\",\n      transactionType: \"expense\",\n      category: \"entertainment\",\n      amount: 65,\n      date: `${currentYear}-${String(currentMonth + 1).padStart(2, '0')}-24`,\n      budgetAllocation: 100,\n      variance: 35,\n      monthlyTrend: \"stable\"\n    });\n    \n    // Transfer to savings\n    financialEvents.push({\n      accountId: \"savings-demo\",\n      transactionType: \"income\",\n      category: \"transfer\",\n      amount: 500,\n      date: `${currentYear}-${String(currentMonth + 1).padStart(2, '0')}-06`,\n      budgetAllocation: 500,\n      variance: 0,\n      monthlyTrend: \"stable\"\n    });\n    \n    // Secondary income\n    financialEvents.push({\n      accountId: \"checking-demo\",\n      transactionType: \"income\",\n      category: \"freelance\",\n      amount: 350,\n      date: `${currentYear}-${String(currentMonth + 1).padStart(2, '0')}-18`,\n      budgetAllocation: 0,\n      variance: 0,\n      monthlyTrend: \"increasing\"\n    });\n  \n    // Calculate monthly totals\n    const totalIncome = financialEvents\n      .filter(event => event.transactionType === 'income')\n      .reduce((sum, event) => sum + event.amount, 0);\n      \n    const totalExpenses = financialEvents\n      .filter(event => event.transactionType === 'expense')\n      .reduce((sum, event) => sum + event.amount, 0);\n      \n    const netCashFlow = totalIncome - totalExpenses;\n    const savingsRate = netCashFlow / totalIncome;\n    \n    return {\n      analysis: {\n        financialEvents,\n        financialHealth: {\n          monthlyExpenses: totalExpenses,\n          monthlyIncome: totalIncome,\n          savingsRate: savingsRate,\n          emergencyFundStatus: \"building\",\n          debtToIncomeRatio: 0.32\n        }\n      },\n      suggestions: [\n        \"Your grocery spending is trending downward - nice work keeping to your budget!\",\n        \"Consider increasing your emergency fund contributions to reach the recommended 6-month coverage.\",\n        \"Your housing expenses are within the recommended 30% of income threshold.\",\n        \"You're currently saving \" + (savingsRate * 100).toFixed(0) + \"% of your income - aim for 20% for optimal financial health.\"\n      ]\n    };\n  };\n\n  // Fetch data from API\n  useEffect(() => {\n    const fetchAnalysisData = async () => {\n      setLoading(true);\n      \n      try {\n        // Get the account ID from localStorage\n        const accountId = localStorage.getItem('accountId') || '';\n        \n        // If no account ID, use demo data instead of throwing an error\n        if (!accountId) {\n          console.log('No account ID found, using demo data');\n          setAnalysisData(generateDemoData());\n          setIsDemo(true);\n          return;\n        }\n        \n        // Call your API endpoint\n        try {\n          const response = await fetch(`https://localhost:5000/agent/analyze/${accountId}`);\n          \n          if (!response.ok) {\n            throw new Error(`API error: ${response.status} ${response.statusText}`);\n          }\n          \n          const data = await response.json();\n          \n          if (data.result === 'error') {\n            throw new Error(`Server error: ${data.error}`);\n          }\n          \n          setAnalysisData(data);\n        } catch (apiError) {\n          console.error('API error:', apiError);\n          // If API call fails, fall back to demo data\n          setAnalysisData(generateDemoData());\n          setIsDemo(true);\n        }\n      } catch (err) {\n        console.error('Error in data handling:', err);\n        setAnalysisData(generateDemoData());\n        setIsDemo(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchAnalysisData();\n  }, []);\n\n  // Calculate financial totals\n  const calculateTotals = () => {\n    if (!analysisData || !analysisData.analysis || !analysisData.analysis.financialEvents) {\n      return { totalIncome: 0, totalExpenses: 0, netCashFlow: 0 };\n    }\n\n    const events = analysisData.analysis.financialEvents;\n    const totalIncome = events\n      .filter(event => event.transactionType === 'income')\n      .reduce((sum, event) => sum + event.amount, 0);\n\n    const totalExpenses = events\n      .filter(event => event.transactionType === 'expense')\n      .reduce((sum, event) => sum + event.amount, 0);\n\n    return {\n      totalIncome,\n      totalExpenses,\n      netCashFlow: totalIncome - totalExpenses\n    };\n  };\n\n  const { totalIncome, totalExpenses, netCashFlow } = calculateTotals();\n\n  // FinancialChart Component\n  const FinancialChart = ({ data }) => {\n    // Sample data to fall back on if data is empty\n    const sampleData = [\n      { label: 'Jan', income: 5000, expenses: 3000, savings: 2000 },\n      { label: 'Feb', income: 5200, expenses: 3100, savings: 2100 },\n      { label: 'Mar', income: 5100, expenses: 3300, savings: 1800 },\n      { label: 'Apr', income: 5300, expenses: 3200, savings: 2100 },\n      { label: 'May', income: 5500, expenses: 3400, savings: 2100 },\n      { label: 'Jun', income: 5400, expenses: 3100, savings: 2300 },\n    ];\n    \n    // Use sample data if no data is provided or data is empty\n    const chartData = data && data.length > 0 ? data : sampleData;\n  \n    return (\n      <div className=\"h-96 mb-6 w-full\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <LineChart\n            data={chartData}\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#374151\" />\n            <XAxis \n              dataKey=\"label\" \n              stroke=\"#9CA3AF\"\n            />\n            <YAxis stroke=\"#9CA3AF\" />\n            <Tooltip \n              formatter={(value) => `$${value.toLocaleString(undefined, {maximumFractionDigits: 2})}`}\n              contentStyle={{ \n                backgroundColor: '#1F2937',\n                border: '1px solid #4B5563'\n              }}\n            />\n            <Legend />\n            <Line \n              type=\"monotone\" \n              dataKey=\"income\" \n              stroke=\"#4ADE80\" \n              strokeWidth={2}\n              activeDot={{ r: 8 }}\n              name=\"Income\"\n              isAnimationActive={true}\n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"expenses\" \n              stroke=\"#F87171\" \n              strokeWidth={2}\n              activeDot={{ r: 8 }}\n              name=\"Expenses\"\n              isAnimationActive={true}\n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"savings\" \n              stroke=\"#60A5FA\" \n              strokeWidth={2}\n              activeDot={{ r: 8 }}\n              name=\"Savings\"\n              isAnimationActive={true}\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  };\n\n  // Prepare chart data\n  const prepareChartData = () => {\n    if (!analysisData || !analysisData.analysis || !analysisData.analysis.financialEvents) return [];\n    \n    const events = analysisData.analysis.financialEvents;\n    \n    // Group by month for yearly view or by day for monthly view\n    const groupedData = {};\n    \n    events.forEach(event => {\n      const date = new Date(event.date);\n      \n      let key;\n      if (timeFilter === 'yearly') {\n        // Group by month for yearly view\n        const month = date.toLocaleString('default', { month: 'short' });\n        key = month;\n      } else {\n        // Group by day for monthly view\n        key = date.getDate().toString();\n      }\n      \n      if (!groupedData[key]) {\n        groupedData[key] = { income: 0, expenses: 0, savings: 0 };\n      }\n      \n      if (event.transactionType === 'income') {\n        groupedData[key].income += event.amount;\n      } else if (event.transactionType === 'expense') {\n        groupedData[key].expenses += event.amount;\n      }\n      \n      // Calculate savings\n      groupedData[key].savings = groupedData[key].income - groupedData[key].expenses;\n    });\n    \n    // Convert to array format for chart and sort by date/label\n    return Object.keys(groupedData)\n      .map(key => ({\n        label: key,\n        income: groupedData[key].income,\n        expenses: groupedData[key].expenses,\n        savings: groupedData[key].savings\n      }))\n      .sort((a, b) => {\n        // If using month names for yearly view\n        if (timeFilter === 'yearly') {\n          const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n          return months.indexOf(a.label) - months.indexOf(b.label);\n        }\n        // If using day numbers for monthly view\n        return parseInt(a.label) - parseInt(b.label);\n      });\n  };\n\n  const chartData = prepareChartData();\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-b from-blue-900 to-blue-950 text-white p-8 flex items-center justify-center\">\n        <div className=\"text-xl\">Loading financial insights...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-blue-900 to-blue-950 text-white p-8 pb-20 sm:p-20\">\n      <header className=\"flex items-center justify-between mb-16\">\n        <div className=\"flex items-center gap-2\">\n          <Moon className=\"w-8 h-8 text-white\" />\n          <span className=\"text-2xl font-bold\">MOON.ai</span>\n        </div>\n        <nav className=\"hidden sm:flex gap-8\">\n          <Link href=\"/home\" className=\"hover:text-blue-300 transition-colors\">Moon</Link>\n          <Link href=\"/results\" className=\"hover:text-blue-300 transition-colors\">Results</Link>\n          <Link href=\"/suggestions\" className=\"hover:text-blue-300 transition-colors\">Suggestions</Link>\n        </nav>\n      </header>\n\n      {isDemo && (\n        <div className=\"max-w-6xl mx-auto mb-6 bg-blue-700/30 border border-blue-500/50 rounded-lg p-4 flex items-center gap-3\">\n          <Wallet className=\"w-5 h-5 text-blue-300\" />\n          <p className=\"text-blue-100\">\n            Viewing demo financial data. <Link href=\"/dashboard\" className=\"underline hover:text-white\">Connect your accounts</Link> to see your personal insights.\n          </p>\n        </div>\n      )}\n\n      <div className=\"max-w-6xl mx-auto space-y-6\">\n        {/* Summary Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          <div className=\"bg-white/10 backdrop-blur-lg rounded-lg p-6 border border-blue-800/50\">\n            <div className=\"text-gray-300 text-sm\">Monthly Income</div>\n            <div className=\"text-2xl font-bold mb-2\">${totalIncome.toLocaleString(undefined, {maximumFractionDigits: 2})}</div>\n            <div className=\"flex items-center text-green-400\">\n              <ArrowUpRight className=\"w-4 h-4\" />\n              <span className=\"text-sm ml-1\">From all sources</span>\n            </div>\n          </div>\n\n          <div className=\"bg-white/10 backdrop-blur-lg rounded-lg p-6 border border-blue-800/50\">\n            <div className=\"text-gray-300 text-sm\">Monthly Expenses</div>\n            <div className=\"text-2xl font-bold mb-2\">${totalExpenses.toLocaleString(undefined, {maximumFractionDigits: 2})}</div>\n            <div className=\"flex items-center text-blue-400\">\n              <Filter className=\"w-4 h-4\" />\n              <span className=\"text-sm ml-1\">Across all categories</span>\n            </div>\n          </div>\n\n          <div className=\"bg-white/10 backdrop-blur-lg rounded-lg p-6 border border-blue-800/50\">\n            <div className=\"text-gray-300 text-sm\">Net Cash Flow</div>\n            <div className=\"text-2xl font-bold mb-2\">${netCashFlow.toLocaleString(undefined, {maximumFractionDigits: 2})}</div>\n            <div className=\"flex items-center text-gray-300\">\n              <TrendingUp className=\"w-4 h-4\" />\n              <span className=\"text-sm ml-1\">Monthly savings</span>\n            </div>\n          </div>\n\n          <div className=\"bg-white/10 backdrop-blur-lg rounded-lg p-6 border border-blue-800/50\">\n            <div className=\"text-gray-300 text-sm\">Savings Rate</div>\n            <div className=\"text-2xl font-bold mb-2\">{(analysisData.analysis.financialHealth.savingsRate * 100).toFixed(0)}%</div>\n            <div className=\"flex items-center text-blue-400\">\n              <PieChart className=\"w-4 h-4\" />\n              <span className=\"text-sm ml-1\">Of total income</span>\n            </div>\n          </div>\n        </div>\n\n        {/* Detailed Analysis */}\n        <div className=\"bg-white/10 backdrop-blur-lg rounded-lg border border-blue-800/50\">\n          <div className=\"p-6 border-b border-blue-800/50\">\n            <div className=\"flex justify-between items-center flex-wrap gap-4\">\n              <div className=\"flex items-center gap-4\">\n                <h2 className=\"text-xl font-semibold\">Financial Analysis</h2>\n                <select \n                  value={financialYear}\n                  onChange={(e) => setFinancialYear(e.target.value)}\n                  className=\"bg-white/5 border border-blue-800/50 rounded-lg px-3 py-2 text-white\"\n                >\n                  <option value=\"2024\">2024 Calendar Year</option>\n                  <option value=\"2023\">2023 Calendar Year</option>\n                </select>\n                <select\n                  value={timeFilter}\n                  onChange={(e) => setTimeFilter(e.target.value)}\n                  className=\"bg-white/5 border border-blue-800/50 rounded-lg px-3 py-2 text-white\"\n                >\n                  <option value=\"monthly\">Monthly View</option>\n                  <option value=\"yearly\">Annual View</option>\n                </select>\n              </div>\n              <Link href=\"/goals\" className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center gap-2 transition-colors\">\n                <TrendingUp className=\"w-4 h-4\" />\n                Financial Goals\n              </Link>\n              <button className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center gap-2 transition-colors\">\n                <Download className=\"w-4 h-4\" />\n                Export Report\n              </button>\n            </div>\n          </div>\n\n          <div className=\"p-6\">\n            {/* Tabs */}\n            <div className=\"border-b border-blue-800/50 mb-6\">\n              <div className=\"flex gap-4\">\n                {['summary', 'transactions', 'budget', 'spending_analysis'].map((tab) => (\n                  <button\n                    key={tab}\n                    onClick={() => setActiveTab(tab)}\n                    className={`px-4 py-2 text-sm capitalize ${\n                      activeTab === tab \n                        ? 'text-blue-400 border-b-2 border-blue-400' \n                        : 'text-gray-300 hover:text-blue-300'\n                    }`}\n                  >\n                    {tab.replace('_', ' ')}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {activeTab === 'summary' && (\n              <>\n                {/* Chart */}\n                <FinancialChart data={chartData} />\n\n                {/* Suggestions */}\n                <div className=\"bg-white/5 rounded-lg p-6 border border-blue-800/50\">\n                  <h3 className=\"text-lg font-semibold mb-4\">Financial Insights</h3>\n                  <ul className=\"space-y-2\">\n                    {analysisData.suggestions.map((suggestion, index) => (\n                      <li key={index} className=\"flex items-start gap-2\">\n                        <Moon className=\"w-5 h-5 text-blue-400 flex-shrink-0 mt-0.5\" />\n                        <span>{suggestion}</span>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </>\n            )}\n\n            {activeTab === 'transactions' && (\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full border-collapse\">\n                  <thead>\n                    <tr className=\"border-b border-blue-800/50\">\n                      <th className=\"px-4 py-2 text-left\">Date</th>\n                      <th className=\"px-4 py-2 text-left\">Category</th>\n                      <th className=\"px-4 py-2 text-left\">Type</th>\n                      <th className=\"px-4 py-2 text-right\">Amount ($)</th>\n                      <th className=\"px-4 py-2 text-right\">Budget</th>\n                      <th className=\"px-4 py-2 text-right\">Variance</th>\n                      <th className=\"px-4 py-2 text-center\">Trend</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {analysisData.analysis.financialEvents.map((event, index) => (\n                      <tr key={index} className=\"border-b border-blue-800/30 hover:bg-white/5\">\n                        <td className=\"px-4 py-2\">{new Date(event.date).toLocaleDateString()}</td>\n                        <td className=\"px-4 py-2 capitalize\">{event.category}</td>\n                        <td className=\"px-4 py-2 capitalize\">{event.transactionType}</td>\n                        <td className={`px-4 py-2 text-right ${event.transactionType === 'income' ? 'text-green-400' : 'text-red-400'}`}>\n                          {event.transactionType === 'income' ? '+' : '-'}${event.amount.toFixed(2)}\n                        </td>\n                        <td className=\"px-4 py-2 text-right\">${event.budgetAllocation?.toFixed(2) || '0.00'}</td>\n                        <td className={`px-4 py-2 text-right ${event.variance > 0 ? 'text-green-400' : event.variance < 0 ? 'text-red-400' : 'text-gray-400'}`}>\n                          {event.variance ? `${event.variance > 0 ? '+' : ''}${event.variance.toFixed(2)}` : '0.00'}\n                        </td>\n                        <td className=\"px-4 py-2 text-center\">\n                          <span className={`px-2 py-1 rounded-full text-xs ${\n                            event.monthlyTrend === 'increasing' \n                              ? 'bg-green-900/50 text-green-200' \n                              : event.monthlyTrend === 'decreasing'\n                                ? 'bg-red-900/50 text-red-200'\n                                : 'bg-blue-900/50 text-blue-200'\n                          }`}>\n                            {event.monthlyTrend || 'stable'}\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            )}\n\n            {activeTab === 'spending_analysis' && (\n              <div className=\"bg-white/5 rounded-lg p-6 border border-blue-800/50\">\n                <h3 className=\"text-lg font-semibold mb-4\">Financial Health Summary</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <h4 className=\"font-medium mb-2\">Income & Expenses</h4>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex justify-between\">\n                        <span>Monthly Income:</span>\n                        <span>${analysisData.analysis.financialHealth.monthlyIncome.toFixed(2)}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Monthly Expenses:</span>\n                        <span>${analysisData.analysis.financialHealth.monthlyExpenses.toFixed(2)}</span>\n                      </div>\n                      <div className=\"flex justify-between font-bold\">\n                        <span>Net Cash Flow:</span>\n                        <span>${(analysisData.analysis.financialHealth.monthlyIncome - analysisData.analysis.financialHealth.monthlyExpenses).toFixed(2)}</span>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"font-medium mb-2\">Financial Ratios</h4>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex justify-between\">\n                        <span>Savings Rate:</span>\n                        <span>{(analysisData.analysis.financialHealth.savingsRate * 100).toFixed(0)}%</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Debt-to-Income Ratio:</span>\n                        <span>{(analysisData.analysis.financialHealth.debtToIncomeRatio * 100).toFixed(0)}%</span>\n                      </div>\n                      <div className=\"flex justify-between font-bold\">\n                        <span>Emergency Fund Status:</span>\n                        <span className=\"capitalize\">{analysisData.analysis.financialHealth.emergencyFundStatus}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Results;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1487, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}